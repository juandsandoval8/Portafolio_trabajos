

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Oct 10 22:35:26 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53  0000                     
    54                           ; Version 2.10
    55                           ; Generated 31/07/2019 GMT
    56                           ; 
    57                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F452 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     
    89                           	psect	idataBANK1
    90  00000B                     __pidataBANK1:
    91                           	opt callstack 0
    92                           
    93                           ;initializer for _bin
    94  00000B  00                 	db	0
    95  00000C  01                 	db	1
    96  00000D  01                 	db	1
    97  00000E  01                 	db	1
    98  00000F  01                 	db	1
    99                           
   100                           	psect	mediumconst
   101  007D9C                     __pmediumconst:
   102                           	opt callstack 0
   103  007D9C  00                 	db	0
   104  007D9D                     __powers_:
   105                           	opt callstack 0
   106  007D9D  0000               	dw	0
   107  007D9F  3F80               	dw	16256
   108  007DA1  0000               	dw	0
   109  007DA3  4120               	dw	16672
   110  007DA5  0000               	dw	0
   111  007DA7  42C8               	dw	17096
   112  007DA9  0000               	dw	0
   113  007DAB  447A               	dw	17530
   114  007DAD  4000               	dw	16384
   115  007DAF  461C               	dw	17948
   116  007DB1  5000               	dw	20480
   117  007DB3  47C3               	dw	18371
   118  007DB5  2400               	dw	9216
   119  007DB7  4974               	dw	18804
   120  007DB9  9680               	dw	38528
   121  007DBB  4B18               	dw	19224
   122  007DBD  BC20               	dw	48160
   123  007DBF  4CBE               	dw	19646
   124  007DC1  6B28               	dw	27432
   125  007DC3  4E6E               	dw	20078
   126  007DC5  02F9               	dw	761
   127  007DC7  5015               	dw	20501
   128  007DC9  78EC               	dw	30956
   129  007DCB  60AD               	dw	24749
   130  007DCD  F2CA               	dw	62154
   131  007DCF  7149               	dw	29001
   132  007DD1                     __end_of__powers_:
   133                           	opt callstack 0
   134  007DD1                     __npowers_:
   135                           	opt callstack 0
   136  007DD1  0000               	dw	0
   137  007DD3  3F80               	dw	16256
   138  007DD5  CCCD               	dw	52429
   139  007DD7  3DCC               	dw	15820
   140  007DD9  D70A               	dw	55050
   141  007DDB  3C23               	dw	15395
   142  007DDD  126F               	dw	4719
   143  007DDF  3A83               	dw	14979
   144  007DE1  B717               	dw	46871
   145  007DE3  38D1               	dw	14545
   146  007DE5  C5AC               	dw	50604
   147  007DE7  3727               	dw	14119
   148  007DE9  37BD               	dw	14269
   149  007DEB  3586               	dw	13702
   150  007DED  BF95               	dw	49045
   151  007DEF  33D6               	dw	13270
   152  007DF1  CC77               	dw	52343
   153  007DF3  322B               	dw	12843
   154  007DF5  705F               	dw	28767
   155  007DF7  3089               	dw	12425
   156  007DF9  E6FF               	dw	59135
   157  007DFB  2EDB               	dw	11995
   158  007DFD  E508               	dw	58632
   159  007DFF  1E3C               	dw	7740
   160  007E01  4260               	dw	16992
   161  007E03  0DA2               	dw	3490
   162  007E05                     __end_of__npowers_:
   163                           	opt callstack 0
   164  007E05                     exp@coeff:
   165                           	opt callstack 0
   166  007E05  0000               	dw	0
   167  007E07  3F80               	dw	16256
   168  007E09  7218               	dw	29208
   169  007E0B  3F31               	dw	16177
   170  007E0D  FDF0               	dw	65008
   171  007E0F  3E75               	dw	15989
   172  007E11  5847               	dw	22599
   173  007E13  3D63               	dw	15715
   174  007E15  9558               	dw	38232
   175  007E17  3C1D               	dw	15389
   176  007E19  C482               	dw	50306
   177  007E1B  3AAE               	dw	15022
   178  007E1D  78A8               	dw	30888
   179  007E1F  3921               	dw	14625
   180  007E21  93EF               	dw	37871
   181  007E23  3780               	dw	14208
   182  007E25  92A0               	dw	37536
   183  007E27  35A7               	dw	13735
   184  007E29  5646               	dw	22086
   185  007E2B  3415               	dw	13333
   186  007E2D                     __end_ofexp@coeff:
   187                           	opt callstack 0
   188  007E2D                     _dpowers:
   189                           	opt callstack 0
   190  007E2D  0001               	dw	1
   191  007E2F  0000               	dw	0
   192  007E31  000A               	dw	10
   193  007E33  0000               	dw	0
   194  007E35  0064               	dw	100
   195  007E37  0000               	dw	0
   196  007E39  03E8               	dw	1000
   197  007E3B  0000               	dw	0
   198  007E3D  2710               	dw	10000
   199  007E3F  0000               	dw	0
   200  007E41  86A0               	dw	34464
   201  007E43  0001               	dw	1
   202  007E45  4240               	dw	16960
   203  007E47  000F               	dw	15
   204  007E49  9680               	dw	38528
   205  007E4B  0098               	dw	152
   206  007E4D  E100               	dw	57600
   207  007E4F  05F5               	dw	1525
   208  007E51  CA00               	dw	51712
   209  007E53  3B9A               	dw	15258
   210  007E55                     __end_of_dpowers:
   211                           	opt callstack 0
   212  007E55                     log@coeff:
   213                           	opt callstack 0
   214  007E55  0000               	dw	0
   215  007E57  0000               	dw	0
   216  007E59  FFC4               	dw	65476
   217  007E5B  3F7F               	dw	16255
   218  007E5D  EF80               	dw	61312
   219  007E5F  BEFF               	dw	48895
   220  007E61  E190               	dw	57744
   221  007E63  3EA9               	dw	16041
   222  007E65  82EC               	dw	33516
   223  007E67  BE76               	dw	48758
   224  007E69  AD82               	dw	44418
   225  007E6B  3E2B               	dw	15915
   226  007E6D  3C0E               	dw	15374
   227  007E6F  BDC3               	dw	48579
   228  007E71  D187               	dw	53639
   229  007E73  3D13               	dw	15635
   230  007E75  7841               	dw	30785
   231  007E77  BBD3               	dw	48083
   232  007E79                     __end_oflog@coeff:
   233                           	opt callstack 0
   234  0000                     _PORTE	set	3972
   235  0000                     _LATE	set	3981
   236  0000                     _TRISE	set	3990
   237  0000                     _PORTD	set	3971
   238  0000                     _LATD	set	3980
   239  0000                     _TRISD	set	3989
   240  0000                     _ADCON1	set	4033
   241  0000                     _LATA	set	3977
   242  0000                     _TRISA	set	3986
   243  0000                     _LATB	set	3978
   244  0000                     _TRISB	set	3987
   245  0000                     _PORTA	set	3968
   246  0000                     _PORTB	set	3969
   247  0000                     _RE0	set	31776
   248  0000                     _RE2	set	31778
   249  007E79                     STR_46:
   250  007E79  52                 	db	82	;'R'
   251  007E7A  65                 	db	101	;'e'
   252  007E7B  73                 	db	115	;'s'
   253  007E7C  3A                 	db	58	;':'
   254  007E7D  20                 	db	32
   255  007E7E  25                 	db	37
   256  007E7F  64                 	db	100	;'d'
   257  007E80  25                 	db	37
   258  007E81  64                 	db	100	;'d'
   259  007E82  25                 	db	37
   260  007E83  64                 	db	100	;'d'
   261  007E84  25                 	db	37
   262  007E85  64                 	db	100	;'d'
   263  007E86  25                 	db	37
   264  007E87  64                 	db	100	;'d'
   265  007E88  25                 	db	37
   266  007E89  64                 	db	100	;'d'
   267  007E8A  25                 	db	37
   268  007E8B  64                 	db	100	;'d'
   269  007E8C  25                 	db	37
   270  007E8D  64                 	db	100	;'d'
   271  007E8E  00                 	db	0
   272  007E8F                     STR_36:
   273  007E8F  4E                 	db	78	;'N'
   274  007E90  75                 	db	117	;'u'
   275  007E91  6D                 	db	109	;'m'
   276  007E92  3A                 	db	58	;':'
   277  007E93  20                 	db	32
   278  007E94  25                 	db	37
   279  007E95  69                 	db	105	;'i'
   280  007E96  25                 	db	37
   281  007E97  69                 	db	105	;'i'
   282  007E98  25                 	db	37
   283  007E99  69                 	db	105	;'i'
   284  007E9A  25                 	db	37
   285  007E9B  69                 	db	105	;'i'
   286  007E9C  25                 	db	37
   287  007E9D  69                 	db	105	;'i'
   288  007E9E  25                 	db	37
   289  007E9F  69                 	db	105	;'i'
   290  007EA0  25                 	db	37
   291  007EA1  69                 	db	105	;'i'
   292  007EA2  25                 	db	37
   293  007EA3  69                 	db	105	;'i'
   294  007EA4  00                 	db	0
   295  007EA5                     STR_37:
   296  007EA5  52                 	db	82	;'R'
   297  007EA6  65                 	db	101	;'e'
   298  007EA7  73                 	db	115	;'s'
   299  007EA8  3A                 	db	58	;':'
   300  007EA9  20                 	db	32
   301  007EAA  25                 	db	37
   302  007EAB  69                 	db	105	;'i'
   303  007EAC  25                 	db	37
   304  007EAD  69                 	db	105	;'i'
   305  007EAE  25                 	db	37
   306  007EAF  69                 	db	105	;'i'
   307  007EB0  25                 	db	37
   308  007EB1  69                 	db	105	;'i'
   309  007EB2  25                 	db	37
   310  007EB3  69                 	db	105	;'i'
   311  007EB4  25                 	db	37
   312  007EB5  69                 	db	105	;'i'
   313  007EB6  25                 	db	37
   314  007EB7  69                 	db	105	;'i'
   315  007EB8  25                 	db	37
   316  007EB9  69                 	db	105	;'i'
   317  007EBA  00                 	db	0
   318  007EBB                     STR_23:
   319  007EBB  52                 	db	82	;'R'
   320  007EBC  20                 	db	32
   321  007EBD  4F                 	db	79	;'O'
   322  007EBE  52                 	db	82	;'R'
   323  007EBF  20                 	db	32
   324  007EC0  20                 	db	32
   325  007EC1  3A                 	db	58	;':'
   326  007EC2  20                 	db	32
   327  007EC3  25                 	db	37
   328  007EC4  64                 	db	100	;'d'
   329  007EC5  25                 	db	37
   330  007EC6  64                 	db	100	;'d'
   331  007EC7  25                 	db	37
   332  007EC8  64                 	db	100	;'d'
   333  007EC9  25                 	db	37
   334  007ECA  64                 	db	100	;'d'
   335  007ECB  00                 	db	0
   336  007ECC                     STR_20:
   337  007ECC  52                 	db	82	;'R'
   338  007ECD  20                 	db	32
   339  007ECE  41                 	db	65	;'A'
   340  007ECF  4E                 	db	78	;'N'
   341  007ED0  44                 	db	68	;'D'
   342  007ED1  20                 	db	32
   343  007ED2  3A                 	db	58	;':'
   344  007ED3  20                 	db	32
   345  007ED4  25                 	db	37
   346  007ED5  64                 	db	100	;'d'
   347  007ED6  25                 	db	37
   348  007ED7  64                 	db	100	;'d'
   349  007ED8  25                 	db	37
   350  007ED9  64                 	db	100	;'d'
   351  007EDA  25                 	db	37
   352  007EDB  64                 	db	100	;'d'
   353  007EDC  00                 	db	0
   354  007EDD                     STR_32:
   355  007EDD  52                 	db	82	;'R'
   356  007EDE  20                 	db	32
   357  007EDF  4E                 	db	78	;'N'
   358  007EE0  4F                 	db	79	;'O'
   359  007EE1  52                 	db	82	;'R'
   360  007EE2  20                 	db	32
   361  007EE3  3A                 	db	58	;':'
   362  007EE4  20                 	db	32
   363  007EE5  25                 	db	37
   364  007EE6  64                 	db	100	;'d'
   365  007EE7  25                 	db	37
   366  007EE8  64                 	db	100	;'d'
   367  007EE9  25                 	db	37
   368  007EEA  64                 	db	100	;'d'
   369  007EEB  25                 	db	37
   370  007EEC  64                 	db	100	;'d'
   371  007EED  00                 	db	0
   372  007EEE                     STR_26:
   373  007EEE  52                 	db	82	;'R'
   374  007EEF  20                 	db	32
   375  007EF0  58                 	db	88	;'X'
   376  007EF1  4F                 	db	79	;'O'
   377  007EF2  52                 	db	82	;'R'
   378  007EF3  20                 	db	32
   379  007EF4  3A                 	db	58	;':'
   380  007EF5  20                 	db	32
   381  007EF6  25                 	db	37
   382  007EF7  64                 	db	100	;'d'
   383  007EF8  25                 	db	37
   384  007EF9  64                 	db	100	;'d'
   385  007EFA  25                 	db	37
   386  007EFB  64                 	db	100	;'d'
   387  007EFC  25                 	db	37
   388  007EFD  64                 	db	100	;'d'
   389  007EFE  00                 	db	0
   390  007EFF                     STR_29:
   391  007EFF  52                 	db	82	;'R'
   392  007F00  20                 	db	32
   393  007F01  4E                 	db	78	;'N'
   394  007F02  41                 	db	65	;'A'
   395  007F03  4E                 	db	78	;'N'
   396  007F04  44                 	db	68	;'D'
   397  007F05  3A                 	db	58	;':'
   398  007F06  20                 	db	32
   399  007F07  25                 	db	37
   400  007F08  64                 	db	100	;'d'
   401  007F09  25                 	db	37
   402  007F0A  64                 	db	100	;'d'
   403  007F0B  25                 	db	37
   404  007F0C  64                 	db	100	;'d'
   405  007F0D  25                 	db	37
   406  007F0E  64                 	db	100	;'d'
   407  007F0F  00                 	db	0
   408  007F10                     STR_35:
   409  007F10  52                 	db	82	;'R'
   410  007F11  20                 	db	32
   411  007F12  58                 	db	88	;'X'
   412  007F13  4E                 	db	78	;'N'
   413  007F14  4F                 	db	79	;'O'
   414  007F15  52                 	db	82	;'R'
   415  007F16  3A                 	db	58	;':'
   416  007F17  20                 	db	32
   417  007F18  25                 	db	37
   418  007F19  64                 	db	100	;'d'
   419  007F1A  25                 	db	37
   420  007F1B  64                 	db	100	;'d'
   421  007F1C  25                 	db	37
   422  007F1D  64                 	db	100	;'d'
   423  007F1E  25                 	db	37
   424  007F1F  64                 	db	100	;'d'
   425  007F20  00                 	db	0
   426  007F21                     STR_17:
   427  007F21  52                 	db	82	;'R'
   428  007F22  65                 	db	101	;'e'
   429  007F23  73                 	db	115	;'s'
   430  007F24  75                 	db	117	;'u'
   431  007F25  6C                 	db	108	;'l'
   432  007F26  74                 	db	116	;'t'
   433  007F27  61                 	db	97	;'a'
   434  007F28  64                 	db	100	;'d'
   435  007F29  6F                 	db	111	;'o'
   436  007F2A  3A                 	db	58	;':'
   437  007F2B  20                 	db	32
   438  007F2C  3C                 	db	60	;'<'
   439  007F2D  2F                 	db	47
   440  007F2E  33                 	db	51	;'3'
   441  007F2F  00                 	db	0
   442  007F30                     STR_7:
   443  007F30  52                 	db	82	;'R'
   444  007F31  65                 	db	101	;'e'
   445  007F32  73                 	db	115	;'s'
   446  007F33  75                 	db	117	;'u'
   447  007F34  6C                 	db	108	;'l'
   448  007F35  74                 	db	116	;'t'
   449  007F36  61                 	db	97	;'a'
   450  007F37  64                 	db	100	;'d'
   451  007F38  6F                 	db	111	;'o'
   452  007F39  3A                 	db	58	;':'
   453  007F3A  20                 	db	32
   454  007F3B  20                 	db	32
   455  007F3C  25                 	db	37
   456  007F3D  69                 	db	105	;'i'
   457  007F3E  00                 	db	0
   458  007F3F                     STR_40:
   459  007F3F  25                 	db	37
   460  007F40  69                 	db	105	;'i'
   461  007F41  20                 	db	32
   462  007F42  50                 	db	80	;'P'
   463  007F43  6F                 	db	111	;'o'
   464  007F44  74                 	db	116	;'t'
   465  007F45  65                 	db	101	;'e'
   466  007F46  6E                 	db	110	;'n'
   467  007F47  63                 	db	99	;'c'
   468  007F48  69                 	db	105	;'i'
   469  007F49  61                 	db	97	;'a'
   470  007F4A  20                 	db	32
   471  007F4B  25                 	db	37
   472  007F4C  69                 	db	105	;'i'
   473  007F4D  00                 	db	0
   474  007F4E                     STR_10:
   475  007F4E  52                 	db	82	;'R'
   476  007F4F  65                 	db	101	;'e'
   477  007F50  73                 	db	115	;'s'
   478  007F51  75                 	db	117	;'u'
   479  007F52  6C                 	db	108	;'l'
   480  007F53  74                 	db	116	;'t'
   481  007F54  61                 	db	97	;'a'
   482  007F55  64                 	db	100	;'d'
   483  007F56  6F                 	db	111	;'o'
   484  007F57  3A                 	db	58	;':'
   485  007F58  20                 	db	32
   486  007F59  2D                 	db	45
   487  007F5A  25                 	db	37
   488  007F5B  69                 	db	105	;'i'
   489  007F5C  00                 	db	0
   490  007F5D                     STR_4:
   491  007F5D  52                 	db	82	;'R'
   492  007F5E  65                 	db	101	;'e'
   493  007F5F  73                 	db	115	;'s'
   494  007F60  75                 	db	117	;'u'
   495  007F61  6C                 	db	108	;'l'
   496  007F62  74                 	db	116	;'t'
   497  007F63  61                 	db	97	;'a'
   498  007F64  64                 	db	100	;'d'
   499  007F65  6F                 	db	111	;'o'
   500  007F66  3A                 	db	58	;':'
   501  007F67  20                 	db	32
   502  007F68  25                 	db	37
   503  007F69  69                 	db	105	;'i'
   504  007F6A  00                 	db	0
   505  007F6B                     STR_42:
   506  007F6B  25                 	db	37
   507  007F6C  69                 	db	105	;'i'
   508  007F6D  20                 	db	32
   509  007F6E  52                 	db	82	;'R'
   510  007F6F  61                 	db	97	;'a'
   511  007F70  69                 	db	105	;'i'
   512  007F71  7A                 	db	122	;'z'
   513  007F72  20                 	db	32
   514  007F73  64                 	db	100	;'d'
   515  007F74  65                 	db	101	;'e'
   516  007F75  20                 	db	32
   517  007F76  25                 	db	37
   518  007F77  69                 	db	105	;'i'
   519  007F78  00                 	db	0
   520  007F79                     STR_44:
   521  007F79  4E                 	db	78	;'N'
   522  007F7A  75                 	db	117	;'u'
   523  007F7B  6D                 	db	109	;'m'
   524  007F7C  3A                 	db	58	;':'
   525  007F7D  25                 	db	37
   526  007F7E  69                 	db	105	;'i'
   527  007F7F  25                 	db	37
   528  007F80  69                 	db	105	;'i'
   529  007F81  25                 	db	37
   530  007F82  69                 	db	105	;'i'
   531  007F83  25                 	db	37
   532  007F84  69                 	db	105	;'i'
   533  007F85  00                 	db	0
   534  007F86                     STR_1:
   535  007F86  44                 	db	68	;'D'
   536  007F87  6A                 	db	106	;'j'
   537  007F88  20                 	db	32
   538  007F89  46                 	db	70	;'F'
   539  007F8A  75                 	db	117	;'u'
   540  007F8B  6D                 	db	109	;'m'
   541  007F8C  61                 	db	97	;'a'
   542  007F8D  72                 	db	114	;'r'
   543  007F8E  61                 	db	97	;'a'
   544  007F8F  74                 	db	116	;'t'
   545  007F90  74                 	db	116	;'t'
   546  007F91  6F                 	db	111	;'o'
   547  007F92  00                 	db	0
   548  007F93                     STR_18:
   549  007F93  41                 	db	65	;'A'
   550  007F94  3D                 	db	61	;'='
   551  007F95  25                 	db	37
   552  007F96  69                 	db	105	;'i'
   553  007F97  25                 	db	37
   554  007F98  69                 	db	105	;'i'
   555  007F99  25                 	db	37
   556  007F9A  69                 	db	105	;'i'
   557  007F9B  25                 	db	37
   558  007F9C  69                 	db	105	;'i'
   559  007F9D  00                 	db	0
   560  007F9E                     STR_19:
   561  007F9E  42                 	db	66	;'B'
   562  007F9F  3D                 	db	61	;'='
   563  007FA0  25                 	db	37
   564  007FA1  69                 	db	105	;'i'
   565  007FA2  25                 	db	37
   566  007FA3  69                 	db	105	;'i'
   567  007FA4  25                 	db	37
   568  007FA5  69                 	db	105	;'i'
   569  007FA6  25                 	db	37
   570  007FA7  69                 	db	105	;'i'
   571  007FA8  00                 	db	0
   572  007FA9                     STR_43:
   573  007FA9  52                 	db	82	;'R'
   574  007FAA  74                 	db	116	;'t'
   575  007FAB  61                 	db	97	;'a'
   576  007FAC  3A                 	db	58	;':'
   577  007FAD  20                 	db	32
   578  007FAE  25                 	db	37
   579  007FAF  2E                 	db	46
   580  007FB0  32                 	db	50	;'2'
   581  007FB1  66                 	db	102	;'f'
   582  007FB2  00                 	db	0
   583  007FB3                     STR_3:
   584  007FB3  25                 	db	37
   585  007FB4  69                 	db	105	;'i'
   586  007FB5  20                 	db	32
   587  007FB6  20                 	db	32
   588  007FB7  2B                 	db	43
   589  007FB8  20                 	db	32
   590  007FB9  25                 	db	37
   591  007FBA  69                 	db	105	;'i'
   592  007FBB  00                 	db	0
   593  007FBC                     STR_2:
   594  007FBC  50                 	db	80	;'P'
   595  007FBD  72                 	db	114	;'r'
   596  007FBE  65                 	db	101	;'e'
   597  007FBF  73                 	db	115	;'s'
   598  007FC0  65                 	db	101	;'e'
   599  007FC1  6E                 	db	110	;'n'
   600  007FC2  74                 	db	116	;'t'
   601  007FC3  73                 	db	115	;'s'
   602  007FC4  00                 	db	0
   603  007FC5                     STR_41:
   604  007FC5  52                 	db	82	;'R'
   605  007FC6  74                 	db	116	;'t'
   606  007FC7  61                 	db	97	;'a'
   607  007FC8  3A                 	db	58	;':'
   608  007FC9  20                 	db	32
   609  007FCA  25                 	db	37
   610  007FCB  69                 	db	105	;'i'
   611  007FCC  00                 	db	0
   612  007FCD                     STR_12:
   613  007FCD  2A                 	db	42
   614  007FCE  20                 	db	32
   615  007FCF  25                 	db	37
   616  007FD0  69                 	db	105	;'i'
   617  007FD1  00                 	db	0
   618  007FD2                     STR_6:
   619  007FD2  2D                 	db	45
   620  007FD3  20                 	db	32
   621  007FD4  25                 	db	37
   622  007FD5  69                 	db	105	;'i'
   623  007FD6  00                 	db	0
   624  007FD7                     STR_15:
   625  007FD7  2F                 	db	47
   626  007FD8  20                 	db	32
   627  007FD9  25                 	db	37
   628  007FDA  69                 	db	105	;'i'
   629  007FDB  00                 	db	0
   630  007FDC                     STR_45:
   631  007FDC  42                 	db	66	;'B'
   632  007FDD  3D                 	db	61	;'='
   633  007FDE  25                 	db	37
   634  007FDF  69                 	db	105	;'i'
   635  007FE0  00                 	db	0
   636  007FE1                     STR_70:
   637  007FE1  44                 	db	68	;'D'
   638  007FE2  4F                 	db	79	;'O'
   639  007FE3  00                 	db	0
   640  007FE4                     STR_48:
   641  007FE4  20                 	db	32
   642  007FE5  00                 	db	0
   643  007FE6                     STR_52:
   644  007FE6  41                 	db	65	;'A'
   645  007FE7  00                 	db	0
   646  007FE8                     STR_57:
   647  007FE8  44                 	db	68	;'D'
   648  007FE9  00                 	db	0
   649  007FEA                     STR_66:
   650  007FEA  45                 	db	69	;'E'
   651  007FEB  00                 	db	0
   652  007FEC                     STR_60:
   653  007FEC  47                 	db	71	;'G'
   654  007FED  00                 	db	0
   655  007FEE                     STR_69:
   656  007FEE  49                 	db	73	;'I'
   657  007FEF  00                 	db	0
   658  007FF0                     STR_50:
   659  007FF0  4A                 	db	74	;'J'
   660  007FF1  00                 	db	0
   661  007FF2                     STR_71:
   662  007FF2  4B                 	db	75	;'K'
   663  007FF3  00                 	db	0
   664  007FF4                     STR_58:
   665  007FF4  4C                 	db	76	;'L'
   666  007FF5  00                 	db	0
   667  007FF6                     STR_59:
   668  007FF6  4E                 	db	78	;'N'
   669  007FF7  00                 	db	0
   670  007FF8                     STR_55:
   671  007FF8  53                 	db	83	;'S'
   672  007FF9  00                 	db	0
   673  007FFA                     STR_56:
   674  007FFA  55                 	db	85	;'U'
   675  007FFB  00                 	db	0
   676  007FFC                     STR_63:
   677  007FFC  56                 	db	86	;'V'
   678  007FFD  00                 	db	0
   679  0000                     
   680                           ; #config settings
   681  007FFE  00                 	db	0	; dummy byte at the end
   682  0000                     
   683                           	psect	cinit
   684  006694                     __pcinit:
   685                           	opt callstack 0
   686  006694                     start_initialization:
   687                           	opt callstack 0
   688  006694                     __initialization:
   689                           	opt callstack 0
   690                           
   691                           ; Initialize objects allocated to BANK1 (5 bytes)
   692                           ; load TBLPTR registers with __pidataBANK1
   693  006694  0E0B               	movlw	low __pidataBANK1
   694  006696  6EF6               	movwf	tblptrl,c
   695  006698  0E00               	movlw	high __pidataBANK1
   696  00669A  6EF7               	movwf	tblptrh,c
   697  00669C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   698  00669E  6EF8               	movwf	tblptru,c
   699  0066A0  EE01  F02C         	lfsr	0,__pdataBANK1
   700  0066A4  EE10 F005          	lfsr	1,5
   701  0066A8                     copy_data0:
   702  0066A8  0009               	tblrd		*+
   703  0066AA  CFF5 FFEE          	movff	tablat,postinc0
   704  0066AE  50E5               	movf	postdec1,w,c
   705  0066B0  50E1               	movf	fsr1l,w,c
   706  0066B2  E1FA               	bnz	copy_data0
   707                           
   708                           ; Clear objects allocated to BANK1 (44 bytes)
   709  0066B4  EE01  F000         	lfsr	0,__pbssBANK1
   710  0066B8  0E2C               	movlw	44
   711  0066BA                     clear_0:
   712  0066BA  6AEE               	clrf	postinc0,c
   713  0066BC  06E8               	decf	wreg,f,c
   714  0066BE  E1FD               	bnz	clear_0
   715                           
   716                           ; Clear objects allocated to BANK0 (65 bytes)
   717  0066C0  EE00  F080         	lfsr	0,__pbssBANK0
   718  0066C4  0E41               	movlw	65
   719  0066C6                     clear_1:
   720  0066C6  6AEE               	clrf	postinc0,c
   721  0066C8  06E8               	decf	wreg,f,c
   722  0066CA  E1FD               	bnz	clear_1
   723  0066CC                     end_of_initialization:
   724                           	opt callstack 0
   725  0066CC                     __end_of__initialization:
   726                           	opt callstack 0
   727  0066CC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   728  0066CE  6EF8               	movwf	tblptru,c
   729  0066D0  0100               	movlb	0
   730  0066D2  EF62  F014         	goto	_main	;jump to C main() function
   731                           
   732                           	psect	bssBANK0
   733  000080                     __pbssBANK0:
   734                           	opt callstack 0
   735  000080                     _bincor:
   736                           	opt callstack 0
   737  000080                     	ds	9
   738  000089                     _binco:
   739                           	opt callstack 0
   740  000089                     	ds	8
   741  000091                     _binc:
   742                           	opt callstack 0
   743  000091                     	ds	8
   744  000099                     _bin3:
   745                           	opt callstack 0
   746  000099                     	ds	5
   747  00009E                     _bin2:
   748                           	opt callstack 0
   749  00009E                     	ds	5
   750  0000A3                     _bin1:
   751                           	opt callstack 0
   752  0000A3                     	ds	5
   753  0000A8                     _Y:
   754                           	opt callstack 0
   755  0000A8                     	ds	4
   756  0000AC                     _X:
   757                           	opt callstack 0
   758  0000AC                     	ds	4
   759  0000B0                     _errno:
   760                           	opt callstack 0
   761  0000B0                     	ds	2
   762  0000B2                     _tuputamadre:
   763                           	opt callstack 0
   764  0000B2                     	ds	2
   765  0000B4                     _num:
   766                           	opt callstack 0
   767  0000B4                     	ds	2
   768  0000B6                     _R:
   769                           	opt callstack 0
   770  0000B6                     	ds	1
   771  0000B7                     _G:
   772                           	opt callstack 0
   773  0000B7                     	ds	1
   774  0000B8                     _F:
   775                           	opt callstack 0
   776  0000B8                     	ds	1
   777  0000B9                     _E:
   778                           	opt callstack 0
   779  0000B9                     	ds	1
   780  0000BA                     _C:
   781                           	opt callstack 0
   782  0000BA                     	ds	1
   783  0000BB                     _D:
   784                           	opt callstack 0
   785  0000BB                     	ds	1
   786  0000BC                     _PB:
   787                           	opt callstack 0
   788  0000BC                     	ds	1
   789  0000BD                     _S:
   790                           	opt callstack 0
   791  0000BD                     	ds	1
   792  0000BE                     _A:
   793                           	opt callstack 0
   794  0000BE                     	ds	1
   795  0000BF                     _t:
   796                           	opt callstack 0
   797  0000BF                     	ds	1
   798  0000C0                     _B:
   799                           	opt callstack 0
   800  0000C0                     	ds	1
   801                           
   802                           	psect	bssBANK1
   803  000100                     __pbssBANK1:
   804                           	opt callstack 0
   805  000100                     _Z:
   806                           	opt callstack 0
   807  000100                     	ds	4
   808  000104                     _buffer:
   809                           	opt callstack 0
   810  000104                     	ds	40
   811                           
   812                           	psect	dataBANK1
   813  00012C                     __pdataBANK1:
   814                           	opt callstack 0
   815  00012C                     _bin:
   816                           	opt callstack 0
   817  00012C                     	ds	5
   818                           
   819                           	psect	cstackBANK0
   820  0000C1                     __pcstackBANK0:
   821                           	opt callstack 0
   822  0000C1                     ?_sprintf:
   823                           	opt callstack 0
   824  0000C1                     ?_exp:
   825                           	opt callstack 0
   826  0000C1                     sprintf@sp:
   827                           	opt callstack 0
   828  0000C1                     exp@x:
   829                           	opt callstack 0
   830                           
   831                           ; 4 bytes @ 0x0
   832  0000C1                     	ds	2
   833  0000C3                     sprintf@f:
   834                           	opt callstack 0
   835                           
   836                           ; 2 bytes @ 0x2
   837  0000C3                     	ds	2
   838  0000C5                     _exp$984:
   839                           	opt callstack 0
   840                           
   841                           ; 4 bytes @ 0x4
   842  0000C5                     	ds	4
   843  0000C9                     exp@exponent:
   844                           	opt callstack 0
   845                           
   846                           ; 2 bytes @ 0x8
   847  0000C9                     	ds	2
   848  0000CB                     exp@sign:
   849                           	opt callstack 0
   850                           
   851                           ; 1 bytes @ 0xA
   852  0000CB                     	ds	1
   853  0000CC                     ?_pow:
   854                           	opt callstack 0
   855  0000CC                     pow@x:
   856                           	opt callstack 0
   857                           
   858                           ; 4 bytes @ 0xB
   859  0000CC                     	ds	4
   860  0000D0                     pow@y:
   861                           	opt callstack 0
   862                           
   863                           ; 4 bytes @ 0xF
   864  0000D0                     	ds	4
   865  0000D4                     _pow$982:
   866                           	opt callstack 0
   867                           
   868                           ; 4 bytes @ 0x13
   869  0000D4                     	ds	1
   870  0000D5                     _sprintf$981:
   871                           	opt callstack 0
   872                           
   873                           ; 4 bytes @ 0x14
   874  0000D5                     	ds	3
   875  0000D8                     _pow$983:
   876                           	opt callstack 0
   877                           
   878                           ; 4 bytes @ 0x17
   879  0000D8                     	ds	1
   880  0000D9                     sprintf@ap:
   881                           	opt callstack 0
   882                           
   883                           ; 2 bytes @ 0x18
   884  0000D9                     	ds	2
   885  0000DB                     sprintf@ccnt:
   886                           	opt callstack 0
   887                           
   888                           ; 2 bytes @ 0x1A
   889  0000DB                     	ds	1
   890  0000DC                     pow@sign:
   891                           	opt callstack 0
   892                           
   893                           ; 1 bytes @ 0x1B
   894  0000DC                     	ds	1
   895  0000DD                     sprintf@flag:
   896                           	opt callstack 0
   897  0000DD                     pow@yi:
   898                           	opt callstack 0
   899                           
   900                           ; 4 bytes @ 0x1C
   901  0000DD                     	ds	2
   902  0000DF                     sprintf@eexp:
   903                           	opt callstack 0
   904                           
   905                           ; 2 bytes @ 0x1E
   906  0000DF                     	ds	2
   907  0000E1                     sprintf@tmpval:
   908                           	opt callstack 0
   909                           
   910                           ; 4 bytes @ 0x20
   911  0000E1                     	ds	4
   912  0000E5                     sprintf@val:
   913                           	opt callstack 0
   914                           
   915                           ; 4 bytes @ 0x24
   916  0000E5                     	ds	4
   917  0000E9                     sprintf@fval:
   918                           	opt callstack 0
   919                           
   920                           ; 4 bytes @ 0x28
   921  0000E9                     	ds	4
   922  0000ED                     sprintf@prec:
   923                           	opt callstack 0
   924                           
   925                           ; 2 bytes @ 0x2C
   926  0000ED                     	ds	2
   927  0000EF                     sprintf@c:
   928                           	opt callstack 0
   929                           
   930                           ; 1 bytes @ 0x2E
   931  0000EF                     	ds	1
   932  0000F0                     ??_main:
   933                           
   934                           ; 1 bytes @ 0x2F
   935  0000F0                     	ds	2
   936  0000F2                     _main$976:
   937                           	opt callstack 0
   938                           
   939                           ; 4 bytes @ 0x31
   940  0000F2                     	ds	4
   941  0000F6                     _main$977:
   942                           	opt callstack 0
   943                           
   944                           ; 4 bytes @ 0x35
   945  0000F6                     	ds	4
   946  0000FA                     _main$975:
   947                           	opt callstack 0
   948                           
   949                           ; 4 bytes @ 0x39
   950  0000FA                     	ds	4
   951                           
   952                           	psect	cstackCOMRAM
   953  000001                     __pcstackCOMRAM:
   954                           	opt callstack 0
   955  000001                     ??_ini_LCD:
   956  000001                     ??_ins_LCD:
   957  000001                     ??_isdigit:
   958  000001                     ??_dato_LCD:
   959  000001                     ?___wmul:
   960                           	opt callstack 0
   961  000001                     ?___awmod:
   962                           	opt callstack 0
   963  000001                     ?___lwmod:
   964                           	opt callstack 0
   965  000001                     ?__tdiv_to_l_:
   966                           	opt callstack 0
   967  000001                     ?__div_to_l_:
   968                           	opt callstack 0
   969  000001                     ?___fldiv:
   970                           	opt callstack 0
   971  000001                     ?___lldiv:
   972                           	opt callstack 0
   973  000001                     ?___flneg:
   974                           	opt callstack 0
   975  000001                     ___lbdiv@divisor:
   976                           	opt callstack 0
   977  000001                     ___wmul@multiplier:
   978                           	opt callstack 0
   979  000001                     ___awmod@dividend:
   980                           	opt callstack 0
   981  000001                     ___lwmod@dividend:
   982                           	opt callstack 0
   983  000001                     ___lldiv@dividend:
   984                           	opt callstack 0
   985  000001                     __div_to_l_@f1:
   986                           	opt callstack 0
   987  000001                     ___flge@ff1:
   988                           	opt callstack 0
   989  000001                     ___flneg@f1:
   990                           	opt callstack 0
   991  000001                     __tdiv_to_l_@f1:
   992                           	opt callstack 0
   993  000001                     ___fldiv@b:
   994                           	opt callstack 0
   995                           
   996                           ; 4 bytes @ 0x0
   997  000001                     	ds	1
   998  000002                     dato_LCD@dato:
   999                           	opt callstack 0
  1000  000002                     ins_LCD@dato:
  1001                           	opt callstack 0
  1002  000002                     ___lbdiv@dividend:
  1003                           	opt callstack 0
  1004  000002                     _isdigit$703:
  1005                           	opt callstack 0
  1006                           
  1007                           ; 1 bytes @ 0x1
  1008  000002                     	ds	1
  1009  000003                     write_LCD@tam:
  1010                           	opt callstack 0
  1011  000003                     ___lbdiv@counter:
  1012                           	opt callstack 0
  1013  000003                     isdigit@c:
  1014                           	opt callstack 0
  1015  000003                     ___wmul@multiplicand:
  1016                           	opt callstack 0
  1017  000003                     ___awmod@divisor:
  1018                           	opt callstack 0
  1019  000003                     ___lwmod@divisor:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x2
  1023  000003                     	ds	1
  1024  000004                     write_LCD@i:
  1025                           	opt callstack 0
  1026  000004                     ___lbdiv@quotient:
  1027                           	opt callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x3
  1030  000004                     	ds	1
  1031  000005                     ___awmod@counter:
  1032                           	opt callstack 0
  1033  000005                     ___lwmod@counter:
  1034                           	opt callstack 0
  1035  000005                     ___wmul@product:
  1036                           	opt callstack 0
  1037  000005                     ___lldiv@divisor:
  1038                           	opt callstack 0
  1039  000005                     __div_to_l_@f2:
  1040                           	opt callstack 0
  1041  000005                     ___flge@ff2:
  1042                           	opt callstack 0
  1043  000005                     __tdiv_to_l_@f2:
  1044                           	opt callstack 0
  1045  000005                     ___fldiv@a:
  1046                           	opt callstack 0
  1047                           
  1048                           ; 4 bytes @ 0x4
  1049  000005                     	ds	1
  1050  000006                     ?___lwdiv:
  1051                           	opt callstack 0
  1052  000006                     ___awmod@sign:
  1053                           	opt callstack 0
  1054  000006                     ___lwdiv@dividend:
  1055                           	opt callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x5
  1058  000006                     	ds	1
  1059  000007                     ?___awdiv:
  1060                           	opt callstack 0
  1061  000007                     ___awdiv@dividend:
  1062                           	opt callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x6
  1065  000007                     	ds	1
  1066  000008                     ___lwdiv@divisor:
  1067                           	opt callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x7
  1070  000008                     	ds	1
  1071  000009                     ??__tdiv_to_l_:
  1072  000009                     ??___fldiv:
  1073  000009                     ??___flge:
  1074  000009                     ___awdiv@divisor:
  1075                           	opt callstack 0
  1076  000009                     ___lldiv@quotient:
  1077                           	opt callstack 0
  1078  000009                     __div_to_l_@quot:
  1079                           	opt callstack 0
  1080                           
  1081                           ; 4 bytes @ 0x8
  1082  000009                     	ds	1
  1083  00000A                     ___lwdiv@quotient:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x9
  1087  00000A                     	ds	1
  1088  00000B                     ___awdiv@counter:
  1089                           	opt callstack 0
  1090                           
  1091                           ; 1 bytes @ 0xA
  1092  00000B                     	ds	1
  1093  00000C                     ___awdiv@sign:
  1094                           	opt callstack 0
  1095  00000C                     ___lwdiv@counter:
  1096                           	opt callstack 0
  1097  00000C                     __tdiv_to_l_@quot:
  1098                           	opt callstack 0
  1099                           
  1100                           ; 4 bytes @ 0xB
  1101  00000C                     	ds	1
  1102  00000D                     ___lldiv@counter:
  1103                           	opt callstack 0
  1104  00000D                     __div_to_l_@cntr:
  1105                           	opt callstack 0
  1106  00000D                     ___awdiv@quotient:
  1107                           	opt callstack 0
  1108  00000D                     ___fldiv@rem:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 4 bytes @ 0xC
  1112  00000D                     	ds	1
  1113  00000E                     ?___llmod:
  1114                           	opt callstack 0
  1115  00000E                     __div_to_l_@exp1:
  1116                           	opt callstack 0
  1117  00000E                     ___llmod@dividend:
  1118                           	opt callstack 0
  1119                           
  1120                           ; 4 bytes @ 0xD
  1121  00000E                     	ds	1
  1122  00000F                     ?___xxtofl:
  1123                           	opt callstack 0
  1124  00000F                     ___xxtofl@val:
  1125                           	opt callstack 0
  1126                           
  1127                           ; 4 bytes @ 0xE
  1128  00000F                     	ds	1
  1129  000010                     __tdiv_to_l_@cntr:
  1130                           	opt callstack 0
  1131                           
  1132                           ; 1 bytes @ 0xF
  1133  000010                     	ds	1
  1134  000011                     __tdiv_to_l_@exp1:
  1135                           	opt callstack 0
  1136  000011                     ___fldiv@sign:
  1137                           	opt callstack 0
  1138                           
  1139                           ; 1 bytes @ 0x10
  1140  000011                     	ds	1
  1141  000012                     ___fldiv@new_exp:
  1142                           	opt callstack 0
  1143  000012                     ___llmod@divisor:
  1144                           	opt callstack 0
  1145                           
  1146                           ; 4 bytes @ 0x11
  1147  000012                     	ds	1
  1148  000013                     ??___xxtofl:
  1149                           
  1150                           ; 1 bytes @ 0x12
  1151  000013                     	ds	1
  1152  000014                     ___fldiv@grs:
  1153                           	opt callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x13
  1156  000014                     	ds	2
  1157  000016                     ___llmod@counter:
  1158                           	opt callstack 0
  1159                           
  1160                           ; 1 bytes @ 0x15
  1161  000016                     	ds	1
  1162  000017                     ___xxtofl@sign:
  1163                           	opt callstack 0
  1164                           
  1165                           ; 1 bytes @ 0x16
  1166  000017                     	ds	1
  1167  000018                     ___fldiv@bexp:
  1168                           	opt callstack 0
  1169  000018                     ___xxtofl@exp:
  1170                           	opt callstack 0
  1171                           
  1172                           ; 1 bytes @ 0x17
  1173  000018                     	ds	1
  1174  000019                     ___fldiv@aexp:
  1175                           	opt callstack 0
  1176  000019                     ___xxtofl@arg:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x18
  1180  000019                     	ds	4
  1181  00001D                     ___fleq@ff1:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x1C
  1185  00001D                     	ds	4
  1186  000021                     ___fleq@ff2:
  1187                           	opt callstack 0
  1188                           
  1189                           ; 4 bytes @ 0x20
  1190  000021                     	ds	4
  1191  000025                     ??___fleq:
  1192                           
  1193                           ; 1 bytes @ 0x24
  1194  000025                     	ds	4
  1195  000029                     ?_frexp:
  1196                           	opt callstack 0
  1197  000029                     frexp@value:
  1198                           	opt callstack 0
  1199                           
  1200                           ; 4 bytes @ 0x28
  1201  000029                     	ds	4
  1202  00002D                     frexp@eptr:
  1203                           	opt callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x2C
  1206  00002D                     	ds	2
  1207  00002F                     ??_frexp:
  1208                           
  1209                           ; 1 bytes @ 0x2E
  1210  00002F                     	ds	2
  1211  000031                     ?___flmul:
  1212                           	opt callstack 0
  1213  000031                     ___flmul@b:
  1214                           	opt callstack 0
  1215                           
  1216                           ; 4 bytes @ 0x30
  1217  000031                     	ds	4
  1218  000035                     ___flmul@a:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 4 bytes @ 0x34
  1222  000035                     	ds	4
  1223  000039                     ??___flmul:
  1224                           
  1225                           ; 1 bytes @ 0x38
  1226  000039                     	ds	4
  1227  00003D                     ___flmul@sign:
  1228                           	opt callstack 0
  1229                           
  1230                           ; 1 bytes @ 0x3C
  1231  00003D                     	ds	1
  1232  00003E                     ___flmul@grs:
  1233                           	opt callstack 0
  1234                           
  1235                           ; 4 bytes @ 0x3D
  1236  00003E                     	ds	4
  1237  000042                     ___flmul@aexp:
  1238                           	opt callstack 0
  1239                           
  1240                           ; 1 bytes @ 0x41
  1241  000042                     	ds	1
  1242  000043                     ___flmul@bexp:
  1243                           	opt callstack 0
  1244                           
  1245                           ; 1 bytes @ 0x42
  1246  000043                     	ds	1
  1247  000044                     ___flmul@prod:
  1248                           	opt callstack 0
  1249                           
  1250                           ; 4 bytes @ 0x43
  1251  000044                     	ds	4
  1252  000048                     ___flmul@temp:
  1253                           	opt callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x47
  1256  000048                     	ds	2
  1257  00004A                     ?_fround:
  1258                           	opt callstack 0
  1259  00004A                     ?_scale:
  1260                           	opt callstack 0
  1261                           
  1262                           ; 4 bytes @ 0x49
  1263  00004A                     	ds	4
  1264  00004E                     _fround$979:
  1265                           	opt callstack 0
  1266  00004E                     _scale$980:
  1267                           	opt callstack 0
  1268                           
  1269                           ; 4 bytes @ 0x4D
  1270  00004E                     	ds	4
  1271  000052                     scale@scl:
  1272                           	opt callstack 0
  1273  000052                     _fround$978:
  1274                           	opt callstack 0
  1275                           
  1276                           ; 4 bytes @ 0x51
  1277  000052                     	ds	1
  1278  000053                     ?___fltol:
  1279                           	opt callstack 0
  1280  000053                     ___fltol@f1:
  1281                           	opt callstack 0
  1282                           
  1283                           ; 4 bytes @ 0x52
  1284  000053                     	ds	3
  1285  000056                     fround@prec:
  1286                           	opt callstack 0
  1287                           
  1288                           ; 1 bytes @ 0x55
  1289  000056                     	ds	1
  1290  000057                     ??___fltol:
  1291  000057                     ?___fladd:
  1292                           	opt callstack 0
  1293  000057                     ___fladd@b:
  1294                           	opt callstack 0
  1295                           
  1296                           ; 4 bytes @ 0x56
  1297  000057                     	ds	4
  1298  00005B                     ___fltol@sign1:
  1299                           	opt callstack 0
  1300  00005B                     ___fladd@a:
  1301                           	opt callstack 0
  1302                           
  1303                           ; 4 bytes @ 0x5A
  1304  00005B                     	ds	1
  1305  00005C                     ___fltol@exp1:
  1306                           	opt callstack 0
  1307                           
  1308                           ; 1 bytes @ 0x5B
  1309  00005C                     	ds	3
  1310  00005F                     ??___fladd:
  1311                           
  1312                           ; 1 bytes @ 0x5E
  1313  00005F                     	ds	4
  1314  000063                     ___fladd@signs:
  1315                           	opt callstack 0
  1316                           
  1317                           ; 1 bytes @ 0x62
  1318  000063                     	ds	1
  1319  000064                     ___fladd@aexp:
  1320                           	opt callstack 0
  1321                           
  1322                           ; 1 bytes @ 0x63
  1323  000064                     	ds	1
  1324  000065                     ___fladd@bexp:
  1325                           	opt callstack 0
  1326                           
  1327                           ; 1 bytes @ 0x64
  1328  000065                     	ds	1
  1329  000066                     ___fladd@grs:
  1330                           	opt callstack 0
  1331                           
  1332                           ; 1 bytes @ 0x65
  1333  000066                     	ds	1
  1334  000067                     ?___flsub:
  1335                           	opt callstack 0
  1336  000067                     ?_floor:
  1337                           	opt callstack 0
  1338  000067                     ?_eval_poly:
  1339                           	opt callstack 0
  1340  000067                     ___flsub@b:
  1341                           	opt callstack 0
  1342  000067                     floor@x:
  1343                           	opt callstack 0
  1344  000067                     eval_poly@x:
  1345                           	opt callstack 0
  1346                           
  1347                           ; 4 bytes @ 0x66
  1348  000067                     	ds	4
  1349  00006B                     eval_poly@d:
  1350                           	opt callstack 0
  1351  00006B                     ___flsub@a:
  1352                           	opt callstack 0
  1353  00006B                     floor@i:
  1354                           	opt callstack 0
  1355                           
  1356                           ; 4 bytes @ 0x6A
  1357  00006B                     	ds	2
  1358  00006D                     eval_poly@n:
  1359                           	opt callstack 0
  1360                           
  1361                           ; 2 bytes @ 0x6C
  1362  00006D                     	ds	2
  1363  00006F                     ??_sprintf:
  1364  00006F                     ??_eval_poly:
  1365  00006F                     floor@expon:
  1366                           	opt callstack 0
  1367                           
  1368                           ; 2 bytes @ 0x6E
  1369  00006F                     	ds	4
  1370  000073                     ??_nombresbaby:
  1371  000073                     eval_poly@res:
  1372                           	opt callstack 0
  1373                           
  1374                           ; 4 bytes @ 0x72
  1375  000073                     	ds	4
  1376  000077                     ?_log:
  1377                           	opt callstack 0
  1378  000077                     ?_ldexp:
  1379                           	opt callstack 0
  1380  000077                     ldexp@value:
  1381                           	opt callstack 0
  1382  000077                     log@x:
  1383                           	opt callstack 0
  1384                           
  1385                           ; 4 bytes @ 0x76
  1386  000077                     	ds	4
  1387  00007B                     ldexp@newexp:
  1388                           	opt callstack 0
  1389  00007B                     log@exponent:
  1390                           	opt callstack 0
  1391                           
  1392                           ; 2 bytes @ 0x7A
  1393  00007B                     	ds	2
  1394  00007D                     ??_ldexp:
  1395                           
  1396                           ; 1 bytes @ 0x7C
  1397  00007D                     	ds	2
  1398  00007F                     
  1399                           ; 1 bytes @ 0x7E
  1400 ;;
  1401 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1402 ;;
  1403 ;; *************** function _main *****************
  1404 ;; Defined at:
  1405 ;;		line 58 in file "CalculadoraLCD.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;		None
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;		None
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  2  100[None  ] int 
  1412 ;; Registers used:
  1413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1419 ;;      Params:         0       0       0       0       0       0       0
  1420 ;;      Locals:         0      12       0       0       0       0       0
  1421 ;;      Temps:          0       2       0       0       0       0       0
  1422 ;;      Totals:         0      14       0       0       0       0       0
  1423 ;;Total ram usage:       14 bytes
  1424 ;; Hardware stack levels required when called:    5
  1425 ;; This function calls:
  1426 ;;		___awdiv
  1427 ;;		___fltol
  1428 ;;		___lbdiv
  1429 ;;		___xxtofl
  1430 ;;		_conf_puertos
  1431 ;;		_ini_LCD
  1432 ;;		_ins_LCD
  1433 ;;		_nombresbaby
  1434 ;;		_pow
  1435 ;;		_sprintf
  1436 ;;		_write_LCD
  1437 ;; This function is called by:
  1438 ;;		Startup code after reset
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text0
  1443  0028C4                     __ptext0:
  1444                           	opt callstack 0
  1445  0028C4                     _main:
  1446                           	opt callstack 26
  1447  0028C4  FFFF               	dw	65535	; assembler added errata NOP
  1448                           
  1449                           ;CalculadoraLCD.c: 61: conf_puertos();
  1450  0028C6  ECCD  F032         	call	_conf_puertos	;wreg free
  1451                           
  1452                           ;CalculadoraLCD.c: 62: ini_LCD();
  1453  0028CA  EC90  F033         	call	_ini_LCD	;wreg free
  1454  0028CE                     
  1455                           ;CalculadoraLCD.c: 64: ins_LCD(130);
  1456  0028CE  0E82               	movlw	130
  1457  0028D0  EC94  F032         	call	_ins_LCD
  1458  0028D4                     
  1459                           ;CalculadoraLCD.c: 66: write_LCD(sprintf(buffer, "Dj Fumaratto"));
  1460  0028D4  0E04               	movlw	low _buffer
  1461  0028D6  0100               	movlb	0	; () banked
  1462  0028D8  6FC1               	movwf	sprintf@sp& (0+255),b
  1463  0028DA  0E01               	movlw	high _buffer
  1464  0028DC  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  1465  0028DE  0E86               	movlw	low STR_1
  1466  0028E0  6FC3               	movwf	sprintf@f& (0+255),b
  1467  0028E2  0E7F               	movlw	high STR_1
  1468  0028E4  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  1469  0028E6  EC8C  F00E         	call	_sprintf	;wreg free
  1470  0028EA  0100               	movlb	0	; () banked
  1471  0028EC  51C1               	movf	?_sprintf& (0+255),w,b
  1472  0028EE  ECEA  F032         	call	_write_LCD
  1473  0028F2                     
  1474                           ;CalculadoraLCD.c: 68: ins_LCD(196);
  1475  0028F2  0EC4               	movlw	196
  1476  0028F4  EC94  F032         	call	_ins_LCD
  1477  0028F8                     
  1478                           ;CalculadoraLCD.c: 70: write_LCD(sprintf(buffer, "Presents"));
  1479  0028F8  0E04               	movlw	low _buffer
  1480  0028FA  0100               	movlb	0	; () banked
  1481  0028FC  6FC1               	movwf	sprintf@sp& (0+255),b
  1482  0028FE  0E01               	movlw	high _buffer
  1483  002900  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  1484  002902  0EBC               	movlw	low STR_2
  1485  002904  6FC3               	movwf	sprintf@f& (0+255),b
  1486  002906  0E7F               	movlw	high STR_2
  1487  002908  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  1488  00290A  EC8C  F00E         	call	_sprintf	;wreg free
  1489  00290E  0100               	movlb	0	; () banked
  1490  002910  51C1               	movf	?_sprintf& (0+255),w,b
  1491  002912  ECEA  F032         	call	_write_LCD
  1492  002916                     
  1493                           ;CalculadoraLCD.c: 72: _delay((unsigned long)((700)*(4000000/4000.0)));
  1494  002916  0E03               	movlw	3
  1495  002918  0100               	movlb	0	; () banked
  1496  00291A  6FF1               	movwf	(??_main+1)& (0+255),b
  1497  00291C  0EAB               	movlw	171
  1498  00291E  6FF0               	movwf	??_main& (0+255),b
  1499  002920  0E3F               	movlw	63
  1500  002922                     u5317:
  1501  002922  FFFF               	dw	65535	; errata NOP
  1502  002924  2EE8               	decfsz	wreg,f,c
  1503  002926  D7FD               	bra	u5317
  1504  002928  2FF0               	decfsz	??_main& (0+255),f,b
  1505  00292A  D7FB               	bra	u5317
  1506  00292C  2FF1               	decfsz	(??_main+1)& (0+255),f,b
  1507  00292E  D7F9               	bra	u5317
  1508  002930  D000               	nop2	
  1509  002932  F000               	nop	
  1510  002934                     
  1511                           ;CalculadoraLCD.c: 73: ins_LCD(1);
  1512  002934  0E01               	movlw	1
  1513  002936  EC94  F032         	call	_ins_LCD
  1514  00293A                     l5081:
  1515  00293A  FFFF               	dw	65535	; assembler added errata NOP
  1516                           
  1517                           ;CalculadoraLCD.c: 76: PB = PORTB;
  1518  00293C  CF81 F0BC          	movff	3969,_PB	;volatile
  1519  002940                     
  1520                           ;CalculadoraLCD.c: 77: A = PB >> 4;
  1521  002940  0100               	movlb	0	; () banked
  1522  002942  39BC               	swapf	_PB& (0+255),w,b
  1523  002944  0B0F               	andlw	15
  1524  002946  6FBE               	movwf	_A& (0+255),b
  1525  002948                     
  1526                           ; BSR set to: 0
  1527                           ;CalculadoraLCD.c: 78: B = PB & 0x0F;
  1528  002948  51BC               	movf	_PB& (0+255),w,b
  1529  00294A  0B0F               	andlw	15
  1530  00294C  6FC0               	movwf	_B& (0+255),b
  1531  00294E                     
  1532                           ; BSR set to: 0
  1533                           ;CalculadoraLCD.c: 79: S = PORTA & 0x0F;
  1534  00294E  5080               	movf	128,w,c	;volatile
  1535  002950  0B0F               	andlw	15
  1536  002952  6FBD               	movwf	_S& (0+255),b
  1537                           
  1538                           ;CalculadoraLCD.c: 80: switch (S) {
  1539  002954  EFBA  F01F         	goto	l5683
  1540  002958                     l5089:
  1541  002958  FFFF               	dw	65535	; assembler added errata NOP
  1542                           
  1543                           ; BSR set to: 0
  1544                           ;CalculadoraLCD.c: 82: ins_LCD(1);
  1545  00295A  0E01               	movlw	1
  1546  00295C  EC94  F032         	call	_ins_LCD
  1547  002960                     
  1548                           ;CalculadoraLCD.c: 83: write_LCD(sprintf(buffer, "%i  + %i", A, B));
  1549  002960  0E04               	movlw	low _buffer
  1550  002962  0100               	movlb	0	; () banked
  1551  002964  6FC1               	movwf	sprintf@sp& (0+255),b
  1552  002966  0E01               	movlw	high _buffer
  1553  002968  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  1554  00296A  0EB3               	movlw	low STR_3
  1555  00296C  6FC3               	movwf	sprintf@f& (0+255),b
  1556  00296E  0E7F               	movlw	high STR_3
  1557  002970  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  1558  002972  C0BE  F0C5         	movff	_A,?_sprintf+4
  1559  002976  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  1560  002978  C0C0  F0C7         	movff	_B,?_sprintf+6
  1561  00297C  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  1562  00297E  EC8C  F00E         	call	_sprintf	;wreg free
  1563  002982  0100               	movlb	0	; () banked
  1564  002984  51C1               	movf	?_sprintf& (0+255),w,b
  1565  002986  ECEA  F032         	call	_write_LCD
  1566  00298A                     
  1567                           ;CalculadoraLCD.c: 84: D = A + B;
  1568  00298A  0100               	movlb	0	; () banked
  1569  00298C  51BE               	movf	_A& (0+255),w,b
  1570  00298E  25C0               	addwf	_B& (0+255),w,b
  1571  002990  6FBB               	movwf	_D& (0+255),b
  1572  002992                     
  1573                           ; BSR set to: 0
  1574                           ;CalculadoraLCD.c: 85: ins_LCD(192);
  1575  002992  0EC0               	movlw	192
  1576  002994  EC94  F032         	call	_ins_LCD
  1577  002998                     
  1578                           ;CalculadoraLCD.c: 86: write_LCD(sprintf(buffer, "Resultado: %i", D));
  1579  002998  0E04               	movlw	low _buffer
  1580  00299A  0100               	movlb	0	; () banked
  1581  00299C  6FC1               	movwf	sprintf@sp& (0+255),b
  1582  00299E  0E01               	movlw	high _buffer
  1583  0029A0  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  1584  0029A2  0E5D               	movlw	low STR_4
  1585  0029A4  6FC3               	movwf	sprintf@f& (0+255),b
  1586  0029A6  0E7F               	movlw	high STR_4
  1587  0029A8  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  1588  0029AA  C0BB  F0C5         	movff	_D,?_sprintf+4
  1589  0029AE  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  1590  0029B0  EC8C  F00E         	call	_sprintf	;wreg free
  1591  0029B4  0100               	movlb	0	; () banked
  1592  0029B6  51C1               	movf	?_sprintf& (0+255),w,b
  1593  0029B8  ECEA  F032         	call	_write_LCD
  1594  0029BC                     l5099:
  1595  0029BC  FFFF               	dw	65535	; assembler added errata NOP
  1596                           
  1597                           ;CalculadoraLCD.c: 87: _delay((unsigned long)((100)*(4000000/4000.0)));
  1598  0029BE  0E62               	movlw	98
  1599  0029C0  0100               	movlb	0	; () banked
  1600  0029C2  6FF0               	movwf	??_main& (0+255),b
  1601  0029C4  0E76               	movlw	118
  1602  0029C6                     u5327:
  1603  0029C6  FFFF               	dw	65535	; errata NOP
  1604  0029C8  2EE8               	decfsz	wreg,f,c
  1605  0029CA  D7FD               	bra	u5327
  1606  0029CC  2FF0               	decfsz	??_main& (0+255),f,b
  1607  0029CE  D7FB               	bra	u5327
  1608  0029D0  F000               	nop	
  1609                           
  1610                           ;CalculadoraLCD.c: 88: break;
  1611  0029D2  EF9D  F014         	goto	l5081
  1612  0029D6                     l5101:
  1613  0029D6  FFFF               	dw	65535	; assembler added errata NOP
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;CalculadoraLCD.c: 90: if (A >= B) {
  1617  0029D8  51C0               	movf	_B& (0+255),w,b
  1618  0029DA  5DBE               	subwf	_A& (0+255),w,b
  1619  0029DC  A0D8               	btfss	status,0,c
  1620  0029DE  EFF3  F014         	goto	u4891
  1621  0029E2  EFF6  F014         	goto	u4890
  1622  0029E6                     u4891:
  1623  0029E6  FFFF               	dw	65535	; assembler added errata NOP
  1624  0029E8  EF44  F015         	goto	l5117
  1625  0029EC                     u4890:
  1626  0029EC  FFFF               	dw	65535	; assembler added errata NOP
  1627  0029EE                     
  1628                           ; BSR set to: 0
  1629                           ;CalculadoraLCD.c: 91: ins_LCD(1);
  1630  0029EE  0E01               	movlw	1
  1631  0029F0  EC94  F032         	call	_ins_LCD
  1632  0029F4                     
  1633                           ;CalculadoraLCD.c: 92: write_LCD(sprintf(buffer, "%i", A));
  1634  0029F4  0E04               	movlw	low _buffer
  1635  0029F6  0100               	movlb	0	; () banked
  1636  0029F8  6FC1               	movwf	sprintf@sp& (0+255),b
  1637  0029FA  0E01               	movlw	high _buffer
  1638  0029FC  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  1639  0029FE  0E3C               	movlw	low (STR_7+12)
  1640  002A00  6FC3               	movwf	sprintf@f& (0+255),b
  1641  002A02  0E7F               	movlw	high (STR_7+12)
  1642  002A04  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  1643  002A06  C0BE  F0C5         	movff	_A,?_sprintf+4
  1644  002A0A  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  1645  002A0C  EC8C  F00E         	call	_sprintf	;wreg free
  1646  002A10  0100               	movlb	0	; () banked
  1647  002A12  51C1               	movf	?_sprintf& (0+255),w,b
  1648  002A14  ECEA  F032         	call	_write_LCD
  1649  002A18                     
  1650                           ;CalculadoraLCD.c: 93: ins_LCD(131);
  1651  002A18  0E83               	movlw	131
  1652  002A1A  EC94  F032         	call	_ins_LCD
  1653                           
  1654                           ;CalculadoraLCD.c: 94: write_LCD(sprintf(buffer, "- %i", B));
  1655  002A1E  0E04               	movlw	low _buffer
  1656  002A20  0100               	movlb	0	; () banked
  1657  002A22  6FC1               	movwf	sprintf@sp& (0+255),b
  1658  002A24  0E01               	movlw	high _buffer
  1659  002A26  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  1660  002A28  0ED2               	movlw	low STR_6
  1661  002A2A  6FC3               	movwf	sprintf@f& (0+255),b
  1662  002A2C  0E7F               	movlw	high STR_6
  1663  002A2E  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  1664  002A30  C0C0  F0C5         	movff	_B,?_sprintf+4
  1665  002A34  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  1666  002A36  EC8C  F00E         	call	_sprintf	;wreg free
  1667  002A3A  0100               	movlb	0	; () banked
  1668  002A3C  51C1               	movf	?_sprintf& (0+255),w,b
  1669  002A3E  ECEA  F032         	call	_write_LCD
  1670  002A42                     
  1671                           ;CalculadoraLCD.c: 95: D = A - B;
  1672  002A42  0100               	movlb	0	; () banked
  1673  002A44  51C0               	movf	_B& (0+255),w,b
  1674  002A46  5DBE               	subwf	_A& (0+255),w,b
  1675  002A48  6FBB               	movwf	_D& (0+255),b
  1676  002A4A                     
  1677                           ; BSR set to: 0
  1678                           ;CalculadoraLCD.c: 96: ins_LCD(192);
  1679  002A4A  0EC0               	movlw	192
  1680  002A4C  EC94  F032         	call	_ins_LCD
  1681  002A50                     
  1682                           ;CalculadoraLCD.c: 97: write_LCD(sprintf(buffer, "Resultado:  %i", D));
  1683  002A50  0E04               	movlw	low _buffer
  1684  002A52  0100               	movlb	0	; () banked
  1685  002A54  6FC1               	movwf	sprintf@sp& (0+255),b
  1686  002A56  0E01               	movlw	high _buffer
  1687  002A58  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  1688  002A5A  0E30               	movlw	low STR_7
  1689  002A5C  6FC3               	movwf	sprintf@f& (0+255),b
  1690  002A5E  0E7F               	movlw	high STR_7
  1691  002A60  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  1692  002A62  C0BB  F0C5         	movff	_D,?_sprintf+4
  1693  002A66  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  1694  002A68  EC8C  F00E         	call	_sprintf	;wreg free
  1695  002A6C  0100               	movlb	0	; () banked
  1696  002A6E  51C1               	movf	?_sprintf& (0+255),w,b
  1697  002A70  ECEA  F032         	call	_write_LCD
  1698  002A74                     
  1699                           ;CalculadoraLCD.c: 98: _delay((unsigned long)((100)*(4000000/4000.0)));
  1700  002A74  0E62               	movlw	98
  1701  002A76  0100               	movlb	0	; () banked
  1702  002A78  6FF0               	movwf	??_main& (0+255),b
  1703  002A7A  0E76               	movlw	118
  1704  002A7C                     u5337:
  1705  002A7C  FFFF               	dw	65535	; errata NOP
  1706  002A7E  2EE8               	decfsz	wreg,f,c
  1707  002A80  D7FD               	bra	u5337
  1708  002A82  2FF0               	decfsz	??_main& (0+255),f,b
  1709  002A84  D7FB               	bra	u5337
  1710  002A86  F000               	nop	
  1711  002A88                     l5117:
  1712  002A88  FFFF               	dw	65535	; assembler added errata NOP
  1713                           
  1714                           ;CalculadoraLCD.c: 99: };CalculadoraLCD.c: 100: if (B > A) {
  1715  002A8A  0100               	movlb	0	; () banked
  1716  002A8C  51C0               	movf	_B& (0+255),w,b
  1717  002A8E  5DBE               	subwf	_A& (0+255),w,b
  1718  002A90  B0D8               	btfsc	status,0,c
  1719  002A92  EF4D  F015         	goto	u4901
  1720  002A96  EF50  F015         	goto	u4900
  1721  002A9A                     u4901:
  1722  002A9A  FFFF               	dw	65535	; assembler added errata NOP
  1723  002A9C  EF9D  F014         	goto	l5081
  1724  002AA0                     u4900:
  1725  002AA0  FFFF               	dw	65535	; assembler added errata NOP
  1726  002AA2                     
  1727                           ; BSR set to: 0
  1728                           ;CalculadoraLCD.c: 101: ins_LCD(1);
  1729  002AA2  0E01               	movlw	1
  1730  002AA4  EC94  F032         	call	_ins_LCD
  1731  002AA8                     
  1732                           ;CalculadoraLCD.c: 102: write_LCD(sprintf(buffer, "%i", A));
  1733  002AA8  0E04               	movlw	low _buffer
  1734  002AAA  0100               	movlb	0	; () banked
  1735  002AAC  6FC1               	movwf	sprintf@sp& (0+255),b
  1736  002AAE  0E01               	movlw	high _buffer
  1737  002AB0  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  1738  002AB2  0E3C               	movlw	low (STR_7+12)
  1739  002AB4  6FC3               	movwf	sprintf@f& (0+255),b
  1740  002AB6  0E7F               	movlw	high (STR_7+12)
  1741  002AB8  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  1742  002ABA  C0BE  F0C5         	movff	_A,?_sprintf+4
  1743  002ABE  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  1744  002AC0  EC8C  F00E         	call	_sprintf	;wreg free
  1745  002AC4  0100               	movlb	0	; () banked
  1746  002AC6  51C1               	movf	?_sprintf& (0+255),w,b
  1747  002AC8  ECEA  F032         	call	_write_LCD
  1748  002ACC                     
  1749                           ;CalculadoraLCD.c: 103: ins_LCD(131);
  1750  002ACC  0E83               	movlw	131
  1751  002ACE  EC94  F032         	call	_ins_LCD
  1752                           
  1753                           ;CalculadoraLCD.c: 104: write_LCD(sprintf(buffer, "- %i", B));
  1754  002AD2  0E04               	movlw	low _buffer
  1755  002AD4  0100               	movlb	0	; () banked
  1756  002AD6  6FC1               	movwf	sprintf@sp& (0+255),b
  1757  002AD8  0E01               	movlw	high _buffer
  1758  002ADA  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  1759  002ADC  0ED2               	movlw	low STR_6
  1760  002ADE  6FC3               	movwf	sprintf@f& (0+255),b
  1761  002AE0  0E7F               	movlw	high STR_6
  1762  002AE2  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  1763  002AE4  C0C0  F0C5         	movff	_B,?_sprintf+4
  1764  002AE8  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  1765  002AEA  EC8C  F00E         	call	_sprintf	;wreg free
  1766  002AEE  0100               	movlb	0	; () banked
  1767  002AF0  51C1               	movf	?_sprintf& (0+255),w,b
  1768  002AF2  ECEA  F032         	call	_write_LCD
  1769  002AF6                     
  1770                           ;CalculadoraLCD.c: 105: D = B - A;
  1771  002AF6  0100               	movlb	0	; () banked
  1772  002AF8  51BE               	movf	_A& (0+255),w,b
  1773  002AFA  5DC0               	subwf	_B& (0+255),w,b
  1774  002AFC  6FBB               	movwf	_D& (0+255),b
  1775  002AFE                     
  1776                           ; BSR set to: 0
  1777                           ;CalculadoraLCD.c: 106: ins_LCD(192);
  1778  002AFE  0EC0               	movlw	192
  1779  002B00  EC94  F032         	call	_ins_LCD
  1780  002B04                     
  1781                           ;CalculadoraLCD.c: 107: write_LCD(sprintf(buffer, "Resultado: -%i", D));
  1782  002B04  0E04               	movlw	low _buffer
  1783  002B06  0100               	movlb	0	; () banked
  1784  002B08  6FC1               	movwf	sprintf@sp& (0+255),b
  1785  002B0A  0E01               	movlw	high _buffer
  1786  002B0C  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  1787  002B0E  0E4E               	movlw	low STR_10
  1788  002B10  6FC3               	movwf	sprintf@f& (0+255),b
  1789  002B12  0E7F               	movlw	high STR_10
  1790  002B14  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  1791  002B16  C0BB  F0C5         	movff	_D,?_sprintf+4
  1792  002B1A  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  1793  002B1C  EC8C  F00E         	call	_sprintf	;wreg free
  1794  002B20  0100               	movlb	0	; () banked
  1795  002B22  51C1               	movf	?_sprintf& (0+255),w,b
  1796  002B24  ECEA  F032         	call	_write_LCD
  1797  002B28  EFDE  F014         	goto	l5099
  1798  002B2C                     l5133:
  1799  002B2C  FFFF               	dw	65535	; assembler added errata NOP
  1800                           
  1801                           ; BSR set to: 0
  1802                           ;CalculadoraLCD.c: 112: ins_LCD(1);
  1803  002B2E  0E01               	movlw	1
  1804  002B30  EC94  F032         	call	_ins_LCD
  1805  002B34                     
  1806                           ;CalculadoraLCD.c: 113: write_LCD(sprintf(buffer, "%i", A));
  1807  002B34  0E04               	movlw	low _buffer
  1808  002B36  0100               	movlb	0	; () banked
  1809  002B38  6FC1               	movwf	sprintf@sp& (0+255),b
  1810  002B3A  0E01               	movlw	high _buffer
  1811  002B3C  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  1812  002B3E  0E3C               	movlw	low (STR_7+12)
  1813  002B40  6FC3               	movwf	sprintf@f& (0+255),b
  1814  002B42  0E7F               	movlw	high (STR_7+12)
  1815  002B44  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  1816  002B46  C0BE  F0C5         	movff	_A,?_sprintf+4
  1817  002B4A  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  1818  002B4C  EC8C  F00E         	call	_sprintf	;wreg free
  1819  002B50  0100               	movlb	0	; () banked
  1820  002B52  51C1               	movf	?_sprintf& (0+255),w,b
  1821  002B54  ECEA  F032         	call	_write_LCD
  1822  002B58                     
  1823                           ;CalculadoraLCD.c: 114: ins_LCD(131);
  1824  002B58  0E83               	movlw	131
  1825  002B5A  EC94  F032         	call	_ins_LCD
  1826                           
  1827                           ;CalculadoraLCD.c: 115: write_LCD(sprintf(buffer, "* %i", B));
  1828  002B5E  0E04               	movlw	low _buffer
  1829  002B60  0100               	movlb	0	; () banked
  1830  002B62  6FC1               	movwf	sprintf@sp& (0+255),b
  1831  002B64  0E01               	movlw	high _buffer
  1832  002B66  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  1833  002B68  0ECD               	movlw	low STR_12
  1834  002B6A  6FC3               	movwf	sprintf@f& (0+255),b
  1835  002B6C  0E7F               	movlw	high STR_12
  1836  002B6E  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  1837  002B70  C0C0  F0C5         	movff	_B,?_sprintf+4
  1838  002B74  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  1839  002B76  EC8C  F00E         	call	_sprintf	;wreg free
  1840  002B7A  0100               	movlb	0	; () banked
  1841  002B7C  51C1               	movf	?_sprintf& (0+255),w,b
  1842  002B7E  ECEA  F032         	call	_write_LCD
  1843  002B82                     
  1844                           ;CalculadoraLCD.c: 116: D = A*B;
  1845  002B82  0100               	movlb	0	; () banked
  1846  002B84  51BE               	movf	_A& (0+255),w,b
  1847  002B86  03C0               	mulwf	_B& (0+255),b
  1848  002B88  CFF3 F0BB          	movff	prodl,_D
  1849  002B8C                     
  1850                           ; BSR set to: 0
  1851                           ;CalculadoraLCD.c: 117: ins_LCD(192);
  1852  002B8C  0EC0               	movlw	192
  1853  002B8E  EC94  F032         	call	_ins_LCD
  1854  002B92                     
  1855                           ;CalculadoraLCD.c: 118: write_LCD(sprintf(buffer, "Resultado: %i", D));
  1856  002B92  0E04               	movlw	low _buffer
  1857  002B94  0100               	movlb	0	; () banked
  1858  002B96  6FC1               	movwf	sprintf@sp& (0+255),b
  1859  002B98  0E01               	movlw	high _buffer
  1860  002B9A  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  1861  002B9C  0E5D               	movlw	low STR_4
  1862  002B9E  6FC3               	movwf	sprintf@f& (0+255),b
  1863  002BA0  0E7F               	movlw	high STR_4
  1864  002BA2  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  1865  002BA4  C0BB  F0C5         	movff	_D,?_sprintf+4
  1866  002BA8  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  1867  002BAA  EC8C  F00E         	call	_sprintf	;wreg free
  1868  002BAE  0100               	movlb	0	; () banked
  1869  002BB0  51C1               	movf	?_sprintf& (0+255),w,b
  1870  002BB2  ECEA  F032         	call	_write_LCD
  1871  002BB6  EFDE  F014         	goto	l5099
  1872  002BBA                     l5147:
  1873  002BBA  FFFF               	dw	65535	; assembler added errata NOP
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;CalculadoraLCD.c: 122: ins_LCD(1);
  1877  002BBC  0E01               	movlw	1
  1878  002BBE  EC94  F032         	call	_ins_LCD
  1879  002BC2                     
  1880                           ;CalculadoraLCD.c: 123: if (A >= B) {
  1881  002BC2  0100               	movlb	0	; () banked
  1882  002BC4  51C0               	movf	_B& (0+255),w,b
  1883  002BC6  5DBE               	subwf	_A& (0+255),w,b
  1884  002BC8  A0D8               	btfss	status,0,c
  1885  002BCA  EFE9  F015         	goto	u4911
  1886  002BCE  EFEC  F015         	goto	u4910
  1887  002BD2                     u4911:
  1888  002BD2  FFFF               	dw	65535	; assembler added errata NOP
  1889  002BD4  EF3A  F016         	goto	l5165
  1890  002BD8                     u4910:
  1891  002BD8  FFFF               	dw	65535	; assembler added errata NOP
  1892  002BDA                     
  1893                           ; BSR set to: 0
  1894                           ;CalculadoraLCD.c: 124: ins_LCD(1);
  1895  002BDA  0E01               	movlw	1
  1896  002BDC  EC94  F032         	call	_ins_LCD
  1897  002BE0                     
  1898                           ;CalculadoraLCD.c: 125: write_LCD(sprintf(buffer, "%i", A));
  1899  002BE0  0E04               	movlw	low _buffer
  1900  002BE2  0100               	movlb	0	; () banked
  1901  002BE4  6FC1               	movwf	sprintf@sp& (0+255),b
  1902  002BE6  0E01               	movlw	high _buffer
  1903  002BE8  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  1904  002BEA  0E3C               	movlw	low (STR_7+12)
  1905  002BEC  6FC3               	movwf	sprintf@f& (0+255),b
  1906  002BEE  0E7F               	movlw	high (STR_7+12)
  1907  002BF0  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  1908  002BF2  C0BE  F0C5         	movff	_A,?_sprintf+4
  1909  002BF6  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  1910  002BF8  EC8C  F00E         	call	_sprintf	;wreg free
  1911  002BFC  0100               	movlb	0	; () banked
  1912  002BFE  51C1               	movf	?_sprintf& (0+255),w,b
  1913  002C00  ECEA  F032         	call	_write_LCD
  1914  002C04                     
  1915                           ;CalculadoraLCD.c: 126: ins_LCD(131);
  1916  002C04  0E83               	movlw	131
  1917  002C06  EC94  F032         	call	_ins_LCD
  1918                           
  1919                           ;CalculadoraLCD.c: 127: write_LCD(sprintf(buffer, "/ %i", B));
  1920  002C0A  0E04               	movlw	low _buffer
  1921  002C0C  0100               	movlb	0	; () banked
  1922  002C0E  6FC1               	movwf	sprintf@sp& (0+255),b
  1923  002C10  0E01               	movlw	high _buffer
  1924  002C12  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  1925  002C14  0ED7               	movlw	low STR_15
  1926  002C16  6FC3               	movwf	sprintf@f& (0+255),b
  1927  002C18  0E7F               	movlw	high STR_15
  1928  002C1A  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  1929  002C1C  C0C0  F0C5         	movff	_B,?_sprintf+4
  1930  002C20  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  1931  002C22  EC8C  F00E         	call	_sprintf	;wreg free
  1932  002C26  0100               	movlb	0	; () banked
  1933  002C28  51C1               	movf	?_sprintf& (0+255),w,b
  1934  002C2A  ECEA  F032         	call	_write_LCD
  1935  002C2E                     
  1936                           ;CalculadoraLCD.c: 128: num = A / B;
  1937  002C2E  C0C0  F001         	movff	_B,___lbdiv@divisor
  1938  002C32  0100               	movlb	0	; () banked
  1939  002C34  51BE               	movf	_A& (0+255),w,b
  1940  002C36  ECC9  F033         	call	___lbdiv
  1941  002C3A  0100               	movlb	0	; () banked
  1942  002C3C  6FF0               	movwf	??_main& (0+255),b
  1943  002C3E  51F0               	movf	??_main& (0+255),w,b
  1944  002C40  6FB4               	movwf	_num& (0+255),b
  1945  002C42  6BB5               	clrf	(_num+1)& (0+255),b
  1946  002C44                     
  1947                           ; BSR set to: 0
  1948                           ;CalculadoraLCD.c: 129: ins_LCD(192);
  1949  002C44  0EC0               	movlw	192
  1950  002C46  EC94  F032         	call	_ins_LCD
  1951  002C4A                     
  1952                           ;CalculadoraLCD.c: 130: write_LCD(sprintf(buffer, "Resultado: %i", num));
  1953  002C4A  0E04               	movlw	low _buffer
  1954  002C4C  0100               	movlb	0	; () banked
  1955  002C4E  6FC1               	movwf	sprintf@sp& (0+255),b
  1956  002C50  0E01               	movlw	high _buffer
  1957  002C52  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  1958  002C54  0E5D               	movlw	low STR_4
  1959  002C56  6FC3               	movwf	sprintf@f& (0+255),b
  1960  002C58  0E7F               	movlw	high STR_4
  1961  002C5A  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  1962  002C5C  C0B4  F0C5         	movff	_num,?_sprintf+4
  1963  002C60  C0B5  F0C6         	movff	_num+1,?_sprintf+5
  1964  002C64  EC8C  F00E         	call	_sprintf	;wreg free
  1965  002C68  0100               	movlb	0	; () banked
  1966  002C6A  51C1               	movf	?_sprintf& (0+255),w,b
  1967  002C6C  ECEA  F032         	call	_write_LCD
  1968  002C70  EFDE  F014         	goto	l5099
  1969  002C74                     l5165:
  1970  002C74  FFFF               	dw	65535	; assembler added errata NOP
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;CalculadoraLCD.c: 133: ins_LCD(192);
  1974  002C76  0EC0               	movlw	192
  1975  002C78  EC94  F032         	call	_ins_LCD
  1976  002C7C                     
  1977                           ;CalculadoraLCD.c: 134: write_LCD(sprintf(buffer, "Resultado: </3"));
  1978  002C7C  0E04               	movlw	low _buffer
  1979  002C7E  0100               	movlb	0	; () banked
  1980  002C80  6FC1               	movwf	sprintf@sp& (0+255),b
  1981  002C82  0E01               	movlw	high _buffer
  1982  002C84  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  1983  002C86  0E21               	movlw	low STR_17
  1984  002C88  6FC3               	movwf	sprintf@f& (0+255),b
  1985  002C8A  0E7F               	movlw	high STR_17
  1986  002C8C  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  1987  002C8E  EC8C  F00E         	call	_sprintf	;wreg free
  1988  002C92  0100               	movlb	0	; () banked
  1989  002C94  51C1               	movf	?_sprintf& (0+255),w,b
  1990  002C96  ECEA  F032         	call	_write_LCD
  1991  002C9A  EFDE  F014         	goto	l5099
  1992  002C9E                     l5171:
  1993  002C9E  FFFF               	dw	65535	; assembler added errata NOP
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;CalculadoraLCD.c: 140: for (t = 4; t > 0; t--) {
  1997  002CA0  0E04               	movlw	4
  1998  002CA2  6FBF               	movwf	_t& (0+255),b
  1999  002CA4  51BF               	movf	_t& (0+255),w,b
  2000  002CA6  A4D8               	btfss	status,2,c
  2001  002CA8  EF58  F016         	goto	u4921
  2002  002CAC  EF5B  F016         	goto	u4920
  2003  002CB0                     u4921:
  2004  002CB0  FFFF               	dw	65535	; assembler added errata NOP
  2005  002CB2  EF5E  F016         	goto	l5175
  2006  002CB6                     u4920:
  2007  002CB6  FFFF               	dw	65535	; assembler added errata NOP
  2008  002CB8  EF7E  F016         	goto	l5183
  2009  002CBC                     l5175:
  2010  002CBC  FFFF               	dw	65535	; assembler added errata NOP
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;CalculadoraLCD.c: 141: bin1[t] = A % 2;
  2014  002CBE  0EA3               	movlw	low _bin1
  2015  002CC0  25BF               	addwf	_t& (0+255),w,b
  2016  002CC2  6ED9               	movwf	fsr2l,c
  2017  002CC4  6ADA               	clrf	fsr2h,c
  2018  002CC6  0E00               	movlw	high _bin1
  2019  002CC8  22DA               	addwfc	fsr2h,f,c
  2020  002CCA  51BE               	movf	_A& (0+255),w,b
  2021  002CCC  0B01               	andlw	1
  2022  002CCE  6EDF               	movwf	indf2,c
  2023  002CD0                     
  2024                           ; BSR set to: 0
  2025                           ;CalculadoraLCD.c: 142: A = A / 2;
  2026  002CD0  C0BE  F007         	movff	_A,___awdiv@dividend
  2027  002CD4  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2028  002CD6  0E00               	movlw	0
  2029  002CD8  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2030  002CDA  0E02               	movlw	2
  2031  002CDC  6E09               	movwf	___awdiv@divisor^0,c
  2032  002CDE  EC74  F036         	call	___awdiv	;wreg free
  2033  002CE2  5007               	movf	?___awdiv^0,w,c
  2034  002CE4  0100               	movlb	0	; () banked
  2035  002CE6  6FBE               	movwf	_A& (0+255),b
  2036  002CE8                     
  2037                           ; BSR set to: 0
  2038  002CE8  07BF               	decf	_t& (0+255),f,b
  2039  002CEA                     
  2040                           ; BSR set to: 0
  2041  002CEA  51BF               	movf	_t& (0+255),w,b
  2042  002CEC  A4D8               	btfss	status,2,c
  2043  002CEE  EF7B  F016         	goto	u4931
  2044  002CF2  EF7E  F016         	goto	u4930
  2045  002CF6                     u4931:
  2046  002CF6  FFFF               	dw	65535	; assembler added errata NOP
  2047  002CF8  EF5E  F016         	goto	l5175
  2048  002CFC                     u4930:
  2049  002CFC                     l5183:
  2050  002CFC  FFFF               	dw	65535	; assembler added errata NOP
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;CalculadoraLCD.c: 143: };CalculadoraLCD.c: 144: ins_LCD(128);
  2054  002CFE  0E80               	movlw	128
  2055  002D00  EC94  F032         	call	_ins_LCD
  2056  002D04                     
  2057                           ;CalculadoraLCD.c: 145: write_LCD(sprintf(buffer, "A=%i%i%i%i", bin1[1], bin1[2], bin1[3
      +                          ], bin1[4]));
  2058  002D04  0E04               	movlw	low _buffer
  2059  002D06  0100               	movlb	0	; () banked
  2060  002D08  6FC1               	movwf	sprintf@sp& (0+255),b
  2061  002D0A  0E01               	movlw	high _buffer
  2062  002D0C  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  2063  002D0E  0E93               	movlw	low STR_18
  2064  002D10  6FC3               	movwf	sprintf@f& (0+255),b
  2065  002D12  0E7F               	movlw	high STR_18
  2066  002D14  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  2067  002D16  C0A4  F0C5         	movff	_bin1+1,?_sprintf+4
  2068  002D1A  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  2069  002D1C  C0A5  F0C7         	movff	_bin1+2,?_sprintf+6
  2070  002D20  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  2071  002D22  C0A6  F0C9         	movff	_bin1+3,?_sprintf+8
  2072  002D26  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  2073  002D28  C0A7  F0CB         	movff	_bin1+4,?_sprintf+10
  2074  002D2C  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  2075  002D2E  EC8C  F00E         	call	_sprintf	;wreg free
  2076  002D32  0100               	movlb	0	; () banked
  2077  002D34  51C1               	movf	?_sprintf& (0+255),w,b
  2078  002D36  ECEA  F032         	call	_write_LCD
  2079  002D3A                     
  2080                           ;CalculadoraLCD.c: 146: for (t = 4; t > 0; t--) {
  2081  002D3A  0E04               	movlw	4
  2082  002D3C  0100               	movlb	0	; () banked
  2083  002D3E  6FBF               	movwf	_t& (0+255),b
  2084  002D40                     l5189:
  2085  002D40  FFFF               	dw	65535	; assembler added errata NOP
  2086                           
  2087                           ; BSR set to: 0
  2088  002D42  51BF               	movf	_t& (0+255),w,b
  2089  002D44  A4D8               	btfss	status,2,c
  2090  002D46  EFA7  F016         	goto	u4941
  2091  002D4A  EFAA  F016         	goto	u4940
  2092  002D4E                     u4941:
  2093  002D4E  FFFF               	dw	65535	; assembler added errata NOP
  2094  002D50  EFAD  F016         	goto	l5193
  2095  002D54                     u4940:
  2096  002D54  FFFF               	dw	65535	; assembler added errata NOP
  2097  002D56  EFC6  F016         	goto	l5201
  2098  002D5A                     l5193:
  2099  002D5A  FFFF               	dw	65535	; assembler added errata NOP
  2100                           
  2101                           ; BSR set to: 0
  2102                           ;CalculadoraLCD.c: 147: bin2[t] = B % 2;
  2103  002D5C  0E9E               	movlw	low _bin2
  2104  002D5E  25BF               	addwf	_t& (0+255),w,b
  2105  002D60  6ED9               	movwf	fsr2l,c
  2106  002D62  6ADA               	clrf	fsr2h,c
  2107  002D64  0E00               	movlw	high _bin2
  2108  002D66  22DA               	addwfc	fsr2h,f,c
  2109  002D68  51C0               	movf	_B& (0+255),w,b
  2110  002D6A  0B01               	andlw	1
  2111  002D6C  6EDF               	movwf	indf2,c
  2112  002D6E                     
  2113                           ; BSR set to: 0
  2114                           ;CalculadoraLCD.c: 148: B = B / 2;
  2115  002D6E  C0C0  F007         	movff	_B,___awdiv@dividend
  2116  002D72  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2117  002D74  0E00               	movlw	0
  2118  002D76  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2119  002D78  0E02               	movlw	2
  2120  002D7A  6E09               	movwf	___awdiv@divisor^0,c
  2121  002D7C  EC74  F036         	call	___awdiv	;wreg free
  2122  002D80  5007               	movf	?___awdiv^0,w,c
  2123  002D82  0100               	movlb	0	; () banked
  2124  002D84  6FC0               	movwf	_B& (0+255),b
  2125  002D86                     
  2126                           ; BSR set to: 0
  2127  002D86  07BF               	decf	_t& (0+255),f,b
  2128  002D88  EFA0  F016         	goto	l5189
  2129  002D8C                     l5201:
  2130  002D8C  FFFF               	dw	65535	; assembler added errata NOP
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;CalculadoraLCD.c: 149: };CalculadoraLCD.c: 150: ins_LCD(135);
  2134  002D8E  0E87               	movlw	135
  2135  002D90  EC94  F032         	call	_ins_LCD
  2136  002D94                     
  2137                           ;CalculadoraLCD.c: 151: write_LCD(sprintf(buffer, "B=%i%i%i%i", bin2[1], bin2[2], bin2[3
      +                          ], bin2[4]));
  2138  002D94  0E04               	movlw	low _buffer
  2139  002D96  0100               	movlb	0	; () banked
  2140  002D98  6FC1               	movwf	sprintf@sp& (0+255),b
  2141  002D9A  0E01               	movlw	high _buffer
  2142  002D9C  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  2143  002D9E  0E9E               	movlw	low STR_19
  2144  002DA0  6FC3               	movwf	sprintf@f& (0+255),b
  2145  002DA2  0E7F               	movlw	high STR_19
  2146  002DA4  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  2147  002DA6  C09F  F0C5         	movff	_bin2+1,?_sprintf+4
  2148  002DAA  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  2149  002DAC  C0A0  F0C7         	movff	_bin2+2,?_sprintf+6
  2150  002DB0  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  2151  002DB2  C0A1  F0C9         	movff	_bin2+3,?_sprintf+8
  2152  002DB6  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  2153  002DB8  C0A2  F0CB         	movff	_bin2+4,?_sprintf+10
  2154  002DBC  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  2155  002DBE  EC8C  F00E         	call	_sprintf	;wreg free
  2156  002DC2  0100               	movlb	0	; () banked
  2157  002DC4  51C1               	movf	?_sprintf& (0+255),w,b
  2158  002DC6  ECEA  F032         	call	_write_LCD
  2159  002DCA                     
  2160                           ;CalculadoraLCD.c: 152: for (t = 1; t < 5; t++) {
  2161  002DCA  0E01               	movlw	1
  2162  002DCC  0100               	movlb	0	; () banked
  2163  002DCE  6FBF               	movwf	_t& (0+255),b
  2164  002DD0                     l5207:
  2165  002DD0  FFFF               	dw	65535	; assembler added errata NOP
  2166                           
  2167                           ; BSR set to: 0
  2168  002DD2  0E04               	movlw	4
  2169  002DD4  65BF               	cpfsgt	_t& (0+255),b
  2170  002DD6  EFEF  F016         	goto	u4951
  2171  002DDA  EFF2  F016         	goto	u4950
  2172  002DDE                     u4951:
  2173  002DDE  FFFF               	dw	65535	; assembler added errata NOP
  2174  002DE0  EFF5  F016         	goto	l5211
  2175  002DE4                     u4950:
  2176  002DE4  FFFF               	dw	65535	; assembler added errata NOP
  2177  002DE6  EF10  F017         	goto	l5217
  2178  002DEA                     l5211:
  2179  002DEA  FFFF               	dw	65535	; assembler added errata NOP
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;CalculadoraLCD.c: 153: bin3[t] = bin1[t] & bin2[t];
  2183  002DEC  0E99               	movlw	low _bin3
  2184  002DEE  25BF               	addwf	_t& (0+255),w,b
  2185  002DF0  6ED9               	movwf	fsr2l,c
  2186  002DF2  6ADA               	clrf	fsr2h,c
  2187  002DF4  0E00               	movlw	high _bin3
  2188  002DF6  22DA               	addwfc	fsr2h,f,c
  2189  002DF8  0E9E               	movlw	low _bin2
  2190  002DFA  25BF               	addwf	_t& (0+255),w,b
  2191  002DFC  6EE1               	movwf	fsr1l,c
  2192  002DFE  6AE2               	clrf	fsr1h,c
  2193  002E00  0E00               	movlw	high _bin2
  2194  002E02  22E2               	addwfc	fsr1h,f,c
  2195  002E04  50E7               	movf	indf1,w,c
  2196  002E06  6FF0               	movwf	??_main& (0+255),b
  2197  002E08  0EA3               	movlw	low _bin1
  2198  002E0A  25BF               	addwf	_t& (0+255),w,b
  2199  002E0C  6EE1               	movwf	fsr1l,c
  2200  002E0E  6AE2               	clrf	fsr1h,c
  2201  002E10  0E00               	movlw	high _bin1
  2202  002E12  22E2               	addwfc	fsr1h,f,c
  2203  002E14  50E7               	movf	indf1,w,c
  2204  002E16  15F0               	andwf	??_main& (0+255),w,b
  2205  002E18  6EDF               	movwf	indf2,c
  2206  002E1A                     
  2207                           ; BSR set to: 0
  2208  002E1A  2BBF               	incf	_t& (0+255),f,b
  2209  002E1C  EFE8  F016         	goto	l5207
  2210  002E20                     l5217:
  2211  002E20  FFFF               	dw	65535	; assembler added errata NOP
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;CalculadoraLCD.c: 154: };CalculadoraLCD.c: 155: ins_LCD(192);
  2215  002E22  0EC0               	movlw	192
  2216  002E24  EC94  F032         	call	_ins_LCD
  2217  002E28                     
  2218                           ;CalculadoraLCD.c: 156: write_LCD(sprintf(buffer, "R AND : %d%d%d%d", bin3[1], bin3[2], 
      +                          bin3[3], bin3[4]));
  2219  002E28  0E04               	movlw	low _buffer
  2220  002E2A  0100               	movlb	0	; () banked
  2221  002E2C  6FC1               	movwf	sprintf@sp& (0+255),b
  2222  002E2E  0E01               	movlw	high _buffer
  2223  002E30  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  2224  002E32  0ECC               	movlw	low STR_20
  2225  002E34  6FC3               	movwf	sprintf@f& (0+255),b
  2226  002E36  0E7E               	movlw	high STR_20
  2227  002E38  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  2228  002E3A  C09A  F0C5         	movff	_bin3+1,?_sprintf+4
  2229  002E3E  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  2230  002E40  C09B  F0C7         	movff	_bin3+2,?_sprintf+6
  2231  002E44  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  2232  002E46  C09C  F0C9         	movff	_bin3+3,?_sprintf+8
  2233  002E4A  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  2234  002E4C  C09D  F0CB         	movff	_bin3+4,?_sprintf+10
  2235  002E50  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  2236  002E52  EC8C  F00E         	call	_sprintf	;wreg free
  2237  002E56  0100               	movlb	0	; () banked
  2238  002E58  51C1               	movf	?_sprintf& (0+255),w,b
  2239  002E5A  ECEA  F032         	call	_write_LCD
  2240  002E5E  EFDE  F014         	goto	l5099
  2241  002E62                     l5223:
  2242  002E62  FFFF               	dw	65535	; assembler added errata NOP
  2243                           
  2244                           ; BSR set to: 0
  2245                           ;CalculadoraLCD.c: 161: for (t = 4; t > 0; t--) {
  2246  002E64  0E04               	movlw	4
  2247  002E66  6FBF               	movwf	_t& (0+255),b
  2248  002E68  51BF               	movf	_t& (0+255),w,b
  2249  002E6A  A4D8               	btfss	status,2,c
  2250  002E6C  EF3A  F017         	goto	u4961
  2251  002E70  EF3D  F017         	goto	u4960
  2252  002E74                     u4961:
  2253  002E74  FFFF               	dw	65535	; assembler added errata NOP
  2254  002E76  EF40  F017         	goto	l5227
  2255  002E7A                     u4960:
  2256  002E7A  FFFF               	dw	65535	; assembler added errata NOP
  2257  002E7C  EF60  F017         	goto	l5235
  2258  002E80                     l5227:
  2259  002E80  FFFF               	dw	65535	; assembler added errata NOP
  2260                           
  2261                           ; BSR set to: 0
  2262                           ;CalculadoraLCD.c: 162: bin1[t] = A % 2;
  2263  002E82  0EA3               	movlw	low _bin1
  2264  002E84  25BF               	addwf	_t& (0+255),w,b
  2265  002E86  6ED9               	movwf	fsr2l,c
  2266  002E88  6ADA               	clrf	fsr2h,c
  2267  002E8A  0E00               	movlw	high _bin1
  2268  002E8C  22DA               	addwfc	fsr2h,f,c
  2269  002E8E  51BE               	movf	_A& (0+255),w,b
  2270  002E90  0B01               	andlw	1
  2271  002E92  6EDF               	movwf	indf2,c
  2272  002E94                     
  2273                           ; BSR set to: 0
  2274                           ;CalculadoraLCD.c: 163: A = A / 2;
  2275  002E94  C0BE  F007         	movff	_A,___awdiv@dividend
  2276  002E98  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2277  002E9A  0E00               	movlw	0
  2278  002E9C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2279  002E9E  0E02               	movlw	2
  2280  002EA0  6E09               	movwf	___awdiv@divisor^0,c
  2281  002EA2  EC74  F036         	call	___awdiv	;wreg free
  2282  002EA6  5007               	movf	?___awdiv^0,w,c
  2283  002EA8  0100               	movlb	0	; () banked
  2284  002EAA  6FBE               	movwf	_A& (0+255),b
  2285  002EAC                     
  2286                           ; BSR set to: 0
  2287  002EAC  07BF               	decf	_t& (0+255),f,b
  2288  002EAE                     
  2289                           ; BSR set to: 0
  2290  002EAE  51BF               	movf	_t& (0+255),w,b
  2291  002EB0  A4D8               	btfss	status,2,c
  2292  002EB2  EF5D  F017         	goto	u4971
  2293  002EB6  EF60  F017         	goto	u4970
  2294  002EBA                     u4971:
  2295  002EBA  FFFF               	dw	65535	; assembler added errata NOP
  2296  002EBC  EF40  F017         	goto	l5227
  2297  002EC0                     u4970:
  2298  002EC0                     l5235:
  2299  002EC0  FFFF               	dw	65535	; assembler added errata NOP
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;CalculadoraLCD.c: 164: };CalculadoraLCD.c: 165: ins_LCD(128);
  2303  002EC2  0E80               	movlw	128
  2304  002EC4  EC94  F032         	call	_ins_LCD
  2305  002EC8                     
  2306                           ;CalculadoraLCD.c: 166: write_LCD(sprintf(buffer, "A=%i%i%i%i", bin1[1], bin1[2], bin1[3
      +                          ], bin1[4]));
  2307  002EC8  0E04               	movlw	low _buffer
  2308  002ECA  0100               	movlb	0	; () banked
  2309  002ECC  6FC1               	movwf	sprintf@sp& (0+255),b
  2310  002ECE  0E01               	movlw	high _buffer
  2311  002ED0  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  2312  002ED2  0E93               	movlw	low STR_18
  2313  002ED4  6FC3               	movwf	sprintf@f& (0+255),b
  2314  002ED6  0E7F               	movlw	high STR_18
  2315  002ED8  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  2316  002EDA  C0A4  F0C5         	movff	_bin1+1,?_sprintf+4
  2317  002EDE  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  2318  002EE0  C0A5  F0C7         	movff	_bin1+2,?_sprintf+6
  2319  002EE4  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  2320  002EE6  C0A6  F0C9         	movff	_bin1+3,?_sprintf+8
  2321  002EEA  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  2322  002EEC  C0A7  F0CB         	movff	_bin1+4,?_sprintf+10
  2323  002EF0  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  2324  002EF2  EC8C  F00E         	call	_sprintf	;wreg free
  2325  002EF6  0100               	movlb	0	; () banked
  2326  002EF8  51C1               	movf	?_sprintf& (0+255),w,b
  2327  002EFA  ECEA  F032         	call	_write_LCD
  2328  002EFE                     
  2329                           ;CalculadoraLCD.c: 167: for (t = 4; t > 0; t--) {
  2330  002EFE  0E04               	movlw	4
  2331  002F00  0100               	movlb	0	; () banked
  2332  002F02  6FBF               	movwf	_t& (0+255),b
  2333  002F04                     l5241:
  2334  002F04  FFFF               	dw	65535	; assembler added errata NOP
  2335                           
  2336                           ; BSR set to: 0
  2337  002F06  51BF               	movf	_t& (0+255),w,b
  2338  002F08  A4D8               	btfss	status,2,c
  2339  002F0A  EF89  F017         	goto	u4981
  2340  002F0E  EF8C  F017         	goto	u4980
  2341  002F12                     u4981:
  2342  002F12  FFFF               	dw	65535	; assembler added errata NOP
  2343  002F14  EF8F  F017         	goto	l5245
  2344  002F18                     u4980:
  2345  002F18  FFFF               	dw	65535	; assembler added errata NOP
  2346  002F1A  EFA8  F017         	goto	l5253
  2347  002F1E                     l5245:
  2348  002F1E  FFFF               	dw	65535	; assembler added errata NOP
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;CalculadoraLCD.c: 168: bin2[t] = B % 2;
  2352  002F20  0E9E               	movlw	low _bin2
  2353  002F22  25BF               	addwf	_t& (0+255),w,b
  2354  002F24  6ED9               	movwf	fsr2l,c
  2355  002F26  6ADA               	clrf	fsr2h,c
  2356  002F28  0E00               	movlw	high _bin2
  2357  002F2A  22DA               	addwfc	fsr2h,f,c
  2358  002F2C  51C0               	movf	_B& (0+255),w,b
  2359  002F2E  0B01               	andlw	1
  2360  002F30  6EDF               	movwf	indf2,c
  2361  002F32                     
  2362                           ; BSR set to: 0
  2363                           ;CalculadoraLCD.c: 169: B = B / 2;
  2364  002F32  C0C0  F007         	movff	_B,___awdiv@dividend
  2365  002F36  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2366  002F38  0E00               	movlw	0
  2367  002F3A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2368  002F3C  0E02               	movlw	2
  2369  002F3E  6E09               	movwf	___awdiv@divisor^0,c
  2370  002F40  EC74  F036         	call	___awdiv	;wreg free
  2371  002F44  5007               	movf	?___awdiv^0,w,c
  2372  002F46  0100               	movlb	0	; () banked
  2373  002F48  6FC0               	movwf	_B& (0+255),b
  2374  002F4A                     
  2375                           ; BSR set to: 0
  2376  002F4A  07BF               	decf	_t& (0+255),f,b
  2377  002F4C  EF82  F017         	goto	l5241
  2378  002F50                     l5253:
  2379  002F50  FFFF               	dw	65535	; assembler added errata NOP
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;CalculadoraLCD.c: 170: };CalculadoraLCD.c: 171: ins_LCD(135);
  2383  002F52  0E87               	movlw	135
  2384  002F54  EC94  F032         	call	_ins_LCD
  2385  002F58                     
  2386                           ;CalculadoraLCD.c: 172: write_LCD(sprintf(buffer, "B=%i%i%i%i", bin2[1], bin2[2], bin2[3
      +                          ], bin2[4]));
  2387  002F58  0E04               	movlw	low _buffer
  2388  002F5A  0100               	movlb	0	; () banked
  2389  002F5C  6FC1               	movwf	sprintf@sp& (0+255),b
  2390  002F5E  0E01               	movlw	high _buffer
  2391  002F60  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  2392  002F62  0E9E               	movlw	low STR_19
  2393  002F64  6FC3               	movwf	sprintf@f& (0+255),b
  2394  002F66  0E7F               	movlw	high STR_19
  2395  002F68  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  2396  002F6A  C09F  F0C5         	movff	_bin2+1,?_sprintf+4
  2397  002F6E  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  2398  002F70  C0A0  F0C7         	movff	_bin2+2,?_sprintf+6
  2399  002F74  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  2400  002F76  C0A1  F0C9         	movff	_bin2+3,?_sprintf+8
  2401  002F7A  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  2402  002F7C  C0A2  F0CB         	movff	_bin2+4,?_sprintf+10
  2403  002F80  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  2404  002F82  EC8C  F00E         	call	_sprintf	;wreg free
  2405  002F86  0100               	movlb	0	; () banked
  2406  002F88  51C1               	movf	?_sprintf& (0+255),w,b
  2407  002F8A  ECEA  F032         	call	_write_LCD
  2408  002F8E                     
  2409                           ;CalculadoraLCD.c: 173: for (t = 1; t < 5; t++) {
  2410  002F8E  0E01               	movlw	1
  2411  002F90  0100               	movlb	0	; () banked
  2412  002F92  6FBF               	movwf	_t& (0+255),b
  2413  002F94                     l5259:
  2414  002F94  FFFF               	dw	65535	; assembler added errata NOP
  2415                           
  2416                           ; BSR set to: 0
  2417  002F96  0E04               	movlw	4
  2418  002F98  65BF               	cpfsgt	_t& (0+255),b
  2419  002F9A  EFD1  F017         	goto	u4991
  2420  002F9E  EFD4  F017         	goto	u4990
  2421  002FA2                     u4991:
  2422  002FA2  FFFF               	dw	65535	; assembler added errata NOP
  2423  002FA4  EFD7  F017         	goto	l5263
  2424  002FA8                     u4990:
  2425  002FA8  FFFF               	dw	65535	; assembler added errata NOP
  2426  002FAA  EFF2  F017         	goto	l5269
  2427  002FAE                     l5263:
  2428  002FAE  FFFF               	dw	65535	; assembler added errata NOP
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;CalculadoraLCD.c: 174: bin3[t] = bin1[t] | bin2[t];
  2432  002FB0  0E99               	movlw	low _bin3
  2433  002FB2  25BF               	addwf	_t& (0+255),w,b
  2434  002FB4  6ED9               	movwf	fsr2l,c
  2435  002FB6  6ADA               	clrf	fsr2h,c
  2436  002FB8  0E00               	movlw	high _bin3
  2437  002FBA  22DA               	addwfc	fsr2h,f,c
  2438  002FBC  0E9E               	movlw	low _bin2
  2439  002FBE  25BF               	addwf	_t& (0+255),w,b
  2440  002FC0  6EE1               	movwf	fsr1l,c
  2441  002FC2  6AE2               	clrf	fsr1h,c
  2442  002FC4  0E00               	movlw	high _bin2
  2443  002FC6  22E2               	addwfc	fsr1h,f,c
  2444  002FC8  50E7               	movf	indf1,w,c
  2445  002FCA  6FF0               	movwf	??_main& (0+255),b
  2446  002FCC  0EA3               	movlw	low _bin1
  2447  002FCE  25BF               	addwf	_t& (0+255),w,b
  2448  002FD0  6EE1               	movwf	fsr1l,c
  2449  002FD2  6AE2               	clrf	fsr1h,c
  2450  002FD4  0E00               	movlw	high _bin1
  2451  002FD6  22E2               	addwfc	fsr1h,f,c
  2452  002FD8  50E7               	movf	indf1,w,c
  2453  002FDA  11F0               	iorwf	??_main& (0+255),w,b
  2454  002FDC  6EDF               	movwf	indf2,c
  2455  002FDE                     
  2456                           ; BSR set to: 0
  2457  002FDE  2BBF               	incf	_t& (0+255),f,b
  2458  002FE0  EFCA  F017         	goto	l5259
  2459  002FE4                     l5269:
  2460  002FE4  FFFF               	dw	65535	; assembler added errata NOP
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;CalculadoraLCD.c: 175: };CalculadoraLCD.c: 176: ins_LCD(192);
  2464  002FE6  0EC0               	movlw	192
  2465  002FE8  EC94  F032         	call	_ins_LCD
  2466  002FEC                     
  2467                           ;CalculadoraLCD.c: 177: write_LCD(sprintf(buffer, "R OR  : %d%d%d%d", bin3[1], bin3[2], 
      +                          bin3[3], bin3[4]));
  2468  002FEC  0E04               	movlw	low _buffer
  2469  002FEE  0100               	movlb	0	; () banked
  2470  002FF0  6FC1               	movwf	sprintf@sp& (0+255),b
  2471  002FF2  0E01               	movlw	high _buffer
  2472  002FF4  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  2473  002FF6  0EBB               	movlw	low STR_23
  2474  002FF8  6FC3               	movwf	sprintf@f& (0+255),b
  2475  002FFA  0E7E               	movlw	high STR_23
  2476  002FFC  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  2477  002FFE  C09A  F0C5         	movff	_bin3+1,?_sprintf+4
  2478  003002  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  2479  003004  C09B  F0C7         	movff	_bin3+2,?_sprintf+6
  2480  003008  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  2481  00300A  C09C  F0C9         	movff	_bin3+3,?_sprintf+8
  2482  00300E  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  2483  003010  C09D  F0CB         	movff	_bin3+4,?_sprintf+10
  2484  003014  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  2485  003016  EC8C  F00E         	call	_sprintf	;wreg free
  2486  00301A  0100               	movlb	0	; () banked
  2487  00301C  51C1               	movf	?_sprintf& (0+255),w,b
  2488  00301E  ECEA  F032         	call	_write_LCD
  2489  003022  EFDE  F014         	goto	l5099
  2490  003026                     l5275:
  2491  003026  FFFF               	dw	65535	; assembler added errata NOP
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;CalculadoraLCD.c: 182: for (t = 4; t > 0; t--) {
  2495  003028  0E04               	movlw	4
  2496  00302A  6FBF               	movwf	_t& (0+255),b
  2497  00302C  51BF               	movf	_t& (0+255),w,b
  2498  00302E  A4D8               	btfss	status,2,c
  2499  003030  EF1C  F018         	goto	u5001
  2500  003034  EF1F  F018         	goto	u5000
  2501  003038                     u5001:
  2502  003038  FFFF               	dw	65535	; assembler added errata NOP
  2503  00303A  EF22  F018         	goto	l5279
  2504  00303E                     u5000:
  2505  00303E  FFFF               	dw	65535	; assembler added errata NOP
  2506  003040  EF42  F018         	goto	l5287
  2507  003044                     l5279:
  2508  003044  FFFF               	dw	65535	; assembler added errata NOP
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;CalculadoraLCD.c: 183: bin1[t] = A % 2;
  2512  003046  0EA3               	movlw	low _bin1
  2513  003048  25BF               	addwf	_t& (0+255),w,b
  2514  00304A  6ED9               	movwf	fsr2l,c
  2515  00304C  6ADA               	clrf	fsr2h,c
  2516  00304E  0E00               	movlw	high _bin1
  2517  003050  22DA               	addwfc	fsr2h,f,c
  2518  003052  51BE               	movf	_A& (0+255),w,b
  2519  003054  0B01               	andlw	1
  2520  003056  6EDF               	movwf	indf2,c
  2521  003058                     
  2522                           ; BSR set to: 0
  2523                           ;CalculadoraLCD.c: 184: A = A / 2;
  2524  003058  C0BE  F007         	movff	_A,___awdiv@dividend
  2525  00305C  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2526  00305E  0E00               	movlw	0
  2527  003060  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2528  003062  0E02               	movlw	2
  2529  003064  6E09               	movwf	___awdiv@divisor^0,c
  2530  003066  EC74  F036         	call	___awdiv	;wreg free
  2531  00306A  5007               	movf	?___awdiv^0,w,c
  2532  00306C  0100               	movlb	0	; () banked
  2533  00306E  6FBE               	movwf	_A& (0+255),b
  2534  003070                     
  2535                           ; BSR set to: 0
  2536  003070  07BF               	decf	_t& (0+255),f,b
  2537  003072                     
  2538                           ; BSR set to: 0
  2539  003072  51BF               	movf	_t& (0+255),w,b
  2540  003074  A4D8               	btfss	status,2,c
  2541  003076  EF3F  F018         	goto	u5011
  2542  00307A  EF42  F018         	goto	u5010
  2543  00307E                     u5011:
  2544  00307E  FFFF               	dw	65535	; assembler added errata NOP
  2545  003080  EF22  F018         	goto	l5279
  2546  003084                     u5010:
  2547  003084                     l5287:
  2548  003084  FFFF               	dw	65535	; assembler added errata NOP
  2549                           
  2550                           ; BSR set to: 0
  2551                           ;CalculadoraLCD.c: 185: };CalculadoraLCD.c: 186: ins_LCD(128);
  2552  003086  0E80               	movlw	128
  2553  003088  EC94  F032         	call	_ins_LCD
  2554  00308C                     
  2555                           ;CalculadoraLCD.c: 187: write_LCD(sprintf(buffer, "A=%i%i%i%i", bin1[1], bin1[2], bin1[3
      +                          ], bin1[4]));
  2556  00308C  0E04               	movlw	low _buffer
  2557  00308E  0100               	movlb	0	; () banked
  2558  003090  6FC1               	movwf	sprintf@sp& (0+255),b
  2559  003092  0E01               	movlw	high _buffer
  2560  003094  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  2561  003096  0E93               	movlw	low STR_18
  2562  003098  6FC3               	movwf	sprintf@f& (0+255),b
  2563  00309A  0E7F               	movlw	high STR_18
  2564  00309C  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  2565  00309E  C0A4  F0C5         	movff	_bin1+1,?_sprintf+4
  2566  0030A2  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  2567  0030A4  C0A5  F0C7         	movff	_bin1+2,?_sprintf+6
  2568  0030A8  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  2569  0030AA  C0A6  F0C9         	movff	_bin1+3,?_sprintf+8
  2570  0030AE  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  2571  0030B0  C0A7  F0CB         	movff	_bin1+4,?_sprintf+10
  2572  0030B4  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  2573  0030B6  EC8C  F00E         	call	_sprintf	;wreg free
  2574  0030BA  0100               	movlb	0	; () banked
  2575  0030BC  51C1               	movf	?_sprintf& (0+255),w,b
  2576  0030BE  ECEA  F032         	call	_write_LCD
  2577  0030C2                     
  2578                           ;CalculadoraLCD.c: 188: for (t = 4; t > 0; t--) {
  2579  0030C2  0E04               	movlw	4
  2580  0030C4  0100               	movlb	0	; () banked
  2581  0030C6  6FBF               	movwf	_t& (0+255),b
  2582  0030C8                     l5293:
  2583  0030C8  FFFF               	dw	65535	; assembler added errata NOP
  2584                           
  2585                           ; BSR set to: 0
  2586  0030CA  51BF               	movf	_t& (0+255),w,b
  2587  0030CC  A4D8               	btfss	status,2,c
  2588  0030CE  EF6B  F018         	goto	u5021
  2589  0030D2  EF6E  F018         	goto	u5020
  2590  0030D6                     u5021:
  2591  0030D6  FFFF               	dw	65535	; assembler added errata NOP
  2592  0030D8  EF71  F018         	goto	l5297
  2593  0030DC                     u5020:
  2594  0030DC  FFFF               	dw	65535	; assembler added errata NOP
  2595  0030DE  EF8A  F018         	goto	l5305
  2596  0030E2                     l5297:
  2597  0030E2  FFFF               	dw	65535	; assembler added errata NOP
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;CalculadoraLCD.c: 189: bin2[t] = B % 2;
  2601  0030E4  0E9E               	movlw	low _bin2
  2602  0030E6  25BF               	addwf	_t& (0+255),w,b
  2603  0030E8  6ED9               	movwf	fsr2l,c
  2604  0030EA  6ADA               	clrf	fsr2h,c
  2605  0030EC  0E00               	movlw	high _bin2
  2606  0030EE  22DA               	addwfc	fsr2h,f,c
  2607  0030F0  51C0               	movf	_B& (0+255),w,b
  2608  0030F2  0B01               	andlw	1
  2609  0030F4  6EDF               	movwf	indf2,c
  2610  0030F6                     
  2611                           ; BSR set to: 0
  2612                           ;CalculadoraLCD.c: 190: B = B / 2;
  2613  0030F6  C0C0  F007         	movff	_B,___awdiv@dividend
  2614  0030FA  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2615  0030FC  0E00               	movlw	0
  2616  0030FE  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2617  003100  0E02               	movlw	2
  2618  003102  6E09               	movwf	___awdiv@divisor^0,c
  2619  003104  EC74  F036         	call	___awdiv	;wreg free
  2620  003108  5007               	movf	?___awdiv^0,w,c
  2621  00310A  0100               	movlb	0	; () banked
  2622  00310C  6FC0               	movwf	_B& (0+255),b
  2623  00310E                     
  2624                           ; BSR set to: 0
  2625  00310E  07BF               	decf	_t& (0+255),f,b
  2626  003110  EF64  F018         	goto	l5293
  2627  003114                     l5305:
  2628  003114  FFFF               	dw	65535	; assembler added errata NOP
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;CalculadoraLCD.c: 191: };CalculadoraLCD.c: 192: ins_LCD(135);
  2632  003116  0E87               	movlw	135
  2633  003118  EC94  F032         	call	_ins_LCD
  2634  00311C                     
  2635                           ;CalculadoraLCD.c: 193: write_LCD(sprintf(buffer, "B=%i%i%i%i", bin2[1], bin2[2], bin2[3
      +                          ], bin2[4]));
  2636  00311C  0E04               	movlw	low _buffer
  2637  00311E  0100               	movlb	0	; () banked
  2638  003120  6FC1               	movwf	sprintf@sp& (0+255),b
  2639  003122  0E01               	movlw	high _buffer
  2640  003124  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  2641  003126  0E9E               	movlw	low STR_19
  2642  003128  6FC3               	movwf	sprintf@f& (0+255),b
  2643  00312A  0E7F               	movlw	high STR_19
  2644  00312C  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  2645  00312E  C09F  F0C5         	movff	_bin2+1,?_sprintf+4
  2646  003132  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  2647  003134  C0A0  F0C7         	movff	_bin2+2,?_sprintf+6
  2648  003138  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  2649  00313A  C0A1  F0C9         	movff	_bin2+3,?_sprintf+8
  2650  00313E  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  2651  003140  C0A2  F0CB         	movff	_bin2+4,?_sprintf+10
  2652  003144  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  2653  003146  EC8C  F00E         	call	_sprintf	;wreg free
  2654  00314A  0100               	movlb	0	; () banked
  2655  00314C  51C1               	movf	?_sprintf& (0+255),w,b
  2656  00314E  ECEA  F032         	call	_write_LCD
  2657  003152                     
  2658                           ;CalculadoraLCD.c: 194: for (t = 1; t < 5; t++) {
  2659  003152  0E01               	movlw	1
  2660  003154  0100               	movlb	0	; () banked
  2661  003156  6FBF               	movwf	_t& (0+255),b
  2662  003158                     l5311:
  2663  003158  FFFF               	dw	65535	; assembler added errata NOP
  2664                           
  2665                           ; BSR set to: 0
  2666  00315A  0E04               	movlw	4
  2667  00315C  65BF               	cpfsgt	_t& (0+255),b
  2668  00315E  EFB3  F018         	goto	u5031
  2669  003162  EFB6  F018         	goto	u5030
  2670  003166                     u5031:
  2671  003166  FFFF               	dw	65535	; assembler added errata NOP
  2672  003168  EFB9  F018         	goto	l5315
  2673  00316C                     u5030:
  2674  00316C  FFFF               	dw	65535	; assembler added errata NOP
  2675  00316E  EFD4  F018         	goto	l5321
  2676  003172                     l5315:
  2677  003172  FFFF               	dw	65535	; assembler added errata NOP
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;CalculadoraLCD.c: 195: bin3[t] = bin1[t]^bin2[t];
  2681  003174  0E99               	movlw	low _bin3
  2682  003176  25BF               	addwf	_t& (0+255),w,b
  2683  003178  6ED9               	movwf	fsr2l,c
  2684  00317A  6ADA               	clrf	fsr2h,c
  2685  00317C  0E00               	movlw	high _bin3
  2686  00317E  22DA               	addwfc	fsr2h,f,c
  2687  003180  0E9E               	movlw	low _bin2
  2688  003182  25BF               	addwf	_t& (0+255),w,b
  2689  003184  6EE1               	movwf	fsr1l,c
  2690  003186  6AE2               	clrf	fsr1h,c
  2691  003188  0E00               	movlw	high _bin2
  2692  00318A  22E2               	addwfc	fsr1h,f,c
  2693  00318C  50E7               	movf	indf1,w,c
  2694  00318E  6FF0               	movwf	??_main& (0+255),b
  2695  003190  0EA3               	movlw	low _bin1
  2696  003192  25BF               	addwf	_t& (0+255),w,b
  2697  003194  6EE1               	movwf	fsr1l,c
  2698  003196  6AE2               	clrf	fsr1h,c
  2699  003198  0E00               	movlw	high _bin1
  2700  00319A  22E2               	addwfc	fsr1h,f,c
  2701  00319C  50E7               	movf	indf1,w,c
  2702  00319E  19F0               	xorwf	??_main& (0+255),w,b
  2703  0031A0  6EDF               	movwf	indf2,c
  2704  0031A2                     
  2705                           ; BSR set to: 0
  2706  0031A2  2BBF               	incf	_t& (0+255),f,b
  2707  0031A4  EFAC  F018         	goto	l5311
  2708  0031A8                     l5321:
  2709  0031A8  FFFF               	dw	65535	; assembler added errata NOP
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;CalculadoraLCD.c: 196: };CalculadoraLCD.c: 197: ins_LCD(192);
  2713  0031AA  0EC0               	movlw	192
  2714  0031AC  EC94  F032         	call	_ins_LCD
  2715  0031B0                     
  2716                           ;CalculadoraLCD.c: 198: write_LCD(sprintf(buffer, "R XOR : %d%d%d%d", bin3[1], bin3[2], 
      +                          bin3[3], bin3[4]));
  2717  0031B0  0E04               	movlw	low _buffer
  2718  0031B2  0100               	movlb	0	; () banked
  2719  0031B4  6FC1               	movwf	sprintf@sp& (0+255),b
  2720  0031B6  0E01               	movlw	high _buffer
  2721  0031B8  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  2722  0031BA  0EEE               	movlw	low STR_26
  2723  0031BC  6FC3               	movwf	sprintf@f& (0+255),b
  2724  0031BE  0E7E               	movlw	high STR_26
  2725  0031C0  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  2726  0031C2  C09A  F0C5         	movff	_bin3+1,?_sprintf+4
  2727  0031C6  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  2728  0031C8  C09B  F0C7         	movff	_bin3+2,?_sprintf+6
  2729  0031CC  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  2730  0031CE  C09C  F0C9         	movff	_bin3+3,?_sprintf+8
  2731  0031D2  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  2732  0031D4  C09D  F0CB         	movff	_bin3+4,?_sprintf+10
  2733  0031D8  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  2734  0031DA  EC8C  F00E         	call	_sprintf	;wreg free
  2735  0031DE  0100               	movlb	0	; () banked
  2736  0031E0  51C1               	movf	?_sprintf& (0+255),w,b
  2737  0031E2  ECEA  F032         	call	_write_LCD
  2738  0031E6  EFDE  F014         	goto	l5099
  2739  0031EA                     l5327:
  2740  0031EA  FFFF               	dw	65535	; assembler added errata NOP
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;CalculadoraLCD.c: 203: for (t = 4; t > 0; t--) {
  2744  0031EC  0E04               	movlw	4
  2745  0031EE  6FBF               	movwf	_t& (0+255),b
  2746  0031F0  51BF               	movf	_t& (0+255),w,b
  2747  0031F2  A4D8               	btfss	status,2,c
  2748  0031F4  EFFE  F018         	goto	u5041
  2749  0031F8  EF01  F019         	goto	u5040
  2750  0031FC                     u5041:
  2751  0031FC  FFFF               	dw	65535	; assembler added errata NOP
  2752  0031FE  EF04  F019         	goto	l5331
  2753  003202                     u5040:
  2754  003202  FFFF               	dw	65535	; assembler added errata NOP
  2755  003204  EF24  F019         	goto	l5339
  2756  003208                     l5331:
  2757  003208  FFFF               	dw	65535	; assembler added errata NOP
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;CalculadoraLCD.c: 204: bin1[t] = A % 2;
  2761  00320A  0EA3               	movlw	low _bin1
  2762  00320C  25BF               	addwf	_t& (0+255),w,b
  2763  00320E  6ED9               	movwf	fsr2l,c
  2764  003210  6ADA               	clrf	fsr2h,c
  2765  003212  0E00               	movlw	high _bin1
  2766  003214  22DA               	addwfc	fsr2h,f,c
  2767  003216  51BE               	movf	_A& (0+255),w,b
  2768  003218  0B01               	andlw	1
  2769  00321A  6EDF               	movwf	indf2,c
  2770  00321C                     
  2771                           ; BSR set to: 0
  2772                           ;CalculadoraLCD.c: 205: A = A / 2;
  2773  00321C  C0BE  F007         	movff	_A,___awdiv@dividend
  2774  003220  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2775  003222  0E00               	movlw	0
  2776  003224  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2777  003226  0E02               	movlw	2
  2778  003228  6E09               	movwf	___awdiv@divisor^0,c
  2779  00322A  EC74  F036         	call	___awdiv	;wreg free
  2780  00322E  5007               	movf	?___awdiv^0,w,c
  2781  003230  0100               	movlb	0	; () banked
  2782  003232  6FBE               	movwf	_A& (0+255),b
  2783  003234                     
  2784                           ; BSR set to: 0
  2785  003234  07BF               	decf	_t& (0+255),f,b
  2786  003236                     
  2787                           ; BSR set to: 0
  2788  003236  51BF               	movf	_t& (0+255),w,b
  2789  003238  A4D8               	btfss	status,2,c
  2790  00323A  EF21  F019         	goto	u5051
  2791  00323E  EF24  F019         	goto	u5050
  2792  003242                     u5051:
  2793  003242  FFFF               	dw	65535	; assembler added errata NOP
  2794  003244  EF04  F019         	goto	l5331
  2795  003248                     u5050:
  2796  003248                     l5339:
  2797  003248  FFFF               	dw	65535	; assembler added errata NOP
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;CalculadoraLCD.c: 206: };CalculadoraLCD.c: 207: ins_LCD(128);
  2801  00324A  0E80               	movlw	128
  2802  00324C  EC94  F032         	call	_ins_LCD
  2803  003250                     
  2804                           ;CalculadoraLCD.c: 208: write_LCD(sprintf(buffer, "A=%i%i%i%i", bin1[1], bin1[2], bin1[3
      +                          ], bin1[4]));
  2805  003250  0E04               	movlw	low _buffer
  2806  003252  0100               	movlb	0	; () banked
  2807  003254  6FC1               	movwf	sprintf@sp& (0+255),b
  2808  003256  0E01               	movlw	high _buffer
  2809  003258  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  2810  00325A  0E93               	movlw	low STR_18
  2811  00325C  6FC3               	movwf	sprintf@f& (0+255),b
  2812  00325E  0E7F               	movlw	high STR_18
  2813  003260  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  2814  003262  C0A4  F0C5         	movff	_bin1+1,?_sprintf+4
  2815  003266  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  2816  003268  C0A5  F0C7         	movff	_bin1+2,?_sprintf+6
  2817  00326C  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  2818  00326E  C0A6  F0C9         	movff	_bin1+3,?_sprintf+8
  2819  003272  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  2820  003274  C0A7  F0CB         	movff	_bin1+4,?_sprintf+10
  2821  003278  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  2822  00327A  EC8C  F00E         	call	_sprintf	;wreg free
  2823  00327E  0100               	movlb	0	; () banked
  2824  003280  51C1               	movf	?_sprintf& (0+255),w,b
  2825  003282  ECEA  F032         	call	_write_LCD
  2826  003286                     
  2827                           ;CalculadoraLCD.c: 209: for (t = 4; t > 0; t--) {
  2828  003286  0E04               	movlw	4
  2829  003288  0100               	movlb	0	; () banked
  2830  00328A  6FBF               	movwf	_t& (0+255),b
  2831  00328C                     l5345:
  2832  00328C  FFFF               	dw	65535	; assembler added errata NOP
  2833                           
  2834                           ; BSR set to: 0
  2835  00328E  51BF               	movf	_t& (0+255),w,b
  2836  003290  A4D8               	btfss	status,2,c
  2837  003292  EF4D  F019         	goto	u5061
  2838  003296  EF50  F019         	goto	u5060
  2839  00329A                     u5061:
  2840  00329A  FFFF               	dw	65535	; assembler added errata NOP
  2841  00329C  EF53  F019         	goto	l5349
  2842  0032A0                     u5060:
  2843  0032A0  FFFF               	dw	65535	; assembler added errata NOP
  2844  0032A2  EF6C  F019         	goto	l5357
  2845  0032A6                     l5349:
  2846  0032A6  FFFF               	dw	65535	; assembler added errata NOP
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;CalculadoraLCD.c: 210: bin2[t] = B % 2;
  2850  0032A8  0E9E               	movlw	low _bin2
  2851  0032AA  25BF               	addwf	_t& (0+255),w,b
  2852  0032AC  6ED9               	movwf	fsr2l,c
  2853  0032AE  6ADA               	clrf	fsr2h,c
  2854  0032B0  0E00               	movlw	high _bin2
  2855  0032B2  22DA               	addwfc	fsr2h,f,c
  2856  0032B4  51C0               	movf	_B& (0+255),w,b
  2857  0032B6  0B01               	andlw	1
  2858  0032B8  6EDF               	movwf	indf2,c
  2859  0032BA                     
  2860                           ; BSR set to: 0
  2861                           ;CalculadoraLCD.c: 211: B = B / 2;
  2862  0032BA  C0C0  F007         	movff	_B,___awdiv@dividend
  2863  0032BE  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2864  0032C0  0E00               	movlw	0
  2865  0032C2  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2866  0032C4  0E02               	movlw	2
  2867  0032C6  6E09               	movwf	___awdiv@divisor^0,c
  2868  0032C8  EC74  F036         	call	___awdiv	;wreg free
  2869  0032CC  5007               	movf	?___awdiv^0,w,c
  2870  0032CE  0100               	movlb	0	; () banked
  2871  0032D0  6FC0               	movwf	_B& (0+255),b
  2872  0032D2                     
  2873                           ; BSR set to: 0
  2874  0032D2  07BF               	decf	_t& (0+255),f,b
  2875  0032D4  EF46  F019         	goto	l5345
  2876  0032D8                     l5357:
  2877  0032D8  FFFF               	dw	65535	; assembler added errata NOP
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;CalculadoraLCD.c: 212: };CalculadoraLCD.c: 213: ins_LCD(135);
  2881  0032DA  0E87               	movlw	135
  2882  0032DC  EC94  F032         	call	_ins_LCD
  2883  0032E0                     
  2884                           ;CalculadoraLCD.c: 214: write_LCD(sprintf(buffer, "B=%i%i%i%i", bin2[1], bin2[2], bin2[3
      +                          ], bin2[4]));
  2885  0032E0  0E04               	movlw	low _buffer
  2886  0032E2  0100               	movlb	0	; () banked
  2887  0032E4  6FC1               	movwf	sprintf@sp& (0+255),b
  2888  0032E6  0E01               	movlw	high _buffer
  2889  0032E8  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  2890  0032EA  0E9E               	movlw	low STR_19
  2891  0032EC  6FC3               	movwf	sprintf@f& (0+255),b
  2892  0032EE  0E7F               	movlw	high STR_19
  2893  0032F0  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  2894  0032F2  C09F  F0C5         	movff	_bin2+1,?_sprintf+4
  2895  0032F6  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  2896  0032F8  C0A0  F0C7         	movff	_bin2+2,?_sprintf+6
  2897  0032FC  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  2898  0032FE  C0A1  F0C9         	movff	_bin2+3,?_sprintf+8
  2899  003302  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  2900  003304  C0A2  F0CB         	movff	_bin2+4,?_sprintf+10
  2901  003308  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  2902  00330A  EC8C  F00E         	call	_sprintf	;wreg free
  2903  00330E  0100               	movlb	0	; () banked
  2904  003310  51C1               	movf	?_sprintf& (0+255),w,b
  2905  003312  ECEA  F032         	call	_write_LCD
  2906  003316                     
  2907                           ;CalculadoraLCD.c: 215: for (t = 1; t < 5; t++) {
  2908  003316  0E01               	movlw	1
  2909  003318  0100               	movlb	0	; () banked
  2910  00331A  6FBF               	movwf	_t& (0+255),b
  2911  00331C                     l5363:
  2912  00331C  FFFF               	dw	65535	; assembler added errata NOP
  2913                           
  2914                           ; BSR set to: 0
  2915  00331E  0E04               	movlw	4
  2916  003320  65BF               	cpfsgt	_t& (0+255),b
  2917  003322  EF95  F019         	goto	u5071
  2918  003326  EF98  F019         	goto	u5070
  2919  00332A                     u5071:
  2920  00332A  FFFF               	dw	65535	; assembler added errata NOP
  2921  00332C  EF9B  F019         	goto	l5367
  2922  003330                     u5070:
  2923  003330  FFFF               	dw	65535	; assembler added errata NOP
  2924  003332  EFC0  F019         	goto	l5373
  2925  003336                     l5367:
  2926  003336  FFFF               	dw	65535	; assembler added errata NOP
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;CalculadoraLCD.c: 216: bin3[t] = bin[t]&~(bin1[t] & bin2[t]);
  2930  003338  0E99               	movlw	low _bin3
  2931  00333A  25BF               	addwf	_t& (0+255),w,b
  2932  00333C  6ED9               	movwf	fsr2l,c
  2933  00333E  6ADA               	clrf	fsr2h,c
  2934  003340  0E00               	movlw	high _bin3
  2935  003342  22DA               	addwfc	fsr2h,f,c
  2936  003344  0E2C               	movlw	low _bin
  2937  003346  25BF               	addwf	_t& (0+255),w,b
  2938  003348  6EE1               	movwf	fsr1l,c
  2939  00334A  6AE2               	clrf	fsr1h,c
  2940  00334C  0E01               	movlw	high _bin
  2941  00334E  22E2               	addwfc	fsr1h,f,c
  2942  003350  50E7               	movf	indf1,w,c
  2943  003352  6FF0               	movwf	??_main& (0+255),b
  2944  003354  0E9E               	movlw	low _bin2
  2945  003356  25BF               	addwf	_t& (0+255),w,b
  2946  003358  6EE1               	movwf	fsr1l,c
  2947  00335A  6AE2               	clrf	fsr1h,c
  2948  00335C  0E00               	movlw	high _bin2
  2949  00335E  22E2               	addwfc	fsr1h,f,c
  2950  003360  50E7               	movf	indf1,w,c
  2951  003362  6FF1               	movwf	(??_main+1)& (0+255),b
  2952  003364  0EA3               	movlw	low _bin1
  2953  003366  25BF               	addwf	_t& (0+255),w,b
  2954  003368  6EE1               	movwf	fsr1l,c
  2955  00336A  6AE2               	clrf	fsr1h,c
  2956  00336C  0E00               	movlw	high _bin1
  2957  00336E  22E2               	addwfc	fsr1h,f,c
  2958  003370  50E7               	movf	indf1,w,c
  2959  003372  15F1               	andwf	(??_main+1)& (0+255),w,b
  2960  003374  0AFF               	xorlw	255
  2961  003376  15F0               	andwf	??_main& (0+255),w,b
  2962  003378  6EDF               	movwf	indf2,c
  2963  00337A                     
  2964                           ; BSR set to: 0
  2965  00337A  2BBF               	incf	_t& (0+255),f,b
  2966  00337C  EF8E  F019         	goto	l5363
  2967  003380                     l5373:
  2968  003380  FFFF               	dw	65535	; assembler added errata NOP
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;CalculadoraLCD.c: 217: };CalculadoraLCD.c: 218: ins_LCD(192);
  2972  003382  0EC0               	movlw	192
  2973  003384  EC94  F032         	call	_ins_LCD
  2974  003388                     
  2975                           ;CalculadoraLCD.c: 219: write_LCD(sprintf(buffer, "R NAND: %d%d%d%d", bin3[1], bin3[2], 
      +                          bin3[3], bin3[4]));
  2976  003388  0E04               	movlw	low _buffer
  2977  00338A  0100               	movlb	0	; () banked
  2978  00338C  6FC1               	movwf	sprintf@sp& (0+255),b
  2979  00338E  0E01               	movlw	high _buffer
  2980  003390  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  2981  003392  0EFF               	movlw	low STR_29
  2982  003394  6FC3               	movwf	sprintf@f& (0+255),b
  2983  003396  0E7E               	movlw	high STR_29
  2984  003398  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  2985  00339A  C09A  F0C5         	movff	_bin3+1,?_sprintf+4
  2986  00339E  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  2987  0033A0  C09B  F0C7         	movff	_bin3+2,?_sprintf+6
  2988  0033A4  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  2989  0033A6  C09C  F0C9         	movff	_bin3+3,?_sprintf+8
  2990  0033AA  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  2991  0033AC  C09D  F0CB         	movff	_bin3+4,?_sprintf+10
  2992  0033B0  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  2993  0033B2  EC8C  F00E         	call	_sprintf	;wreg free
  2994  0033B6  0100               	movlb	0	; () banked
  2995  0033B8  51C1               	movf	?_sprintf& (0+255),w,b
  2996  0033BA  ECEA  F032         	call	_write_LCD
  2997  0033BE  EFDE  F014         	goto	l5099
  2998  0033C2                     l5379:
  2999  0033C2  FFFF               	dw	65535	; assembler added errata NOP
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;CalculadoraLCD.c: 224: ins_LCD(1);
  3003  0033C4  0E01               	movlw	1
  3004  0033C6  EC94  F032         	call	_ins_LCD
  3005  0033CA                     
  3006                           ;CalculadoraLCD.c: 225: for (t = 4; t > 0; t--) {
  3007  0033CA  0E04               	movlw	4
  3008  0033CC  0100               	movlb	0	; () banked
  3009  0033CE  6FBF               	movwf	_t& (0+255),b
  3010  0033D0                     l5383:
  3011  0033D0  FFFF               	dw	65535	; assembler added errata NOP
  3012                           
  3013                           ; BSR set to: 0
  3014  0033D2  51BF               	movf	_t& (0+255),w,b
  3015  0033D4  A4D8               	btfss	status,2,c
  3016  0033D6  EFEF  F019         	goto	u5081
  3017  0033DA  EFF2  F019         	goto	u5080
  3018  0033DE                     u5081:
  3019  0033DE  FFFF               	dw	65535	; assembler added errata NOP
  3020  0033E0  EFF5  F019         	goto	l5387
  3021  0033E4                     u5080:
  3022  0033E4  FFFF               	dw	65535	; assembler added errata NOP
  3023  0033E6  EF0E  F01A         	goto	l5395
  3024  0033EA                     l5387:
  3025  0033EA  FFFF               	dw	65535	; assembler added errata NOP
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;CalculadoraLCD.c: 226: bin1[t] = A % 2;
  3029  0033EC  0EA3               	movlw	low _bin1
  3030  0033EE  25BF               	addwf	_t& (0+255),w,b
  3031  0033F0  6ED9               	movwf	fsr2l,c
  3032  0033F2  6ADA               	clrf	fsr2h,c
  3033  0033F4  0E00               	movlw	high _bin1
  3034  0033F6  22DA               	addwfc	fsr2h,f,c
  3035  0033F8  51BE               	movf	_A& (0+255),w,b
  3036  0033FA  0B01               	andlw	1
  3037  0033FC  6EDF               	movwf	indf2,c
  3038  0033FE                     
  3039                           ; BSR set to: 0
  3040                           ;CalculadoraLCD.c: 227: A = A / 2;
  3041  0033FE  C0BE  F007         	movff	_A,___awdiv@dividend
  3042  003402  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3043  003404  0E00               	movlw	0
  3044  003406  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3045  003408  0E02               	movlw	2
  3046  00340A  6E09               	movwf	___awdiv@divisor^0,c
  3047  00340C  EC74  F036         	call	___awdiv	;wreg free
  3048  003410  5007               	movf	?___awdiv^0,w,c
  3049  003412  0100               	movlb	0	; () banked
  3050  003414  6FBE               	movwf	_A& (0+255),b
  3051  003416                     
  3052                           ; BSR set to: 0
  3053  003416  07BF               	decf	_t& (0+255),f,b
  3054  003418  EFE8  F019         	goto	l5383
  3055  00341C                     l5395:
  3056  00341C  FFFF               	dw	65535	; assembler added errata NOP
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;CalculadoraLCD.c: 228: };CalculadoraLCD.c: 229: ins_LCD(128);
  3060  00341E  0E80               	movlw	128
  3061  003420  EC94  F032         	call	_ins_LCD
  3062  003424                     
  3063                           ;CalculadoraLCD.c: 230: write_LCD(sprintf(buffer, "A=%i%i%i%i", bin1[1], bin1[2], bin1[3
      +                          ], bin1[4]));
  3064  003424  0E04               	movlw	low _buffer
  3065  003426  0100               	movlb	0	; () banked
  3066  003428  6FC1               	movwf	sprintf@sp& (0+255),b
  3067  00342A  0E01               	movlw	high _buffer
  3068  00342C  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  3069  00342E  0E93               	movlw	low STR_18
  3070  003430  6FC3               	movwf	sprintf@f& (0+255),b
  3071  003432  0E7F               	movlw	high STR_18
  3072  003434  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  3073  003436  C0A4  F0C5         	movff	_bin1+1,?_sprintf+4
  3074  00343A  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  3075  00343C  C0A5  F0C7         	movff	_bin1+2,?_sprintf+6
  3076  003440  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  3077  003442  C0A6  F0C9         	movff	_bin1+3,?_sprintf+8
  3078  003446  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  3079  003448  C0A7  F0CB         	movff	_bin1+4,?_sprintf+10
  3080  00344C  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  3081  00344E  EC8C  F00E         	call	_sprintf	;wreg free
  3082  003452  0100               	movlb	0	; () banked
  3083  003454  51C1               	movf	?_sprintf& (0+255),w,b
  3084  003456  ECEA  F032         	call	_write_LCD
  3085  00345A                     
  3086                           ;CalculadoraLCD.c: 231: for (t = 4; t > 0; t--) {
  3087  00345A  0E04               	movlw	4
  3088  00345C  0100               	movlb	0	; () banked
  3089  00345E  6FBF               	movwf	_t& (0+255),b
  3090  003460                     l5401:
  3091  003460  FFFF               	dw	65535	; assembler added errata NOP
  3092                           
  3093                           ; BSR set to: 0
  3094  003462  51BF               	movf	_t& (0+255),w,b
  3095  003464  A4D8               	btfss	status,2,c
  3096  003466  EF37  F01A         	goto	u5091
  3097  00346A  EF3A  F01A         	goto	u5090
  3098  00346E                     u5091:
  3099  00346E  FFFF               	dw	65535	; assembler added errata NOP
  3100  003470  EF3D  F01A         	goto	l5405
  3101  003474                     u5090:
  3102  003474  FFFF               	dw	65535	; assembler added errata NOP
  3103  003476  EF56  F01A         	goto	l5413
  3104  00347A                     l5405:
  3105  00347A  FFFF               	dw	65535	; assembler added errata NOP
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;CalculadoraLCD.c: 232: bin2[t] = B % 2;
  3109  00347C  0E9E               	movlw	low _bin2
  3110  00347E  25BF               	addwf	_t& (0+255),w,b
  3111  003480  6ED9               	movwf	fsr2l,c
  3112  003482  6ADA               	clrf	fsr2h,c
  3113  003484  0E00               	movlw	high _bin2
  3114  003486  22DA               	addwfc	fsr2h,f,c
  3115  003488  51C0               	movf	_B& (0+255),w,b
  3116  00348A  0B01               	andlw	1
  3117  00348C  6EDF               	movwf	indf2,c
  3118  00348E                     
  3119                           ; BSR set to: 0
  3120                           ;CalculadoraLCD.c: 233: B = B / 2;
  3121  00348E  C0C0  F007         	movff	_B,___awdiv@dividend
  3122  003492  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3123  003494  0E00               	movlw	0
  3124  003496  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3125  003498  0E02               	movlw	2
  3126  00349A  6E09               	movwf	___awdiv@divisor^0,c
  3127  00349C  EC74  F036         	call	___awdiv	;wreg free
  3128  0034A0  5007               	movf	?___awdiv^0,w,c
  3129  0034A2  0100               	movlb	0	; () banked
  3130  0034A4  6FC0               	movwf	_B& (0+255),b
  3131  0034A6                     
  3132                           ; BSR set to: 0
  3133  0034A6  07BF               	decf	_t& (0+255),f,b
  3134  0034A8  EF30  F01A         	goto	l5401
  3135  0034AC                     l5413:
  3136  0034AC  FFFF               	dw	65535	; assembler added errata NOP
  3137                           
  3138                           ; BSR set to: 0
  3139                           ;CalculadoraLCD.c: 234: };CalculadoraLCD.c: 235: ins_LCD(135);
  3140  0034AE  0E87               	movlw	135
  3141  0034B0  EC94  F032         	call	_ins_LCD
  3142  0034B4                     
  3143                           ;CalculadoraLCD.c: 236: write_LCD(sprintf(buffer, "B=%i%i%i%i", bin2[1], bin2[2], bin2[3
      +                          ], bin2[4]));
  3144  0034B4  0E04               	movlw	low _buffer
  3145  0034B6  0100               	movlb	0	; () banked
  3146  0034B8  6FC1               	movwf	sprintf@sp& (0+255),b
  3147  0034BA  0E01               	movlw	high _buffer
  3148  0034BC  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  3149  0034BE  0E9E               	movlw	low STR_19
  3150  0034C0  6FC3               	movwf	sprintf@f& (0+255),b
  3151  0034C2  0E7F               	movlw	high STR_19
  3152  0034C4  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  3153  0034C6  C09F  F0C5         	movff	_bin2+1,?_sprintf+4
  3154  0034CA  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  3155  0034CC  C0A0  F0C7         	movff	_bin2+2,?_sprintf+6
  3156  0034D0  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  3157  0034D2  C0A1  F0C9         	movff	_bin2+3,?_sprintf+8
  3158  0034D6  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  3159  0034D8  C0A2  F0CB         	movff	_bin2+4,?_sprintf+10
  3160  0034DC  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  3161  0034DE  EC8C  F00E         	call	_sprintf	;wreg free
  3162  0034E2  0100               	movlb	0	; () banked
  3163  0034E4  51C1               	movf	?_sprintf& (0+255),w,b
  3164  0034E6  ECEA  F032         	call	_write_LCD
  3165  0034EA                     
  3166                           ;CalculadoraLCD.c: 237: for (t = 1; t < 5; t++) {
  3167  0034EA  0E01               	movlw	1
  3168  0034EC  0100               	movlb	0	; () banked
  3169  0034EE  6FBF               	movwf	_t& (0+255),b
  3170  0034F0                     l5419:
  3171  0034F0  FFFF               	dw	65535	; assembler added errata NOP
  3172                           
  3173                           ; BSR set to: 0
  3174  0034F2  0E04               	movlw	4
  3175  0034F4  65BF               	cpfsgt	_t& (0+255),b
  3176  0034F6  EF7F  F01A         	goto	u5101
  3177  0034FA  EF82  F01A         	goto	u5100
  3178  0034FE                     u5101:
  3179  0034FE  FFFF               	dw	65535	; assembler added errata NOP
  3180  003500  EF85  F01A         	goto	l5423
  3181  003504                     u5100:
  3182  003504  FFFF               	dw	65535	; assembler added errata NOP
  3183  003506  EFAA  F01A         	goto	l5429
  3184  00350A                     l5423:
  3185  00350A  FFFF               	dw	65535	; assembler added errata NOP
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;CalculadoraLCD.c: 238: bin3[t] = bin[t]&~(bin1[t] | bin2[t]);
  3189  00350C  0E99               	movlw	low _bin3
  3190  00350E  25BF               	addwf	_t& (0+255),w,b
  3191  003510  6ED9               	movwf	fsr2l,c
  3192  003512  6ADA               	clrf	fsr2h,c
  3193  003514  0E00               	movlw	high _bin3
  3194  003516  22DA               	addwfc	fsr2h,f,c
  3195  003518  0E2C               	movlw	low _bin
  3196  00351A  25BF               	addwf	_t& (0+255),w,b
  3197  00351C  6EE1               	movwf	fsr1l,c
  3198  00351E  6AE2               	clrf	fsr1h,c
  3199  003520  0E01               	movlw	high _bin
  3200  003522  22E2               	addwfc	fsr1h,f,c
  3201  003524  50E7               	movf	indf1,w,c
  3202  003526  6FF0               	movwf	??_main& (0+255),b
  3203  003528  0E9E               	movlw	low _bin2
  3204  00352A  25BF               	addwf	_t& (0+255),w,b
  3205  00352C  6EE1               	movwf	fsr1l,c
  3206  00352E  6AE2               	clrf	fsr1h,c
  3207  003530  0E00               	movlw	high _bin2
  3208  003532  22E2               	addwfc	fsr1h,f,c
  3209  003534  50E7               	movf	indf1,w,c
  3210  003536  6FF1               	movwf	(??_main+1)& (0+255),b
  3211  003538  0EA3               	movlw	low _bin1
  3212  00353A  25BF               	addwf	_t& (0+255),w,b
  3213  00353C  6EE1               	movwf	fsr1l,c
  3214  00353E  6AE2               	clrf	fsr1h,c
  3215  003540  0E00               	movlw	high _bin1
  3216  003542  22E2               	addwfc	fsr1h,f,c
  3217  003544  50E7               	movf	indf1,w,c
  3218  003546  11F1               	iorwf	(??_main+1)& (0+255),w,b
  3219  003548  0AFF               	xorlw	255
  3220  00354A  15F0               	andwf	??_main& (0+255),w,b
  3221  00354C  6EDF               	movwf	indf2,c
  3222  00354E                     
  3223                           ; BSR set to: 0
  3224  00354E  2BBF               	incf	_t& (0+255),f,b
  3225  003550  EF78  F01A         	goto	l5419
  3226  003554                     l5429:
  3227  003554  FFFF               	dw	65535	; assembler added errata NOP
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;CalculadoraLCD.c: 239: };CalculadoraLCD.c: 240: ins_LCD(192);
  3231  003556  0EC0               	movlw	192
  3232  003558  EC94  F032         	call	_ins_LCD
  3233  00355C                     
  3234                           ;CalculadoraLCD.c: 241: write_LCD(sprintf(buffer, "R NOR : %d%d%d%d", bin3[1], bin3[2], 
      +                          bin3[3], bin3[4]));
  3235  00355C  0E04               	movlw	low _buffer
  3236  00355E  0100               	movlb	0	; () banked
  3237  003560  6FC1               	movwf	sprintf@sp& (0+255),b
  3238  003562  0E01               	movlw	high _buffer
  3239  003564  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  3240  003566  0EDD               	movlw	low STR_32
  3241  003568  6FC3               	movwf	sprintf@f& (0+255),b
  3242  00356A  0E7E               	movlw	high STR_32
  3243  00356C  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  3244  00356E  C09A  F0C5         	movff	_bin3+1,?_sprintf+4
  3245  003572  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  3246  003574  C09B  F0C7         	movff	_bin3+2,?_sprintf+6
  3247  003578  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  3248  00357A  C09C  F0C9         	movff	_bin3+3,?_sprintf+8
  3249  00357E  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  3250  003580  C09D  F0CB         	movff	_bin3+4,?_sprintf+10
  3251  003584  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  3252  003586  EC8C  F00E         	call	_sprintf	;wreg free
  3253  00358A  0100               	movlb	0	; () banked
  3254  00358C  51C1               	movf	?_sprintf& (0+255),w,b
  3255  00358E  ECEA  F032         	call	_write_LCD
  3256  003592  EFDE  F014         	goto	l5099
  3257  003596                     l5435:
  3258  003596  FFFF               	dw	65535	; assembler added errata NOP
  3259                           
  3260                           ; BSR set to: 0
  3261                           ;CalculadoraLCD.c: 246: for (t = 4; t > 0; t--) {
  3262  003598  0E04               	movlw	4
  3263  00359A  6FBF               	movwf	_t& (0+255),b
  3264  00359C  51BF               	movf	_t& (0+255),w,b
  3265  00359E  A4D8               	btfss	status,2,c
  3266  0035A0  EFD4  F01A         	goto	u5111
  3267  0035A4  EFD7  F01A         	goto	u5110
  3268  0035A8                     u5111:
  3269  0035A8  FFFF               	dw	65535	; assembler added errata NOP
  3270  0035AA  EFDA  F01A         	goto	l5439
  3271  0035AE                     u5110:
  3272  0035AE  FFFF               	dw	65535	; assembler added errata NOP
  3273  0035B0  EFFA  F01A         	goto	l5447
  3274  0035B4                     l5439:
  3275  0035B4  FFFF               	dw	65535	; assembler added errata NOP
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;CalculadoraLCD.c: 247: bin1[t] = A % 2;
  3279  0035B6  0EA3               	movlw	low _bin1
  3280  0035B8  25BF               	addwf	_t& (0+255),w,b
  3281  0035BA  6ED9               	movwf	fsr2l,c
  3282  0035BC  6ADA               	clrf	fsr2h,c
  3283  0035BE  0E00               	movlw	high _bin1
  3284  0035C0  22DA               	addwfc	fsr2h,f,c
  3285  0035C2  51BE               	movf	_A& (0+255),w,b
  3286  0035C4  0B01               	andlw	1
  3287  0035C6  6EDF               	movwf	indf2,c
  3288  0035C8                     
  3289                           ; BSR set to: 0
  3290                           ;CalculadoraLCD.c: 248: A = A / 2;
  3291  0035C8  C0BE  F007         	movff	_A,___awdiv@dividend
  3292  0035CC  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3293  0035CE  0E00               	movlw	0
  3294  0035D0  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3295  0035D2  0E02               	movlw	2
  3296  0035D4  6E09               	movwf	___awdiv@divisor^0,c
  3297  0035D6  EC74  F036         	call	___awdiv	;wreg free
  3298  0035DA  5007               	movf	?___awdiv^0,w,c
  3299  0035DC  0100               	movlb	0	; () banked
  3300  0035DE  6FBE               	movwf	_A& (0+255),b
  3301  0035E0                     
  3302                           ; BSR set to: 0
  3303  0035E0  07BF               	decf	_t& (0+255),f,b
  3304  0035E2                     
  3305                           ; BSR set to: 0
  3306  0035E2  51BF               	movf	_t& (0+255),w,b
  3307  0035E4  A4D8               	btfss	status,2,c
  3308  0035E6  EFF7  F01A         	goto	u5121
  3309  0035EA  EFFA  F01A         	goto	u5120
  3310  0035EE                     u5121:
  3311  0035EE  FFFF               	dw	65535	; assembler added errata NOP
  3312  0035F0  EFDA  F01A         	goto	l5439
  3313  0035F4                     u5120:
  3314  0035F4                     l5447:
  3315  0035F4  FFFF               	dw	65535	; assembler added errata NOP
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;CalculadoraLCD.c: 249: };CalculadoraLCD.c: 250: ins_LCD(128);
  3319  0035F6  0E80               	movlw	128
  3320  0035F8  EC94  F032         	call	_ins_LCD
  3321  0035FC                     
  3322                           ;CalculadoraLCD.c: 251: write_LCD(sprintf(buffer, "A=%i%i%i%i", bin1[1], bin1[2], bin1[3
      +                          ], bin1[4]));
  3323  0035FC  0E04               	movlw	low _buffer
  3324  0035FE  0100               	movlb	0	; () banked
  3325  003600  6FC1               	movwf	sprintf@sp& (0+255),b
  3326  003602  0E01               	movlw	high _buffer
  3327  003604  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  3328  003606  0E93               	movlw	low STR_18
  3329  003608  6FC3               	movwf	sprintf@f& (0+255),b
  3330  00360A  0E7F               	movlw	high STR_18
  3331  00360C  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  3332  00360E  C0A4  F0C5         	movff	_bin1+1,?_sprintf+4
  3333  003612  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  3334  003614  C0A5  F0C7         	movff	_bin1+2,?_sprintf+6
  3335  003618  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  3336  00361A  C0A6  F0C9         	movff	_bin1+3,?_sprintf+8
  3337  00361E  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  3338  003620  C0A7  F0CB         	movff	_bin1+4,?_sprintf+10
  3339  003624  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  3340  003626  EC8C  F00E         	call	_sprintf	;wreg free
  3341  00362A  0100               	movlb	0	; () banked
  3342  00362C  51C1               	movf	?_sprintf& (0+255),w,b
  3343  00362E  ECEA  F032         	call	_write_LCD
  3344  003632                     
  3345                           ;CalculadoraLCD.c: 252: for (t = 4; t > 0; t--) {
  3346  003632  0E04               	movlw	4
  3347  003634  0100               	movlb	0	; () banked
  3348  003636  6FBF               	movwf	_t& (0+255),b
  3349  003638                     l5453:
  3350  003638  FFFF               	dw	65535	; assembler added errata NOP
  3351                           
  3352                           ; BSR set to: 0
  3353  00363A  51BF               	movf	_t& (0+255),w,b
  3354  00363C  A4D8               	btfss	status,2,c
  3355  00363E  EF23  F01B         	goto	u5131
  3356  003642  EF26  F01B         	goto	u5130
  3357  003646                     u5131:
  3358  003646  FFFF               	dw	65535	; assembler added errata NOP
  3359  003648  EF29  F01B         	goto	l5457
  3360  00364C                     u5130:
  3361  00364C  FFFF               	dw	65535	; assembler added errata NOP
  3362  00364E  EF42  F01B         	goto	l5465
  3363  003652                     l5457:
  3364  003652  FFFF               	dw	65535	; assembler added errata NOP
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;CalculadoraLCD.c: 253: bin2[t] = B % 2;
  3368  003654  0E9E               	movlw	low _bin2
  3369  003656  25BF               	addwf	_t& (0+255),w,b
  3370  003658  6ED9               	movwf	fsr2l,c
  3371  00365A  6ADA               	clrf	fsr2h,c
  3372  00365C  0E00               	movlw	high _bin2
  3373  00365E  22DA               	addwfc	fsr2h,f,c
  3374  003660  51C0               	movf	_B& (0+255),w,b
  3375  003662  0B01               	andlw	1
  3376  003664  6EDF               	movwf	indf2,c
  3377  003666                     
  3378                           ; BSR set to: 0
  3379                           ;CalculadoraLCD.c: 254: B = B / 2;
  3380  003666  C0C0  F007         	movff	_B,___awdiv@dividend
  3381  00366A  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3382  00366C  0E00               	movlw	0
  3383  00366E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3384  003670  0E02               	movlw	2
  3385  003672  6E09               	movwf	___awdiv@divisor^0,c
  3386  003674  EC74  F036         	call	___awdiv	;wreg free
  3387  003678  5007               	movf	?___awdiv^0,w,c
  3388  00367A  0100               	movlb	0	; () banked
  3389  00367C  6FC0               	movwf	_B& (0+255),b
  3390  00367E                     
  3391                           ; BSR set to: 0
  3392  00367E  07BF               	decf	_t& (0+255),f,b
  3393  003680  EF1C  F01B         	goto	l5453
  3394  003684                     l5465:
  3395  003684  FFFF               	dw	65535	; assembler added errata NOP
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;CalculadoraLCD.c: 255: };CalculadoraLCD.c: 256: ins_LCD(135);
  3399  003686  0E87               	movlw	135
  3400  003688  EC94  F032         	call	_ins_LCD
  3401  00368C                     
  3402                           ;CalculadoraLCD.c: 257: write_LCD(sprintf(buffer, "B=%i%i%i%i", bin2[1], bin2[2], bin2[3
      +                          ], bin2[4]));
  3403  00368C  0E04               	movlw	low _buffer
  3404  00368E  0100               	movlb	0	; () banked
  3405  003690  6FC1               	movwf	sprintf@sp& (0+255),b
  3406  003692  0E01               	movlw	high _buffer
  3407  003694  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  3408  003696  0E9E               	movlw	low STR_19
  3409  003698  6FC3               	movwf	sprintf@f& (0+255),b
  3410  00369A  0E7F               	movlw	high STR_19
  3411  00369C  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  3412  00369E  C09F  F0C5         	movff	_bin2+1,?_sprintf+4
  3413  0036A2  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  3414  0036A4  C0A0  F0C7         	movff	_bin2+2,?_sprintf+6
  3415  0036A8  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  3416  0036AA  C0A1  F0C9         	movff	_bin2+3,?_sprintf+8
  3417  0036AE  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  3418  0036B0  C0A2  F0CB         	movff	_bin2+4,?_sprintf+10
  3419  0036B4  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  3420  0036B6  EC8C  F00E         	call	_sprintf	;wreg free
  3421  0036BA  0100               	movlb	0	; () banked
  3422  0036BC  51C1               	movf	?_sprintf& (0+255),w,b
  3423  0036BE  ECEA  F032         	call	_write_LCD
  3424  0036C2                     
  3425                           ;CalculadoraLCD.c: 258: for (t = 1; t < 5; t++) {
  3426  0036C2  0E01               	movlw	1
  3427  0036C4  0100               	movlb	0	; () banked
  3428  0036C6  6FBF               	movwf	_t& (0+255),b
  3429  0036C8                     l5471:
  3430  0036C8  FFFF               	dw	65535	; assembler added errata NOP
  3431                           
  3432                           ; BSR set to: 0
  3433  0036CA  0E04               	movlw	4
  3434  0036CC  65BF               	cpfsgt	_t& (0+255),b
  3435  0036CE  EF6B  F01B         	goto	u5141
  3436  0036D2  EF6E  F01B         	goto	u5140
  3437  0036D6                     u5141:
  3438  0036D6  FFFF               	dw	65535	; assembler added errata NOP
  3439  0036D8  EF71  F01B         	goto	l5475
  3440  0036DC                     u5140:
  3441  0036DC  FFFF               	dw	65535	; assembler added errata NOP
  3442  0036DE  EF96  F01B         	goto	l5481
  3443  0036E2                     l5475:
  3444  0036E2  FFFF               	dw	65535	; assembler added errata NOP
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;CalculadoraLCD.c: 259: bin3[t] = bin[t]&~(bin1[t]^bin2[t]);
  3448  0036E4  0E99               	movlw	low _bin3
  3449  0036E6  25BF               	addwf	_t& (0+255),w,b
  3450  0036E8  6ED9               	movwf	fsr2l,c
  3451  0036EA  6ADA               	clrf	fsr2h,c
  3452  0036EC  0E00               	movlw	high _bin3
  3453  0036EE  22DA               	addwfc	fsr2h,f,c
  3454  0036F0  0E2C               	movlw	low _bin
  3455  0036F2  25BF               	addwf	_t& (0+255),w,b
  3456  0036F4  6EE1               	movwf	fsr1l,c
  3457  0036F6  6AE2               	clrf	fsr1h,c
  3458  0036F8  0E01               	movlw	high _bin
  3459  0036FA  22E2               	addwfc	fsr1h,f,c
  3460  0036FC  50E7               	movf	indf1,w,c
  3461  0036FE  6FF0               	movwf	??_main& (0+255),b
  3462  003700  0E9E               	movlw	low _bin2
  3463  003702  25BF               	addwf	_t& (0+255),w,b
  3464  003704  6EE1               	movwf	fsr1l,c
  3465  003706  6AE2               	clrf	fsr1h,c
  3466  003708  0E00               	movlw	high _bin2
  3467  00370A  22E2               	addwfc	fsr1h,f,c
  3468  00370C  50E7               	movf	indf1,w,c
  3469  00370E  6FF1               	movwf	(??_main+1)& (0+255),b
  3470  003710  0EA3               	movlw	low _bin1
  3471  003712  25BF               	addwf	_t& (0+255),w,b
  3472  003714  6EE1               	movwf	fsr1l,c
  3473  003716  6AE2               	clrf	fsr1h,c
  3474  003718  0E00               	movlw	high _bin1
  3475  00371A  22E2               	addwfc	fsr1h,f,c
  3476  00371C  50E7               	movf	indf1,w,c
  3477  00371E  19F1               	xorwf	(??_main+1)& (0+255),w,b
  3478  003720  0AFF               	xorlw	255
  3479  003722  15F0               	andwf	??_main& (0+255),w,b
  3480  003724  6EDF               	movwf	indf2,c
  3481  003726                     
  3482                           ; BSR set to: 0
  3483  003726  2BBF               	incf	_t& (0+255),f,b
  3484  003728  EF64  F01B         	goto	l5471
  3485  00372C                     l5481:
  3486  00372C  FFFF               	dw	65535	; assembler added errata NOP
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;CalculadoraLCD.c: 260: };CalculadoraLCD.c: 261: ins_LCD(192);
  3490  00372E  0EC0               	movlw	192
  3491  003730  EC94  F032         	call	_ins_LCD
  3492  003734                     
  3493                           ;CalculadoraLCD.c: 262: write_LCD(sprintf(buffer, "R XNOR: %d%d%d%d", bin3[1], bin3[2], 
      +                          bin3[3], bin3[4]));
  3494  003734  0E04               	movlw	low _buffer
  3495  003736  0100               	movlb	0	; () banked
  3496  003738  6FC1               	movwf	sprintf@sp& (0+255),b
  3497  00373A  0E01               	movlw	high _buffer
  3498  00373C  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  3499  00373E  0E10               	movlw	low STR_35
  3500  003740  6FC3               	movwf	sprintf@f& (0+255),b
  3501  003742  0E7F               	movlw	high STR_35
  3502  003744  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  3503  003746  C09A  F0C5         	movff	_bin3+1,?_sprintf+4
  3504  00374A  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  3505  00374C  C09B  F0C7         	movff	_bin3+2,?_sprintf+6
  3506  003750  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  3507  003752  C09C  F0C9         	movff	_bin3+3,?_sprintf+8
  3508  003756  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  3509  003758  C09D  F0CB         	movff	_bin3+4,?_sprintf+10
  3510  00375C  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  3511  00375E  EC8C  F00E         	call	_sprintf	;wreg free
  3512  003762  0100               	movlb	0	; () banked
  3513  003764  51C1               	movf	?_sprintf& (0+255),w,b
  3514  003766  ECEA  F032         	call	_write_LCD
  3515  00376A  EFDE  F014         	goto	l5099
  3516  00376E                     l5487:
  3517  00376E  FFFF               	dw	65535	; assembler added errata NOP
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;CalculadoraLCD.c: 267: for (t = 8; t > 0; t--) {
  3521  003770  0E08               	movlw	8
  3522  003772  6FBF               	movwf	_t& (0+255),b
  3523  003774  51BF               	movf	_t& (0+255),w,b
  3524  003776  A4D8               	btfss	status,2,c
  3525  003778  EFC0  F01B         	goto	u5151
  3526  00377C  EFC3  F01B         	goto	u5150
  3527  003780                     u5151:
  3528  003780  FFFF               	dw	65535	; assembler added errata NOP
  3529  003782  EFC6  F01B         	goto	l5491
  3530  003786                     u5150:
  3531  003786  FFFF               	dw	65535	; assembler added errata NOP
  3532  003788  EFE6  F01B         	goto	l5499
  3533  00378C                     l5491:
  3534  00378C  FFFF               	dw	65535	; assembler added errata NOP
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;CalculadoraLCD.c: 268: binc[t] = PB % 2;
  3538  00378E  0E91               	movlw	low _binc
  3539  003790  25BF               	addwf	_t& (0+255),w,b
  3540  003792  6ED9               	movwf	fsr2l,c
  3541  003794  6ADA               	clrf	fsr2h,c
  3542  003796  0E00               	movlw	high _binc
  3543  003798  22DA               	addwfc	fsr2h,f,c
  3544  00379A  51BC               	movf	_PB& (0+255),w,b
  3545  00379C  0B01               	andlw	1
  3546  00379E  6EDF               	movwf	indf2,c
  3547  0037A0                     
  3548                           ; BSR set to: 0
  3549                           ;CalculadoraLCD.c: 269: PB = PB / 2;
  3550  0037A0  C0BC  F007         	movff	_PB,___awdiv@dividend
  3551  0037A4  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3552  0037A6  0E00               	movlw	0
  3553  0037A8  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3554  0037AA  0E02               	movlw	2
  3555  0037AC  6E09               	movwf	___awdiv@divisor^0,c
  3556  0037AE  EC74  F036         	call	___awdiv	;wreg free
  3557  0037B2  5007               	movf	?___awdiv^0,w,c
  3558  0037B4  0100               	movlb	0	; () banked
  3559  0037B6  6FBC               	movwf	_PB& (0+255),b
  3560  0037B8                     
  3561                           ; BSR set to: 0
  3562  0037B8  07BF               	decf	_t& (0+255),f,b
  3563  0037BA                     
  3564                           ; BSR set to: 0
  3565  0037BA  51BF               	movf	_t& (0+255),w,b
  3566  0037BC  A4D8               	btfss	status,2,c
  3567  0037BE  EFE3  F01B         	goto	u5161
  3568  0037C2  EFE6  F01B         	goto	u5160
  3569  0037C6                     u5161:
  3570  0037C6  FFFF               	dw	65535	; assembler added errata NOP
  3571  0037C8  EFC6  F01B         	goto	l5491
  3572  0037CC                     u5160:
  3573  0037CC                     l5499:
  3574  0037CC  FFFF               	dw	65535	; assembler added errata NOP
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;CalculadoraLCD.c: 270: };CalculadoraLCD.c: 271: ins_LCD(128);
  3578  0037CE  0E80               	movlw	128
  3579  0037D0  EC94  F032         	call	_ins_LCD
  3580  0037D4                     
  3581                           ;CalculadoraLCD.c: 272: write_LCD(sprintf(buffer, "Num: %i%i%i%i%i%i%i%i", binc[1], binc
      +                          [2], binc[3], binc[4], binc[5], binc[6], binc[7], binc[8]));
  3582  0037D4  0E04               	movlw	low _buffer
  3583  0037D6  0100               	movlb	0	; () banked
  3584  0037D8  6FC1               	movwf	sprintf@sp& (0+255),b
  3585  0037DA  0E01               	movlw	high _buffer
  3586  0037DC  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  3587  0037DE  0E8F               	movlw	low STR_36
  3588  0037E0  6FC3               	movwf	sprintf@f& (0+255),b
  3589  0037E2  0E7E               	movlw	high STR_36
  3590  0037E4  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  3591  0037E6  C092  F0C5         	movff	_binc+1,?_sprintf+4
  3592  0037EA  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  3593  0037EC  C093  F0C7         	movff	_binc+2,?_sprintf+6
  3594  0037F0  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  3595  0037F2  C094  F0C9         	movff	_binc+3,?_sprintf+8
  3596  0037F6  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  3597  0037F8  C095  F0CB         	movff	_binc+4,?_sprintf+10
  3598  0037FC  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  3599  0037FE  C096  F0CD         	movff	_binc+5,?_sprintf+12
  3600  003802  6BCE               	clrf	(?_sprintf+13)& (0+255),b
  3601  003804  C097  F0CF         	movff	_binc+6,?_sprintf+14
  3602  003808  6BD0               	clrf	(?_sprintf+15)& (0+255),b
  3603  00380A  C098  F0D1         	movff	_binc+7,?_sprintf+16
  3604  00380E  6BD2               	clrf	(?_sprintf+17)& (0+255),b
  3605  003810  C099  F0D3         	movff	_binc+8,?_sprintf+18
  3606  003814  6BD4               	clrf	(?_sprintf+19)& (0+255),b
  3607  003816  EC8C  F00E         	call	_sprintf	;wreg free
  3608  00381A  0100               	movlb	0	; () banked
  3609  00381C  51C1               	movf	?_sprintf& (0+255),w,b
  3610  00381E  ECEA  F032         	call	_write_LCD
  3611  003822                     
  3612                           ;CalculadoraLCD.c: 273: PB = PORTB;
  3613  003822  CF81 F0BC          	movff	3969,_PB	;volatile
  3614  003826                     
  3615                           ;CalculadoraLCD.c: 274: F = PB >> 7;
  3616  003826  0100               	movlb	0	; () banked
  3617  003828  45BC               	rlncf	_PB& (0+255),w,b
  3618  00382A  0B01               	andlw	1
  3619  00382C  6FB8               	movwf	_F& (0+255),b
  3620  00382E                     
  3621                           ; BSR set to: 0
  3622                           ;CalculadoraLCD.c: 275: G = PB << 1;
  3623  00382E  51BC               	movf	_PB& (0+255),w,b
  3624  003830  25BC               	addwf	_PB& (0+255),w,b
  3625  003832  6FB7               	movwf	_G& (0+255),b
  3626  003834                     
  3627                           ; BSR set to: 0
  3628                           ;CalculadoraLCD.c: 276: C = F + G;
  3629  003834  51B8               	movf	_F& (0+255),w,b
  3630  003836  25B7               	addwf	_G& (0+255),w,b
  3631  003838  6FBA               	movwf	_C& (0+255),b
  3632  00383A                     
  3633                           ; BSR set to: 0
  3634                           ;CalculadoraLCD.c: 277: for (t = 8; t > 0; t--) {
  3635  00383A  0E08               	movlw	8
  3636  00383C  6FBF               	movwf	_t& (0+255),b
  3637  00383E                     l5513:
  3638  00383E  FFFF               	dw	65535	; assembler added errata NOP
  3639                           
  3640                           ; BSR set to: 0
  3641  003840  51BF               	movf	_t& (0+255),w,b
  3642  003842  A4D8               	btfss	status,2,c
  3643  003844  EF26  F01C         	goto	u5171
  3644  003848  EF29  F01C         	goto	u5170
  3645  00384C                     u5171:
  3646  00384C  FFFF               	dw	65535	; assembler added errata NOP
  3647  00384E  EF2C  F01C         	goto	l5517
  3648  003852                     u5170:
  3649  003852  FFFF               	dw	65535	; assembler added errata NOP
  3650  003854  EF45  F01C         	goto	l5525
  3651  003858                     l5517:
  3652  003858  FFFF               	dw	65535	; assembler added errata NOP
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;CalculadoraLCD.c: 278: binco[t] = C % 2;
  3656  00385A  0E89               	movlw	low _binco
  3657  00385C  25BF               	addwf	_t& (0+255),w,b
  3658  00385E  6ED9               	movwf	fsr2l,c
  3659  003860  6ADA               	clrf	fsr2h,c
  3660  003862  0E00               	movlw	high _binco
  3661  003864  22DA               	addwfc	fsr2h,f,c
  3662  003866  51BA               	movf	_C& (0+255),w,b
  3663  003868  0B01               	andlw	1
  3664  00386A  6EDF               	movwf	indf2,c
  3665  00386C                     
  3666                           ; BSR set to: 0
  3667                           ;CalculadoraLCD.c: 279: C = C / 2;
  3668  00386C  C0BA  F007         	movff	_C,___awdiv@dividend
  3669  003870  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3670  003872  0E00               	movlw	0
  3671  003874  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3672  003876  0E02               	movlw	2
  3673  003878  6E09               	movwf	___awdiv@divisor^0,c
  3674  00387A  EC74  F036         	call	___awdiv	;wreg free
  3675  00387E  5007               	movf	?___awdiv^0,w,c
  3676  003880  0100               	movlb	0	; () banked
  3677  003882  6FBA               	movwf	_C& (0+255),b
  3678  003884                     
  3679                           ; BSR set to: 0
  3680  003884  07BF               	decf	_t& (0+255),f,b
  3681  003886  EF1F  F01C         	goto	l5513
  3682  00388A                     l5525:
  3683  00388A  FFFF               	dw	65535	; assembler added errata NOP
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;CalculadoraLCD.c: 280: };CalculadoraLCD.c: 281: ins_LCD(192);
  3687  00388C  0EC0               	movlw	192
  3688  00388E  EC94  F032         	call	_ins_LCD
  3689  003892                     
  3690                           ;CalculadoraLCD.c: 282: write_LCD(sprintf(buffer, "Res: %i%i%i%i%i%i%i%i", binco[1], bin
      +                          co[2], binco[3], binco[4], binco[5], binco[6], binco[7], binco[8]));
  3691  003892  0E04               	movlw	low _buffer
  3692  003894  0100               	movlb	0	; () banked
  3693  003896  6FC1               	movwf	sprintf@sp& (0+255),b
  3694  003898  0E01               	movlw	high _buffer
  3695  00389A  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  3696  00389C  0EA5               	movlw	low STR_37
  3697  00389E  6FC3               	movwf	sprintf@f& (0+255),b
  3698  0038A0  0E7E               	movlw	high STR_37
  3699  0038A2  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  3700  0038A4  C08A  F0C5         	movff	_binco+1,?_sprintf+4
  3701  0038A8  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  3702  0038AA  C08B  F0C7         	movff	_binco+2,?_sprintf+6
  3703  0038AE  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  3704  0038B0  C08C  F0C9         	movff	_binco+3,?_sprintf+8
  3705  0038B4  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  3706  0038B6  C08D  F0CB         	movff	_binco+4,?_sprintf+10
  3707  0038BA  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  3708  0038BC  C08E  F0CD         	movff	_binco+5,?_sprintf+12
  3709  0038C0  6BCE               	clrf	(?_sprintf+13)& (0+255),b
  3710  0038C2  C08F  F0CF         	movff	_binco+6,?_sprintf+14
  3711  0038C6  6BD0               	clrf	(?_sprintf+15)& (0+255),b
  3712  0038C8  C090  F0D1         	movff	_binco+7,?_sprintf+16
  3713  0038CC  6BD2               	clrf	(?_sprintf+17)& (0+255),b
  3714  0038CE  C091  F0D3         	movff	_binco+8,?_sprintf+18
  3715  0038D2  6BD4               	clrf	(?_sprintf+19)& (0+255),b
  3716  0038D4  EC8C  F00E         	call	_sprintf	;wreg free
  3717  0038D8  0100               	movlb	0	; () banked
  3718  0038DA  51C1               	movf	?_sprintf& (0+255),w,b
  3719  0038DC  ECEA  F032         	call	_write_LCD
  3720  0038E0  EFDE  F014         	goto	l5099
  3721  0038E4                     l5531:
  3722  0038E4  FFFF               	dw	65535	; assembler added errata NOP
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;CalculadoraLCD.c: 287: for (t = 8; t > 0; t--) {
  3726  0038E6  0E08               	movlw	8
  3727  0038E8  6FBF               	movwf	_t& (0+255),b
  3728  0038EA  51BF               	movf	_t& (0+255),w,b
  3729  0038EC  A4D8               	btfss	status,2,c
  3730  0038EE  EF7B  F01C         	goto	u5181
  3731  0038F2  EF7E  F01C         	goto	u5180
  3732  0038F6                     u5181:
  3733  0038F6  FFFF               	dw	65535	; assembler added errata NOP
  3734  0038F8  EF81  F01C         	goto	l5535
  3735  0038FC                     u5180:
  3736  0038FC  FFFF               	dw	65535	; assembler added errata NOP
  3737  0038FE  EFA1  F01C         	goto	l5543
  3738  003902                     l5535:
  3739  003902  FFFF               	dw	65535	; assembler added errata NOP
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;CalculadoraLCD.c: 288: binc[t] = PB % 2;
  3743  003904  0E91               	movlw	low _binc
  3744  003906  25BF               	addwf	_t& (0+255),w,b
  3745  003908  6ED9               	movwf	fsr2l,c
  3746  00390A  6ADA               	clrf	fsr2h,c
  3747  00390C  0E00               	movlw	high _binc
  3748  00390E  22DA               	addwfc	fsr2h,f,c
  3749  003910  51BC               	movf	_PB& (0+255),w,b
  3750  003912  0B01               	andlw	1
  3751  003914  6EDF               	movwf	indf2,c
  3752  003916                     
  3753                           ; BSR set to: 0
  3754                           ;CalculadoraLCD.c: 289: PB = PB / 2;
  3755  003916  C0BC  F007         	movff	_PB,___awdiv@dividend
  3756  00391A  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3757  00391C  0E00               	movlw	0
  3758  00391E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3759  003920  0E02               	movlw	2
  3760  003922  6E09               	movwf	___awdiv@divisor^0,c
  3761  003924  EC74  F036         	call	___awdiv	;wreg free
  3762  003928  5007               	movf	?___awdiv^0,w,c
  3763  00392A  0100               	movlb	0	; () banked
  3764  00392C  6FBC               	movwf	_PB& (0+255),b
  3765  00392E                     
  3766                           ; BSR set to: 0
  3767  00392E  07BF               	decf	_t& (0+255),f,b
  3768  003930                     
  3769                           ; BSR set to: 0
  3770  003930  51BF               	movf	_t& (0+255),w,b
  3771  003932  A4D8               	btfss	status,2,c
  3772  003934  EF9E  F01C         	goto	u5191
  3773  003938  EFA1  F01C         	goto	u5190
  3774  00393C                     u5191:
  3775  00393C  FFFF               	dw	65535	; assembler added errata NOP
  3776  00393E  EF81  F01C         	goto	l5535
  3777  003942                     u5190:
  3778  003942                     l5543:
  3779  003942  FFFF               	dw	65535	; assembler added errata NOP
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;CalculadoraLCD.c: 290: };CalculadoraLCD.c: 291: ins_LCD(128);
  3783  003944  0E80               	movlw	128
  3784  003946  EC94  F032         	call	_ins_LCD
  3785  00394A                     
  3786                           ;CalculadoraLCD.c: 292: write_LCD(sprintf(buffer, "Num: %i%i%i%i%i%i%i%i", binc[1], binc
      +                          [2], binc[3], binc[4], binc[5], binc[6], binc[7], binc[8]));
  3787  00394A  0E04               	movlw	low _buffer
  3788  00394C  0100               	movlb	0	; () banked
  3789  00394E  6FC1               	movwf	sprintf@sp& (0+255),b
  3790  003950  0E01               	movlw	high _buffer
  3791  003952  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  3792  003954  0E8F               	movlw	low STR_36
  3793  003956  6FC3               	movwf	sprintf@f& (0+255),b
  3794  003958  0E7E               	movlw	high STR_36
  3795  00395A  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  3796  00395C  C092  F0C5         	movff	_binc+1,?_sprintf+4
  3797  003960  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  3798  003962  C093  F0C7         	movff	_binc+2,?_sprintf+6
  3799  003966  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  3800  003968  C094  F0C9         	movff	_binc+3,?_sprintf+8
  3801  00396C  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  3802  00396E  C095  F0CB         	movff	_binc+4,?_sprintf+10
  3803  003972  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  3804  003974  C096  F0CD         	movff	_binc+5,?_sprintf+12
  3805  003978  6BCE               	clrf	(?_sprintf+13)& (0+255),b
  3806  00397A  C097  F0CF         	movff	_binc+6,?_sprintf+14
  3807  00397E  6BD0               	clrf	(?_sprintf+15)& (0+255),b
  3808  003980  C098  F0D1         	movff	_binc+7,?_sprintf+16
  3809  003984  6BD2               	clrf	(?_sprintf+17)& (0+255),b
  3810  003986  C099  F0D3         	movff	_binc+8,?_sprintf+18
  3811  00398A  6BD4               	clrf	(?_sprintf+19)& (0+255),b
  3812  00398C  EC8C  F00E         	call	_sprintf	;wreg free
  3813  003990  0100               	movlb	0	; () banked
  3814  003992  51C1               	movf	?_sprintf& (0+255),w,b
  3815  003994  ECEA  F032         	call	_write_LCD
  3816  003998                     
  3817                           ;CalculadoraLCD.c: 293: PB = PORTB;
  3818  003998  CF81 F0BC          	movff	3969,_PB	;volatile
  3819  00399C                     
  3820                           ;CalculadoraLCD.c: 294: F = PB << 4;
  3821  00399C  0100               	movlb	0	; () banked
  3822  00399E  39BC               	swapf	_PB& (0+255),w,b
  3823  0039A0  0BF0               	andlw	240
  3824  0039A2  6FB8               	movwf	_F& (0+255),b
  3825  0039A4                     
  3826                           ; BSR set to: 0
  3827                           ;CalculadoraLCD.c: 295: G = PB >> 4;
  3828  0039A4  39BC               	swapf	_PB& (0+255),w,b
  3829  0039A6  0B0F               	andlw	15
  3830  0039A8  6FB7               	movwf	_G& (0+255),b
  3831  0039AA                     
  3832                           ; BSR set to: 0
  3833                           ;CalculadoraLCD.c: 296: C = F + G;
  3834  0039AA  51B8               	movf	_F& (0+255),w,b
  3835  0039AC  25B7               	addwf	_G& (0+255),w,b
  3836  0039AE  6FBA               	movwf	_C& (0+255),b
  3837  0039B0                     
  3838                           ; BSR set to: 0
  3839                           ;CalculadoraLCD.c: 297: for (t = 8; t > 0; t--) {
  3840  0039B0  0E08               	movlw	8
  3841  0039B2  6FBF               	movwf	_t& (0+255),b
  3842  0039B4                     l5557:
  3843  0039B4  FFFF               	dw	65535	; assembler added errata NOP
  3844                           
  3845                           ; BSR set to: 0
  3846  0039B6  51BF               	movf	_t& (0+255),w,b
  3847  0039B8  A4D8               	btfss	status,2,c
  3848  0039BA  EFE1  F01C         	goto	u5201
  3849  0039BE  EFE4  F01C         	goto	u5200
  3850  0039C2                     u5201:
  3851  0039C2  FFFF               	dw	65535	; assembler added errata NOP
  3852  0039C4  EFE7  F01C         	goto	l5561
  3853  0039C8                     u5200:
  3854  0039C8  FFFF               	dw	65535	; assembler added errata NOP
  3855  0039CA  EF00  F01D         	goto	l5569
  3856  0039CE                     l5561:
  3857  0039CE  FFFF               	dw	65535	; assembler added errata NOP
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;CalculadoraLCD.c: 298: binco[t] = C % 2;
  3861  0039D0  0E89               	movlw	low _binco
  3862  0039D2  25BF               	addwf	_t& (0+255),w,b
  3863  0039D4  6ED9               	movwf	fsr2l,c
  3864  0039D6  6ADA               	clrf	fsr2h,c
  3865  0039D8  0E00               	movlw	high _binco
  3866  0039DA  22DA               	addwfc	fsr2h,f,c
  3867  0039DC  51BA               	movf	_C& (0+255),w,b
  3868  0039DE  0B01               	andlw	1
  3869  0039E0  6EDF               	movwf	indf2,c
  3870  0039E2                     
  3871                           ; BSR set to: 0
  3872                           ;CalculadoraLCD.c: 299: C = C / 2;
  3873  0039E2  C0BA  F007         	movff	_C,___awdiv@dividend
  3874  0039E6  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3875  0039E8  0E00               	movlw	0
  3876  0039EA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3877  0039EC  0E02               	movlw	2
  3878  0039EE  6E09               	movwf	___awdiv@divisor^0,c
  3879  0039F0  EC74  F036         	call	___awdiv	;wreg free
  3880  0039F4  5007               	movf	?___awdiv^0,w,c
  3881  0039F6  0100               	movlb	0	; () banked
  3882  0039F8  6FBA               	movwf	_C& (0+255),b
  3883  0039FA                     
  3884                           ; BSR set to: 0
  3885  0039FA  07BF               	decf	_t& (0+255),f,b
  3886  0039FC  EFDA  F01C         	goto	l5557
  3887  003A00                     l5569:
  3888  003A00  FFFF               	dw	65535	; assembler added errata NOP
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;CalculadoraLCD.c: 300: };CalculadoraLCD.c: 301: ins_LCD(192);
  3892  003A02  0EC0               	movlw	192
  3893  003A04  EC94  F032         	call	_ins_LCD
  3894  003A08                     
  3895                           ;CalculadoraLCD.c: 302: write_LCD(sprintf(buffer, "Res: %i%i%i%i%i%i%i%i", binco[1], bin
      +                          co[2], binco[3], binco[4], binco[5], binco[6], binco[7], binco[8]));
  3896  003A08  0E04               	movlw	low _buffer
  3897  003A0A  0100               	movlb	0	; () banked
  3898  003A0C  6FC1               	movwf	sprintf@sp& (0+255),b
  3899  003A0E  0E01               	movlw	high _buffer
  3900  003A10  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  3901  003A12  0EA5               	movlw	low STR_37
  3902  003A14  6FC3               	movwf	sprintf@f& (0+255),b
  3903  003A16  0E7E               	movlw	high STR_37
  3904  003A18  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  3905  003A1A  C08A  F0C5         	movff	_binco+1,?_sprintf+4
  3906  003A1E  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  3907  003A20  C08B  F0C7         	movff	_binco+2,?_sprintf+6
  3908  003A24  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  3909  003A26  C08C  F0C9         	movff	_binco+3,?_sprintf+8
  3910  003A2A  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  3911  003A2C  C08D  F0CB         	movff	_binco+4,?_sprintf+10
  3912  003A30  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  3913  003A32  C08E  F0CD         	movff	_binco+5,?_sprintf+12
  3914  003A36  6BCE               	clrf	(?_sprintf+13)& (0+255),b
  3915  003A38  C08F  F0CF         	movff	_binco+6,?_sprintf+14
  3916  003A3C  6BD0               	clrf	(?_sprintf+15)& (0+255),b
  3917  003A3E  C090  F0D1         	movff	_binco+7,?_sprintf+16
  3918  003A42  6BD2               	clrf	(?_sprintf+17)& (0+255),b
  3919  003A44  C091  F0D3         	movff	_binco+8,?_sprintf+18
  3920  003A48  6BD4               	clrf	(?_sprintf+19)& (0+255),b
  3921  003A4A  EC8C  F00E         	call	_sprintf	;wreg free
  3922  003A4E  0100               	movlb	0	; () banked
  3923  003A50  51C1               	movf	?_sprintf& (0+255),w,b
  3924  003A52  ECEA  F032         	call	_write_LCD
  3925  003A56  EFDE  F014         	goto	l5099
  3926  003A5A                     l5575:
  3927  003A5A  FFFF               	dw	65535	; assembler added errata NOP
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;CalculadoraLCD.c: 307: ins_LCD(1);
  3931  003A5C  0E01               	movlw	1
  3932  003A5E  EC94  F032         	call	_ins_LCD
  3933                           
  3934                           ;CalculadoraLCD.c: 308: ins_LCD(128);
  3935  003A62  0E80               	movlw	128
  3936  003A64  EC94  F032         	call	_ins_LCD
  3937  003A68                     
  3938                           ;CalculadoraLCD.c: 309: write_LCD(sprintf(buffer,"%i Potencia %i",A,B));
  3939  003A68  0E04               	movlw	low _buffer
  3940  003A6A  0100               	movlb	0	; () banked
  3941  003A6C  6FC1               	movwf	sprintf@sp& (0+255),b
  3942  003A6E  0E01               	movlw	high _buffer
  3943  003A70  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  3944  003A72  0E3F               	movlw	low STR_40
  3945  003A74  6FC3               	movwf	sprintf@f& (0+255),b
  3946  003A76  0E7F               	movlw	high STR_40
  3947  003A78  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  3948  003A7A  C0BE  F0C5         	movff	_A,?_sprintf+4
  3949  003A7E  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  3950  003A80  C0C0  F0C7         	movff	_B,?_sprintf+6
  3951  003A84  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  3952  003A86  EC8C  F00E         	call	_sprintf	;wreg free
  3953  003A8A  0100               	movlb	0	; () banked
  3954  003A8C  51C1               	movf	?_sprintf& (0+255),w,b
  3955  003A8E  ECEA  F032         	call	_write_LCD
  3956  003A92                     
  3957                           ;CalculadoraLCD.c: 310: num=pow(A,B);
  3958  003A92  0100               	movlb	0	; () banked
  3959  003A94  51C0               	movf	_B& (0+255),w,b
  3960  003A96  6E0F               	movwf	___xxtofl@val^0,c
  3961  003A98  6A10               	clrf	(___xxtofl@val+1)^0,c
  3962  003A9A  6A11               	clrf	(___xxtofl@val+2)^0,c
  3963  003A9C  6A12               	clrf	(___xxtofl@val+3)^0,c
  3964  003A9E  0E00               	movlw	0
  3965  003AA0  EC60  F03C         	call	___xxtofl
  3966  003AA4  C00F  F0FA         	movff	?___xxtofl,_main$975
  3967  003AA8  C010  F0FB         	movff	?___xxtofl+1,_main$975+1
  3968  003AAC  C011  F0FC         	movff	?___xxtofl+2,_main$975+2
  3969  003AB0  C012  F0FD         	movff	?___xxtofl+3,_main$975+3
  3970  003AB4                     
  3971                           ;CalculadoraLCD.c: 310: num=pow(A,B);
  3972  003AB4  0100               	movlb	0	; () banked
  3973  003AB6  51BE               	movf	_A& (0+255),w,b
  3974  003AB8  6E0F               	movwf	___xxtofl@val^0,c
  3975  003ABA  6A10               	clrf	(___xxtofl@val+1)^0,c
  3976  003ABC  6A11               	clrf	(___xxtofl@val+2)^0,c
  3977  003ABE  6A12               	clrf	(___xxtofl@val+3)^0,c
  3978  003AC0  0E00               	movlw	0
  3979  003AC2  EC60  F03C         	call	___xxtofl
  3980  003AC6  C00F  F0F2         	movff	?___xxtofl,_main$976
  3981  003ACA  C010  F0F3         	movff	?___xxtofl+1,_main$976+1
  3982  003ACE  C011  F0F4         	movff	?___xxtofl+2,_main$976+2
  3983  003AD2  C012  F0F5         	movff	?___xxtofl+3,_main$976+3
  3984  003AD6                     
  3985                           ;CalculadoraLCD.c: 310: num=pow(A,B);
  3986  003AD6  C0FA  F0D0         	movff	_main$975,pow@y
  3987  003ADA  C0FB  F0D1         	movff	_main$975+1,pow@y+1
  3988  003ADE  C0FC  F0D2         	movff	_main$975+2,pow@y+2
  3989  003AE2  C0FD  F0D3         	movff	_main$975+3,pow@y+3
  3990  003AE6  C0F2  F0CC         	movff	_main$976,pow@x
  3991  003AEA  C0F3  F0CD         	movff	_main$976+1,pow@x+1
  3992  003AEE  C0F4  F0CE         	movff	_main$976+2,pow@x+2
  3993  003AF2  C0F5  F0CF         	movff	_main$976+3,pow@x+3
  3994  003AF6  EC08  F000         	call	_pow	;wreg free
  3995  003AFA  C0CC  F0F6         	movff	?_pow,_main$977
  3996  003AFE  C0CD  F0F7         	movff	?_pow+1,_main$977+1
  3997  003B02  C0CE  F0F8         	movff	?_pow+2,_main$977+2
  3998  003B06  C0CF  F0F9         	movff	?_pow+3,_main$977+3
  3999  003B0A                     
  4000                           ;CalculadoraLCD.c: 310: num=pow(A,B);
  4001  003B0A  C0F6  F053         	movff	_main$977,___fltol@f1
  4002  003B0E  C0F7  F054         	movff	_main$977+1,___fltol@f1+1
  4003  003B12  C0F8  F055         	movff	_main$977+2,___fltol@f1+2
  4004  003B16  C0F9  F056         	movff	_main$977+3,___fltol@f1+3
  4005  003B1A  EC0D  F038         	call	___fltol	;wreg free
  4006  003B1E  C053  F0B4         	movff	?___fltol,_num
  4007  003B22  C054  F0B5         	movff	?___fltol+1,_num+1
  4008  003B26                     
  4009                           ;CalculadoraLCD.c: 311: ins_LCD(192);
  4010  003B26  0EC0               	movlw	192
  4011  003B28  EC94  F032         	call	_ins_LCD
  4012  003B2C                     
  4013                           ;CalculadoraLCD.c: 312: write_LCD(sprintf(buffer,"Rta: %i",num));
  4014  003B2C  0E04               	movlw	low _buffer
  4015  003B2E  0100               	movlb	0	; () banked
  4016  003B30  6FC1               	movwf	sprintf@sp& (0+255),b
  4017  003B32  0E01               	movlw	high _buffer
  4018  003B34  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  4019  003B36  0EC5               	movlw	low STR_41
  4020  003B38  6FC3               	movwf	sprintf@f& (0+255),b
  4021  003B3A  0E7F               	movlw	high STR_41
  4022  003B3C  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  4023  003B3E  C0B4  F0C5         	movff	_num,?_sprintf+4
  4024  003B42  C0B5  F0C6         	movff	_num+1,?_sprintf+5
  4025  003B46  EC8C  F00E         	call	_sprintf	;wreg free
  4026  003B4A  0100               	movlb	0	; () banked
  4027  003B4C  51C1               	movf	?_sprintf& (0+255),w,b
  4028  003B4E  ECEA  F032         	call	_write_LCD
  4029  003B52  EFDE  F014         	goto	l5099
  4030  003B56                     l5593:
  4031  003B56  FFFF               	dw	65535	; assembler added errata NOP
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;CalculadoraLCD.c: 317: ins_LCD(1);
  4035  003B58  0E01               	movlw	1
  4036  003B5A  EC94  F032         	call	_ins_LCD
  4037                           
  4038                           ;CalculadoraLCD.c: 318: ins_LCD(128);
  4039  003B5E  0E80               	movlw	128
  4040  003B60  EC94  F032         	call	_ins_LCD
  4041  003B64                     
  4042                           ;CalculadoraLCD.c: 319: write_LCD(sprintf(buffer,"%i Raiz de %i",B,A));
  4043  003B64  0E04               	movlw	low _buffer
  4044  003B66  0100               	movlb	0	; () banked
  4045  003B68  6FC1               	movwf	sprintf@sp& (0+255),b
  4046  003B6A  0E01               	movlw	high _buffer
  4047  003B6C  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  4048  003B6E  0E6B               	movlw	low STR_42
  4049  003B70  6FC3               	movwf	sprintf@f& (0+255),b
  4050  003B72  0E7F               	movlw	high STR_42
  4051  003B74  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  4052  003B76  C0C0  F0C5         	movff	_B,?_sprintf+4
  4053  003B7A  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  4054  003B7C  C0BE  F0C7         	movff	_A,?_sprintf+6
  4055  003B80  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  4056  003B82  EC8C  F00E         	call	_sprintf	;wreg free
  4057  003B86  0100               	movlb	0	; () banked
  4058  003B88  51C1               	movf	?_sprintf& (0+255),w,b
  4059  003B8A  ECEA  F032         	call	_write_LCD
  4060  003B8E                     
  4061                           ;CalculadoraLCD.c: 320: Y=1/B;
  4062  003B8E  C0C0  F009         	movff	_B,___awdiv@divisor
  4063  003B92  6A0A               	clrf	(___awdiv@divisor+1)^0,c
  4064  003B94  0E00               	movlw	0
  4065  003B96  6E08               	movwf	(___awdiv@dividend+1)^0,c
  4066  003B98  0E01               	movlw	1
  4067  003B9A  6E07               	movwf	___awdiv@dividend^0,c
  4068  003B9C  EC74  F036         	call	___awdiv	;wreg free
  4069  003BA0  C007  F00F         	movff	?___awdiv,___xxtofl@val
  4070  003BA4  C008  F010         	movff	?___awdiv+1,___xxtofl@val+1
  4071  003BA8  0E00               	movlw	0
  4072  003BAA  BE10               	btfsc	(___xxtofl@val+1)^0,7,c
  4073  003BAC  0EFF               	movlw	-1
  4074  003BAE  6E11               	movwf	(___xxtofl@val+2)^0,c
  4075  003BB0  6E12               	movwf	(___xxtofl@val+3)^0,c
  4076  003BB2  0E01               	movlw	1
  4077  003BB4  EC60  F03C         	call	___xxtofl
  4078  003BB8  C00F  F0A8         	movff	?___xxtofl,_Y
  4079  003BBC  C010  F0A9         	movff	?___xxtofl+1,_Y+1
  4080  003BC0  C011  F0AA         	movff	?___xxtofl+2,_Y+2
  4081  003BC4  C012  F0AB         	movff	?___xxtofl+3,_Y+3
  4082  003BC8                     
  4083                           ;CalculadoraLCD.c: 321: X=pow(A,Y);
  4084  003BC8  0100               	movlb	0	; () banked
  4085  003BCA  51BE               	movf	_A& (0+255),w,b
  4086  003BCC  6E0F               	movwf	___xxtofl@val^0,c
  4087  003BCE  6A10               	clrf	(___xxtofl@val+1)^0,c
  4088  003BD0  6A11               	clrf	(___xxtofl@val+2)^0,c
  4089  003BD2  6A12               	clrf	(___xxtofl@val+3)^0,c
  4090  003BD4  0E00               	movlw	0
  4091  003BD6  EC60  F03C         	call	___xxtofl
  4092  003BDA  C00F  F0FA         	movff	?___xxtofl,_main$975
  4093  003BDE  C010  F0FB         	movff	?___xxtofl+1,_main$975+1
  4094  003BE2  C011  F0FC         	movff	?___xxtofl+2,_main$975+2
  4095  003BE6  C012  F0FD         	movff	?___xxtofl+3,_main$975+3
  4096  003BEA                     
  4097                           ;CalculadoraLCD.c: 321: X=pow(A,Y);
  4098  003BEA  C0FA  F0CC         	movff	_main$975,pow@x
  4099  003BEE  C0FB  F0CD         	movff	_main$975+1,pow@x+1
  4100  003BF2  C0FC  F0CE         	movff	_main$975+2,pow@x+2
  4101  003BF6  C0FD  F0CF         	movff	_main$975+3,pow@x+3
  4102  003BFA  C0A8  F0D0         	movff	_Y,pow@y
  4103  003BFE  C0A9  F0D1         	movff	_Y+1,pow@y+1
  4104  003C02  C0AA  F0D2         	movff	_Y+2,pow@y+2
  4105  003C06  C0AB  F0D3         	movff	_Y+3,pow@y+3
  4106  003C0A  EC08  F000         	call	_pow	;wreg free
  4107  003C0E  C0CC  F0AC         	movff	?_pow,_X
  4108  003C12  C0CD  F0AD         	movff	?_pow+1,_X+1
  4109  003C16  C0CE  F0AE         	movff	?_pow+2,_X+2
  4110  003C1A  C0CF  F0AF         	movff	?_pow+3,_X+3
  4111                           
  4112                           ;CalculadoraLCD.c: 322: ins_LCD(192);
  4113  003C1E  0EC0               	movlw	192
  4114  003C20  EC94  F032         	call	_ins_LCD
  4115  003C24                     
  4116                           ;CalculadoraLCD.c: 323: write_LCD(sprintf(buffer,"Rta: %.2f",X));
  4117  003C24  0E04               	movlw	low _buffer
  4118  003C26  0100               	movlb	0	; () banked
  4119  003C28  6FC1               	movwf	sprintf@sp& (0+255),b
  4120  003C2A  0E01               	movlw	high _buffer
  4121  003C2C  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  4122  003C2E  0EA9               	movlw	low STR_43
  4123  003C30  6FC3               	movwf	sprintf@f& (0+255),b
  4124  003C32  0E7F               	movlw	high STR_43
  4125  003C34  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  4126  003C36  C0AC  F0C5         	movff	_X,?_sprintf+4
  4127  003C3A  C0AD  F0C6         	movff	_X+1,?_sprintf+5
  4128  003C3E  C0AE  F0C7         	movff	_X+2,?_sprintf+6
  4129  003C42  C0AF  F0C8         	movff	_X+3,?_sprintf+7
  4130  003C46  EC8C  F00E         	call	_sprintf	;wreg free
  4131  003C4A  0100               	movlb	0	; () banked
  4132  003C4C  51C1               	movf	?_sprintf& (0+255),w,b
  4133  003C4E  ECEA  F032         	call	_write_LCD
  4134  003C52  EFDE  F014         	goto	l5099
  4135  003C56                     l5607:
  4136  003C56  FFFF               	dw	65535	; assembler added errata NOP
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;CalculadoraLCD.c: 328: ins_LCD(1);
  4140  003C58  0E01               	movlw	1
  4141  003C5A  EC94  F032         	call	_ins_LCD
  4142  003C5E                     
  4143                           ;CalculadoraLCD.c: 329: for (t = 4; t > 0; t--) {
  4144  003C5E  0E04               	movlw	4
  4145  003C60  0100               	movlb	0	; () banked
  4146  003C62  6FBF               	movwf	_t& (0+255),b
  4147  003C64                     l5611:
  4148  003C64  FFFF               	dw	65535	; assembler added errata NOP
  4149                           
  4150                           ; BSR set to: 0
  4151  003C66  51BF               	movf	_t& (0+255),w,b
  4152  003C68  A4D8               	btfss	status,2,c
  4153  003C6A  EF39  F01E         	goto	u5211
  4154  003C6E  EF3C  F01E         	goto	u5210
  4155  003C72                     u5211:
  4156  003C72  FFFF               	dw	65535	; assembler added errata NOP
  4157  003C74  EF3F  F01E         	goto	l5615
  4158  003C78                     u5210:
  4159  003C78  FFFF               	dw	65535	; assembler added errata NOP
  4160  003C7A  EF58  F01E         	goto	l5623
  4161  003C7E                     l5615:
  4162  003C7E  FFFF               	dw	65535	; assembler added errata NOP
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;CalculadoraLCD.c: 330: bin1[t] = A % 2;
  4166  003C80  0EA3               	movlw	low _bin1
  4167  003C82  25BF               	addwf	_t& (0+255),w,b
  4168  003C84  6ED9               	movwf	fsr2l,c
  4169  003C86  6ADA               	clrf	fsr2h,c
  4170  003C88  0E00               	movlw	high _bin1
  4171  003C8A  22DA               	addwfc	fsr2h,f,c
  4172  003C8C  51BE               	movf	_A& (0+255),w,b
  4173  003C8E  0B01               	andlw	1
  4174  003C90  6EDF               	movwf	indf2,c
  4175  003C92                     
  4176                           ; BSR set to: 0
  4177                           ;CalculadoraLCD.c: 331: A = A / 2;
  4178  003C92  C0BE  F007         	movff	_A,___awdiv@dividend
  4179  003C96  6A08               	clrf	(___awdiv@dividend+1)^0,c
  4180  003C98  0E00               	movlw	0
  4181  003C9A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4182  003C9C  0E02               	movlw	2
  4183  003C9E  6E09               	movwf	___awdiv@divisor^0,c
  4184  003CA0  EC74  F036         	call	___awdiv	;wreg free
  4185  003CA4  5007               	movf	?___awdiv^0,w,c
  4186  003CA6  0100               	movlb	0	; () banked
  4187  003CA8  6FBE               	movwf	_A& (0+255),b
  4188  003CAA                     
  4189                           ; BSR set to: 0
  4190  003CAA  07BF               	decf	_t& (0+255),f,b
  4191  003CAC  EF32  F01E         	goto	l5611
  4192  003CB0                     l5623:
  4193  003CB0  FFFF               	dw	65535	; assembler added errata NOP
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;CalculadoraLCD.c: 332: };CalculadoraLCD.c: 333: ins_LCD(128);
  4197  003CB2  0E80               	movlw	128
  4198  003CB4  EC94  F032         	call	_ins_LCD
  4199  003CB8                     
  4200                           ;CalculadoraLCD.c: 334: write_LCD(sprintf(buffer, "Num:%i%i%i%i", bin1[1], bin1[2], bin1
      +                          [3], bin1[4]));
  4201  003CB8  0E04               	movlw	low _buffer
  4202  003CBA  0100               	movlb	0	; () banked
  4203  003CBC  6FC1               	movwf	sprintf@sp& (0+255),b
  4204  003CBE  0E01               	movlw	high _buffer
  4205  003CC0  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  4206  003CC2  0E79               	movlw	low STR_44
  4207  003CC4  6FC3               	movwf	sprintf@f& (0+255),b
  4208  003CC6  0E7F               	movlw	high STR_44
  4209  003CC8  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  4210  003CCA  C0A4  F0C5         	movff	_bin1+1,?_sprintf+4
  4211  003CCE  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  4212  003CD0  C0A5  F0C7         	movff	_bin1+2,?_sprintf+6
  4213  003CD4  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  4214  003CD6  C0A6  F0C9         	movff	_bin1+3,?_sprintf+8
  4215  003CDA  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  4216  003CDC  C0A7  F0CB         	movff	_bin1+4,?_sprintf+10
  4217  003CE0  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  4218  003CE2  EC8C  F00E         	call	_sprintf	;wreg free
  4219  003CE6  0100               	movlb	0	; () banked
  4220  003CE8  51C1               	movf	?_sprintf& (0+255),w,b
  4221  003CEA  ECEA  F032         	call	_write_LCD
  4222  003CEE                     
  4223                           ;CalculadoraLCD.c: 335: ins_LCD(137);
  4224  003CEE  0E89               	movlw	137
  4225  003CF0  EC94  F032         	call	_ins_LCD
  4226                           
  4227                           ;CalculadoraLCD.c: 336: write_LCD(sprintf(buffer, "B=%i", B));
  4228  003CF4  0E04               	movlw	low _buffer
  4229  003CF6  0100               	movlb	0	; () banked
  4230  003CF8  6FC1               	movwf	sprintf@sp& (0+255),b
  4231  003CFA  0E01               	movlw	high _buffer
  4232  003CFC  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  4233  003CFE  0EDC               	movlw	low STR_45
  4234  003D00  6FC3               	movwf	sprintf@f& (0+255),b
  4235  003D02  0E7F               	movlw	high STR_45
  4236  003D04  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  4237  003D06  C0C0  F0C5         	movff	_B,?_sprintf+4
  4238  003D0A  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  4239  003D0C  EC8C  F00E         	call	_sprintf	;wreg free
  4240  003D10  0100               	movlb	0	; () banked
  4241  003D12  51C1               	movf	?_sprintf& (0+255),w,b
  4242  003D14  ECEA  F032         	call	_write_LCD
  4243  003D18                     
  4244                           ;CalculadoraLCD.c: 337: PB=PORTB;
  4245  003D18  CF81 F0BC          	movff	3969,_PB	;volatile
  4246  003D1C                     
  4247                           ;CalculadoraLCD.c: 338: A = PB >> 4;
  4248  003D1C  0100               	movlb	0	; () banked
  4249  003D1E  39BC               	swapf	_PB& (0+255),w,b
  4250  003D20  0B0F               	andlw	15
  4251  003D22  6FBE               	movwf	_A& (0+255),b
  4252  003D24                     
  4253                           ; BSR set to: 0
  4254                           ;CalculadoraLCD.c: 339: if (B < 9) {
  4255  003D24  0E09               	movlw	9
  4256  003D26  61C0               	cpfslt	_B& (0+255),b
  4257  003D28  EF98  F01E         	goto	u5221
  4258  003D2C  EF9B  F01E         	goto	u5220
  4259  003D30                     u5221:
  4260  003D30  FFFF               	dw	65535	; assembler added errata NOP
  4261  003D32  EF19  F01F         	goto	l5655
  4262  003D36                     u5220:
  4263  003D36  FFFF               	dw	65535	; assembler added errata NOP
  4264  003D38                     
  4265                           ; BSR set to: 0
  4266                           ;CalculadoraLCD.c: 340: C = A << B;
  4267  003D38  C0C0  F0F0         	movff	_B,??_main
  4268  003D3C  C0BE  F0F1         	movff	_A,??_main+1
  4269  003D40  2BF0               	incf	??_main& (0+255),f,b
  4270  003D42  EFA6  F01E         	goto	u5234
  4271  003D46                     u5235:
  4272  003D46  FFFF               	dw	65535	; assembler added errata NOP
  4273  003D48  90D8               	bcf	status,0,c
  4274  003D4A  37F1               	rlcf	(??_main+1)& (0+255),f,b
  4275  003D4C                     u5234:
  4276  003D4C  FFFF               	dw	65535	; assembler added errata NOP
  4277  003D4E  2FF0               	decfsz	??_main& (0+255),f,b
  4278  003D50  EFA3  F01E         	goto	u5235
  4279  003D54  0100               	movlb	0	; () banked
  4280  003D56  51F1               	movf	(??_main+1)& (0+255),w,b
  4281  003D58  6FBA               	movwf	_C& (0+255),b
  4282                           
  4283                           ;CalculadoraLCD.c: 341: D = 8 - B;
  4284  003D5A  51C0               	movf	_B& (0+255),w,b
  4285  003D5C  0808               	sublw	8
  4286  003D5E  6FBB               	movwf	_D& (0+255),b
  4287                           
  4288                           ;CalculadoraLCD.c: 342: E = A >> D;
  4289  003D60  C0BB  F0F0         	movff	_D,??_main
  4290  003D64  C0BE  F0F1         	movff	_A,??_main+1
  4291  003D68  2BF0               	incf	??_main& (0+255),f,b
  4292  003D6A  EFBA  F01E         	goto	u5244
  4293  003D6E                     u5245:
  4294  003D6E  FFFF               	dw	65535	; assembler added errata NOP
  4295  003D70  90D8               	bcf	status,0,c
  4296  003D72  33F1               	rrcf	(??_main+1)& (0+255),f,b
  4297  003D74                     u5244:
  4298  003D74  FFFF               	dw	65535	; assembler added errata NOP
  4299  003D76  2FF0               	decfsz	??_main& (0+255),f,b
  4300  003D78  EFB7  F01E         	goto	u5245
  4301  003D7C  0100               	movlb	0	; () banked
  4302  003D7E  51F1               	movf	(??_main+1)& (0+255),w,b
  4303  003D80  6FB9               	movwf	_E& (0+255),b
  4304                           
  4305                           ;CalculadoraLCD.c: 343: F = E | C;
  4306  003D82  51B9               	movf	_E& (0+255),w,b
  4307  003D84  11BA               	iorwf	_C& (0+255),w,b
  4308  003D86  6FB8               	movwf	_F& (0+255),b
  4309  003D88                     
  4310                           ; BSR set to: 0
  4311                           ;CalculadoraLCD.c: 345: for (t = 8; t > 0; t--) {
  4312  003D88  0E08               	movlw	8
  4313  003D8A  6FBF               	movwf	_t& (0+255),b
  4314  003D8C                     l5639:
  4315  003D8C  FFFF               	dw	65535	; assembler added errata NOP
  4316                           
  4317                           ; BSR set to: 0
  4318  003D8E  51BF               	movf	_t& (0+255),w,b
  4319  003D90  A4D8               	btfss	status,2,c
  4320  003D92  EFCD  F01E         	goto	u5251
  4321  003D96  EFD0  F01E         	goto	u5250
  4322  003D9A                     u5251:
  4323  003D9A  FFFF               	dw	65535	; assembler added errata NOP
  4324  003D9C  EFD3  F01E         	goto	l5643
  4325  003DA0                     u5250:
  4326  003DA0  FFFF               	dw	65535	; assembler added errata NOP
  4327  003DA2  EFEC  F01E         	goto	l5651
  4328  003DA6                     l5643:
  4329  003DA6  FFFF               	dw	65535	; assembler added errata NOP
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;CalculadoraLCD.c: 346: bincor[t] = F % 2;
  4333  003DA8  0E80               	movlw	low _bincor
  4334  003DAA  25BF               	addwf	_t& (0+255),w,b
  4335  003DAC  6ED9               	movwf	fsr2l,c
  4336  003DAE  6ADA               	clrf	fsr2h,c
  4337  003DB0  0E00               	movlw	high _bincor
  4338  003DB2  22DA               	addwfc	fsr2h,f,c
  4339  003DB4  51B8               	movf	_F& (0+255),w,b
  4340  003DB6  0B01               	andlw	1
  4341  003DB8  6EDF               	movwf	indf2,c
  4342  003DBA                     
  4343                           ; BSR set to: 0
  4344                           ;CalculadoraLCD.c: 347: F = F / 2;
  4345  003DBA  C0B8  F007         	movff	_F,___awdiv@dividend
  4346  003DBE  6A08               	clrf	(___awdiv@dividend+1)^0,c
  4347  003DC0  0E00               	movlw	0
  4348  003DC2  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4349  003DC4  0E02               	movlw	2
  4350  003DC6  6E09               	movwf	___awdiv@divisor^0,c
  4351  003DC8  EC74  F036         	call	___awdiv	;wreg free
  4352  003DCC  5007               	movf	?___awdiv^0,w,c
  4353  003DCE  0100               	movlb	0	; () banked
  4354  003DD0  6FB8               	movwf	_F& (0+255),b
  4355  003DD2                     
  4356                           ; BSR set to: 0
  4357  003DD2  07BF               	decf	_t& (0+255),f,b
  4358  003DD4  EFC6  F01E         	goto	l5639
  4359  003DD8                     l5651:
  4360  003DD8  FFFF               	dw	65535	; assembler added errata NOP
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;CalculadoraLCD.c: 348: };CalculadoraLCD.c: 349: ins_LCD(192);
  4364  003DDA  0EC0               	movlw	192
  4365  003DDC  EC94  F032         	call	_ins_LCD
  4366  003DE0                     
  4367                           ;CalculadoraLCD.c: 350: write_LCD(sprintf(buffer, "Res: %d%d%d%d%d%d%d%d", bincor[1], bi
      +                          ncor[2], bincor[3], bincor[4], bincor[5], bincor[6], bincor[7], bincor[8]));
  4368  003DE0  0E04               	movlw	low _buffer
  4369  003DE2  0100               	movlb	0	; () banked
  4370  003DE4  6FC1               	movwf	sprintf@sp& (0+255),b
  4371  003DE6  0E01               	movlw	high _buffer
  4372  003DE8  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  4373  003DEA  0E79               	movlw	low STR_46
  4374  003DEC  6FC3               	movwf	sprintf@f& (0+255),b
  4375  003DEE  0E7E               	movlw	high STR_46
  4376  003DF0  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  4377  003DF2  C081  F0C5         	movff	_bincor+1,?_sprintf+4
  4378  003DF6  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  4379  003DF8  C082  F0C7         	movff	_bincor+2,?_sprintf+6
  4380  003DFC  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  4381  003DFE  C083  F0C9         	movff	_bincor+3,?_sprintf+8
  4382  003E02  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  4383  003E04  C084  F0CB         	movff	_bincor+4,?_sprintf+10
  4384  003E08  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  4385  003E0A  C085  F0CD         	movff	_bincor+5,?_sprintf+12
  4386  003E0E  6BCE               	clrf	(?_sprintf+13)& (0+255),b
  4387  003E10  C086  F0CF         	movff	_bincor+6,?_sprintf+14
  4388  003E14  6BD0               	clrf	(?_sprintf+15)& (0+255),b
  4389  003E16  C087  F0D1         	movff	_bincor+7,?_sprintf+16
  4390  003E1A  6BD2               	clrf	(?_sprintf+17)& (0+255),b
  4391  003E1C  C088  F0D3         	movff	_bincor+8,?_sprintf+18
  4392  003E20  6BD4               	clrf	(?_sprintf+19)& (0+255),b
  4393  003E22  EC8C  F00E         	call	_sprintf	;wreg free
  4394  003E26  0100               	movlb	0	; () banked
  4395  003E28  51C1               	movf	?_sprintf& (0+255),w,b
  4396  003E2A  ECEA  F032         	call	_write_LCD
  4397                           
  4398                           ;CalculadoraLCD.c: 351: }
  4399  003E2E  EFDE  F014         	goto	l5099
  4400  003E32                     l5655:
  4401  003E32  FFFF               	dw	65535	; assembler added errata NOP
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;CalculadoraLCD.c: 352: else if(B > 8){
  4405  003E34  0E08               	movlw	8
  4406  003E36  65C0               	cpfsgt	_B& (0+255),b
  4407  003E38  EF20  F01F         	goto	u5261
  4408  003E3C  EF23  F01F         	goto	u5260
  4409  003E40                     u5261:
  4410  003E40  FFFF               	dw	65535	; assembler added errata NOP
  4411  003E42  EFDE  F014         	goto	l5099
  4412  003E46                     u5260:
  4413  003E46  FFFF               	dw	65535	; assembler added errata NOP
  4414  003E48                     
  4415                           ; BSR set to: 0
  4416                           ;CalculadoraLCD.c: 353: C = A << B;
  4417  003E48  C0C0  F0F0         	movff	_B,??_main
  4418  003E4C  C0BE  F0F1         	movff	_A,??_main+1
  4419  003E50  2BF0               	incf	??_main& (0+255),f,b
  4420  003E52  EF2E  F01F         	goto	u5274
  4421  003E56                     u5275:
  4422  003E56  FFFF               	dw	65535	; assembler added errata NOP
  4423  003E58  90D8               	bcf	status,0,c
  4424  003E5A  37F1               	rlcf	(??_main+1)& (0+255),f,b
  4425  003E5C                     u5274:
  4426  003E5C  FFFF               	dw	65535	; assembler added errata NOP
  4427  003E5E  2FF0               	decfsz	??_main& (0+255),f,b
  4428  003E60  EF2B  F01F         	goto	u5275
  4429  003E64  0100               	movlb	0	; () banked
  4430  003E66  51F1               	movf	(??_main+1)& (0+255),w,b
  4431  003E68  6FBA               	movwf	_C& (0+255),b
  4432                           
  4433                           ;CalculadoraLCD.c: 354: D = B - 8;
  4434  003E6A  51C0               	movf	_B& (0+255),w,b
  4435  003E6C  0FF8               	addlw	248
  4436  003E6E  6FBB               	movwf	_D& (0+255),b
  4437                           
  4438                           ;CalculadoraLCD.c: 355: E = A << D;
  4439  003E70  C0BB  F0F0         	movff	_D,??_main
  4440  003E74  C0BE  F0F1         	movff	_A,??_main+1
  4441  003E78  2BF0               	incf	??_main& (0+255),f,b
  4442  003E7A  EF42  F01F         	goto	u5284
  4443  003E7E                     u5285:
  4444  003E7E  FFFF               	dw	65535	; assembler added errata NOP
  4445  003E80  90D8               	bcf	status,0,c
  4446  003E82  37F1               	rlcf	(??_main+1)& (0+255),f,b
  4447  003E84                     u5284:
  4448  003E84  FFFF               	dw	65535	; assembler added errata NOP
  4449  003E86  2FF0               	decfsz	??_main& (0+255),f,b
  4450  003E88  EF3F  F01F         	goto	u5285
  4451  003E8C  0100               	movlb	0	; () banked
  4452  003E8E  51F1               	movf	(??_main+1)& (0+255),w,b
  4453  003E90  6FB9               	movwf	_E& (0+255),b
  4454                           
  4455                           ;CalculadoraLCD.c: 356: F = 8 - D;
  4456  003E92  51BB               	movf	_D& (0+255),w,b
  4457  003E94  0808               	sublw	8
  4458  003E96  6FB8               	movwf	_F& (0+255),b
  4459                           
  4460                           ;CalculadoraLCD.c: 357: G = A >> F;
  4461  003E98  C0B8  F0F0         	movff	_F,??_main
  4462  003E9C  C0BE  F0F1         	movff	_A,??_main+1
  4463  003EA0  2BF0               	incf	??_main& (0+255),f,b
  4464  003EA2  EF56  F01F         	goto	u5294
  4465  003EA6                     u5295:
  4466  003EA6  FFFF               	dw	65535	; assembler added errata NOP
  4467  003EA8  90D8               	bcf	status,0,c
  4468  003EAA  33F1               	rrcf	(??_main+1)& (0+255),f,b
  4469  003EAC                     u5294:
  4470  003EAC  FFFF               	dw	65535	; assembler added errata NOP
  4471  003EAE  2FF0               	decfsz	??_main& (0+255),f,b
  4472  003EB0  EF53  F01F         	goto	u5295
  4473  003EB4  0100               	movlb	0	; () banked
  4474  003EB6  51F1               	movf	(??_main+1)& (0+255),w,b
  4475  003EB8  6FB7               	movwf	_G& (0+255),b
  4476                           
  4477                           ;CalculadoraLCD.c: 358: R = G | E;
  4478  003EBA  51B7               	movf	_G& (0+255),w,b
  4479  003EBC  11B9               	iorwf	_E& (0+255),w,b
  4480  003EBE  6FB6               	movwf	_R& (0+255),b
  4481  003EC0                     
  4482                           ; BSR set to: 0
  4483                           ;CalculadoraLCD.c: 360: for (t = 8; t > 0; t--) {
  4484  003EC0  0E08               	movlw	8
  4485  003EC2  6FBF               	movwf	_t& (0+255),b
  4486  003EC4                     l5661:
  4487  003EC4  FFFF               	dw	65535	; assembler added errata NOP
  4488                           
  4489                           ; BSR set to: 0
  4490  003EC6  51BF               	movf	_t& (0+255),w,b
  4491  003EC8  A4D8               	btfss	status,2,c
  4492  003ECA  EF69  F01F         	goto	u5301
  4493  003ECE  EF6C  F01F         	goto	u5300
  4494  003ED2                     u5301:
  4495  003ED2  FFFF               	dw	65535	; assembler added errata NOP
  4496  003ED4  EF6F  F01F         	goto	l5665
  4497  003ED8                     u5300:
  4498  003ED8  FFFF               	dw	65535	; assembler added errata NOP
  4499  003EDA  EF88  F01F         	goto	l5673
  4500  003EDE                     l5665:
  4501  003EDE  FFFF               	dw	65535	; assembler added errata NOP
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;CalculadoraLCD.c: 361: bincor[t] = R % 2;
  4505  003EE0  0E80               	movlw	low _bincor
  4506  003EE2  25BF               	addwf	_t& (0+255),w,b
  4507  003EE4  6ED9               	movwf	fsr2l,c
  4508  003EE6  6ADA               	clrf	fsr2h,c
  4509  003EE8  0E00               	movlw	high _bincor
  4510  003EEA  22DA               	addwfc	fsr2h,f,c
  4511  003EEC  51B6               	movf	_R& (0+255),w,b
  4512  003EEE  0B01               	andlw	1
  4513  003EF0  6EDF               	movwf	indf2,c
  4514  003EF2                     
  4515                           ; BSR set to: 0
  4516                           ;CalculadoraLCD.c: 362: R = R / 2;
  4517  003EF2  C0B6  F007         	movff	_R,___awdiv@dividend
  4518  003EF6  6A08               	clrf	(___awdiv@dividend+1)^0,c
  4519  003EF8  0E00               	movlw	0
  4520  003EFA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4521  003EFC  0E02               	movlw	2
  4522  003EFE  6E09               	movwf	___awdiv@divisor^0,c
  4523  003F00  EC74  F036         	call	___awdiv	;wreg free
  4524  003F04  5007               	movf	?___awdiv^0,w,c
  4525  003F06  0100               	movlb	0	; () banked
  4526  003F08  6FB6               	movwf	_R& (0+255),b
  4527  003F0A                     
  4528                           ; BSR set to: 0
  4529  003F0A  07BF               	decf	_t& (0+255),f,b
  4530  003F0C  EF62  F01F         	goto	l5661
  4531  003F10                     l5673:
  4532  003F10  FFFF               	dw	65535	; assembler added errata NOP
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;CalculadoraLCD.c: 363: };CalculadoraLCD.c: 364: ins_LCD(192);
  4536  003F12  0EC0               	movlw	192
  4537  003F14  EC94  F032         	call	_ins_LCD
  4538  003F18                     
  4539                           ;CalculadoraLCD.c: 365: write_LCD(sprintf(buffer, "Res: %d%d%d%d%d%d%d%d", bincor[1], bi
      +                          ncor[2], bincor[3], bincor[4], bincor[5], bincor[6], bincor[7], bincor[8]));
  4540  003F18  0E04               	movlw	low _buffer
  4541  003F1A  0100               	movlb	0	; () banked
  4542  003F1C  6FC1               	movwf	sprintf@sp& (0+255),b
  4543  003F1E  0E01               	movlw	high _buffer
  4544  003F20  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  4545  003F22  0E79               	movlw	low STR_46
  4546  003F24  6FC3               	movwf	sprintf@f& (0+255),b
  4547  003F26  0E7E               	movlw	high STR_46
  4548  003F28  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  4549  003F2A  C081  F0C5         	movff	_bincor+1,?_sprintf+4
  4550  003F2E  6BC6               	clrf	(?_sprintf+5)& (0+255),b
  4551  003F30  C082  F0C7         	movff	_bincor+2,?_sprintf+6
  4552  003F34  6BC8               	clrf	(?_sprintf+7)& (0+255),b
  4553  003F36  C083  F0C9         	movff	_bincor+3,?_sprintf+8
  4554  003F3A  6BCA               	clrf	(?_sprintf+9)& (0+255),b
  4555  003F3C  C084  F0CB         	movff	_bincor+4,?_sprintf+10
  4556  003F40  6BCC               	clrf	(?_sprintf+11)& (0+255),b
  4557  003F42  C085  F0CD         	movff	_bincor+5,?_sprintf+12
  4558  003F46  6BCE               	clrf	(?_sprintf+13)& (0+255),b
  4559  003F48  C086  F0CF         	movff	_bincor+6,?_sprintf+14
  4560  003F4C  6BD0               	clrf	(?_sprintf+15)& (0+255),b
  4561  003F4E  C087  F0D1         	movff	_bincor+7,?_sprintf+16
  4562  003F52  6BD2               	clrf	(?_sprintf+17)& (0+255),b
  4563  003F54  C088  F0D3         	movff	_bincor+8,?_sprintf+18
  4564  003F58  6BD4               	clrf	(?_sprintf+19)& (0+255),b
  4565  003F5A  EC8C  F00E         	call	_sprintf	;wreg free
  4566  003F5E  0100               	movlb	0	; () banked
  4567  003F60  51C1               	movf	?_sprintf& (0+255),w,b
  4568  003F62  ECEA  F032         	call	_write_LCD
  4569  003F66  EFDE  F014         	goto	l5099
  4570  003F6A                     l5679:
  4571  003F6A  FFFF               	dw	65535	; assembler added errata NOP
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;CalculadoraLCD.c: 372: nombresbaby();
  4575  003F6C  ECF1  F004         	call	_nombresbaby	;wreg free
  4576                           
  4577                           ;CalculadoraLCD.c: 373: break;
  4578  003F70  EF9D  F014         	goto	l5081
  4579  003F74                     l5683:
  4580  003F74  FFFF               	dw	65535	; assembler added errata NOP
  4581                           
  4582                           ; BSR set to: 0
  4583  003F76  51BD               	movf	_S& (0+255),w,b
  4584                           
  4585                           ; Switch size 1, requested type "simple"
  4586                           ; Number of cases is 16, Range of values is 0 to 15
  4587                           ; switch strategies available:
  4588                           ; Name         Instructions Cycles
  4589                           ; simple_byte           49    25 (average)
  4590                           ;	Chosen strategy is simple_byte
  4591  003F78  0A00               	xorlw	0	; case 0
  4592  003F7A  B4D8               	btfsc	status,2,c
  4593  003F7C  EFAC  F014         	goto	l5089
  4594  003F80  0A01               	xorlw	1	; case 1
  4595  003F82  B4D8               	btfsc	status,2,c
  4596  003F84  EFEB  F014         	goto	l5101
  4597  003F88  0A03               	xorlw	3	; case 2
  4598  003F8A  B4D8               	btfsc	status,2,c
  4599  003F8C  EF96  F015         	goto	l5133
  4600  003F90  0A01               	xorlw	1	; case 3
  4601  003F92  B4D8               	btfsc	status,2,c
  4602  003F94  EFDD  F015         	goto	l5147
  4603  003F98  0A07               	xorlw	7	; case 4
  4604  003F9A  B4D8               	btfsc	status,2,c
  4605  003F9C  EF4F  F016         	goto	l5171
  4606  003FA0  0A01               	xorlw	1	; case 5
  4607  003FA2  B4D8               	btfsc	status,2,c
  4608  003FA4  EF31  F017         	goto	l5223
  4609  003FA8  0A03               	xorlw	3	; case 6
  4610  003FAA  B4D8               	btfsc	status,2,c
  4611  003FAC  EF13  F018         	goto	l5275
  4612  003FB0  0A01               	xorlw	1	; case 7
  4613  003FB2  B4D8               	btfsc	status,2,c
  4614  003FB4  EFF5  F018         	goto	l5327
  4615  003FB8  0A0F               	xorlw	15	; case 8
  4616  003FBA  B4D8               	btfsc	status,2,c
  4617  003FBC  EFE1  F019         	goto	l5379
  4618  003FC0  0A01               	xorlw	1	; case 9
  4619  003FC2  B4D8               	btfsc	status,2,c
  4620  003FC4  EFCB  F01A         	goto	l5435
  4621  003FC8  0A03               	xorlw	3	; case 10
  4622  003FCA  B4D8               	btfsc	status,2,c
  4623  003FCC  EFB7  F01B         	goto	l5487
  4624  003FD0  0A01               	xorlw	1	; case 11
  4625  003FD2  B4D8               	btfsc	status,2,c
  4626  003FD4  EF72  F01C         	goto	l5531
  4627  003FD8  0A07               	xorlw	7	; case 12
  4628  003FDA  B4D8               	btfsc	status,2,c
  4629  003FDC  EF2D  F01D         	goto	l5575
  4630  003FE0  0A01               	xorlw	1	; case 13
  4631  003FE2  B4D8               	btfsc	status,2,c
  4632  003FE4  EFAB  F01D         	goto	l5593
  4633  003FE8  0A03               	xorlw	3	; case 14
  4634  003FEA  B4D8               	btfsc	status,2,c
  4635  003FEC  EF2B  F01E         	goto	l5607
  4636  003FF0  0A01               	xorlw	1	; case 15
  4637  003FF2  B4D8               	btfsc	status,2,c
  4638  003FF4  EFB5  F01F         	goto	l5679
  4639  003FF8  EF9D  F014         	goto	l5081
  4640  003FFC  EF01  F000         	goto	start
  4641  004000                     __end_of_main:
  4642                           	opt callstack 0
  4643                           
  4644 ;; *************** function _pow *****************
  4645 ;; Defined at:
  4646 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\pow.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  x               4   11[BANK0 ] int 
  4649 ;;  y               4   15[BANK0 ] int 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  yi              4   28[BANK0 ] unsigned long 
  4652 ;;  sign            1   27[BANK0 ] unsigned char 
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  4   11[BANK0 ] unsigned char 
  4655 ;; Registers used:
  4656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4662 ;;      Params:         0       8       0       0       0       0       0
  4663 ;;      Locals:         0      13       0       0       0       0       0
  4664 ;;      Temps:          0       0       0       0       0       0       0
  4665 ;;      Totals:         0      21       0       0       0       0       0
  4666 ;;Total ram usage:       21 bytes
  4667 ;; Hardware stack levels used:    1
  4668 ;; Hardware stack levels required when called:    4
  4669 ;; This function calls:
  4670 ;;		___fleq
  4671 ;;		___flge
  4672 ;;		___flmul
  4673 ;;		___flneg
  4674 ;;		___fltol
  4675 ;;		___xxtofl
  4676 ;;		_exp
  4677 ;;		_log
  4678 ;; This function is called by:
  4679 ;;		_main
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           	psect	text1
  4684  000010                     __ptext1:
  4685                           	opt callstack 0
  4686  000010                     _pow:
  4687                           	opt callstack 0
  4688  000010  FFFF               	dw	65535	; assembler added errata NOP
  4689  000012  0E00               	movlw	0
  4690  000014  0100               	movlb	0	; () banked
  4691  000016  6FDC               	movwf	pow@sign& (0+255),b
  4692  000018                     
  4693                           ; BSR set to: 0
  4694  000018  C0CC  F01D         	movff	pow@x,___fleq@ff1
  4695  00001C  C0CD  F01E         	movff	pow@x+1,___fleq@ff1+1
  4696  000020  C0CE  F01F         	movff	pow@x+2,___fleq@ff1+2
  4697  000024  C0CF  F020         	movff	pow@x+3,___fleq@ff1+3
  4698  000028  0E00               	movlw	0
  4699  00002A  6E21               	movwf	___fleq@ff2^0,c
  4700  00002C  0E00               	movlw	0
  4701  00002E  6E22               	movwf	(___fleq@ff2+1)^0,c
  4702  000030  0E00               	movlw	0
  4703  000032  6E23               	movwf	(___fleq@ff2+2)^0,c
  4704  000034  0E00               	movlw	0
  4705  000036  6E24               	movwf	(___fleq@ff2+3)^0,c
  4706  000038  EC3A  F035         	call	___fleq	;wreg free
  4707  00003C  A0D8               	btfss	status,0,c
  4708  00003E  EF23  F000         	goto	u4801
  4709  000042  EF26  F000         	goto	u4800
  4710  000046                     u4801:
  4711  000046  FFFF               	dw	65535	; assembler added errata NOP
  4712  000048  EF53  F000         	goto	l4911
  4713  00004C                     u4800:
  4714  00004C  FFFF               	dw	65535	; assembler added errata NOP
  4715  00004E  0E00               	movlw	0
  4716  000050  6E01               	movwf	___flge@ff1^0,c
  4717  000052  0E00               	movlw	0
  4718  000054  6E02               	movwf	(___flge@ff1+1)^0,c
  4719  000056  0E00               	movlw	0
  4720  000058  6E03               	movwf	(___flge@ff1+2)^0,c
  4721  00005A  0E00               	movlw	0
  4722  00005C  6E04               	movwf	(___flge@ff1+3)^0,c
  4723  00005E  C0D0  F005         	movff	pow@y,___flge@ff2
  4724  000062  C0D1  F006         	movff	pow@y+1,___flge@ff2+1
  4725  000066  C0D2  F007         	movff	pow@y+2,___flge@ff2+2
  4726  00006A  C0D3  F008         	movff	pow@y+3,___flge@ff2+3
  4727  00006E  EC79  F037         	call	___flge	;wreg free
  4728  000072  A0D8               	btfss	status,0,c
  4729  000074  EF3E  F000         	goto	u4811
  4730  000078  EF41  F000         	goto	u4810
  4731  00007C                     u4811:
  4732  00007C  FFFF               	dw	65535	; assembler added errata NOP
  4733  00007E  EF47  F000         	goto	l1016
  4734  000082                     u4810:
  4735  000082  FFFF               	dw	65535	; assembler added errata NOP
  4736  000084  0E00               	movlw	0
  4737  000086  0100               	movlb	0	; () banked
  4738  000088  6FB1               	movwf	(_errno+1)& (0+255),b
  4739  00008A  0E21               	movlw	33
  4740  00008C  6FB0               	movwf	_errno& (0+255),b
  4741  00008E                     l1016:
  4742  00008E  FFFF               	dw	65535	; assembler added errata NOP
  4743  000090  0E00               	movlw	0
  4744  000092  0100               	movlb	0	; () banked
  4745  000094  6FCC               	movwf	?_pow& (0+255),b
  4746  000096  0E00               	movlw	0
  4747  000098  6FCD               	movwf	(?_pow+1)& (0+255),b
  4748  00009A  0E00               	movlw	0
  4749  00009C  6FCE               	movwf	(?_pow+2)& (0+255),b
  4750  00009E  0E00               	movlw	0
  4751  0000A0  6FCF               	movwf	(?_pow+3)& (0+255),b
  4752  0000A2  EF4A  F001         	goto	l1017
  4753  0000A6                     l4911:
  4754  0000A6  FFFF               	dw	65535	; assembler added errata NOP
  4755  0000A8  C0D0  F01D         	movff	pow@y,___fleq@ff1
  4756  0000AC  C0D1  F01E         	movff	pow@y+1,___fleq@ff1+1
  4757  0000B0  C0D2  F01F         	movff	pow@y+2,___fleq@ff1+2
  4758  0000B4  C0D3  F020         	movff	pow@y+3,___fleq@ff1+3
  4759  0000B8  0E00               	movlw	0
  4760  0000BA  6E21               	movwf	___fleq@ff2^0,c
  4761  0000BC  0E00               	movlw	0
  4762  0000BE  6E22               	movwf	(___fleq@ff2+1)^0,c
  4763  0000C0  0E00               	movlw	0
  4764  0000C2  6E23               	movwf	(___fleq@ff2+2)^0,c
  4765  0000C4  0E00               	movlw	0
  4766  0000C6  6E24               	movwf	(___fleq@ff2+3)^0,c
  4767  0000C8  EC3A  F035         	call	___fleq	;wreg free
  4768  0000CC  A0D8               	btfss	status,0,c
  4769  0000CE  EF6B  F000         	goto	u4821
  4770  0000D2  EF6E  F000         	goto	u4820
  4771  0000D6                     u4821:
  4772  0000D6  FFFF               	dw	65535	; assembler added errata NOP
  4773  0000D8  EF7A  F000         	goto	l4917
  4774  0000DC                     u4820:
  4775  0000DC  FFFF               	dw	65535	; assembler added errata NOP
  4776  0000DE  0E00               	movlw	0
  4777  0000E0  0100               	movlb	0	; () banked
  4778  0000E2  6FCC               	movwf	?_pow& (0+255),b
  4779  0000E4  0E00               	movlw	0
  4780  0000E6  6FCD               	movwf	(?_pow+1)& (0+255),b
  4781  0000E8  0E80               	movlw	128
  4782  0000EA  6FCE               	movwf	(?_pow+2)& (0+255),b
  4783  0000EC  0E3F               	movlw	63
  4784  0000EE  6FCF               	movwf	(?_pow+3)& (0+255),b
  4785  0000F0  EF4A  F001         	goto	l1017
  4786  0000F4                     l4917:
  4787  0000F4  FFFF               	dw	65535	; assembler added errata NOP
  4788  0000F6  0100               	movlb	0	; () banked
  4789  0000F8  BFCF               	btfsc	(pow@x+3)& (0+255),7,b
  4790  0000FA  EF84  F000         	goto	u4830
  4791  0000FE  EF81  F000         	goto	u4831
  4792  000102                     u4831:
  4793  000102  FFFF               	dw	65535	; assembler added errata NOP
  4794  000104  EFE3  F000         	goto	l4929
  4795  000108                     u4830:
  4796  000108  FFFF               	dw	65535	; assembler added errata NOP
  4797  00010A                     
  4798                           ; BSR set to: 0
  4799  00010A  C0D0  F053         	movff	pow@y,___fltol@f1
  4800  00010E  C0D1  F054         	movff	pow@y+1,___fltol@f1+1
  4801  000112  C0D2  F055         	movff	pow@y+2,___fltol@f1+2
  4802  000116  C0D3  F056         	movff	pow@y+3,___fltol@f1+3
  4803  00011A  EC0D  F038         	call	___fltol	;wreg free
  4804  00011E  C053  F0DD         	movff	?___fltol,pow@yi
  4805  000122  C054  F0DE         	movff	?___fltol+1,pow@yi+1
  4806  000126  C055  F0DF         	movff	?___fltol+2,pow@yi+2
  4807  00012A  C056  F0E0         	movff	?___fltol+3,pow@yi+3
  4808  00012E  C0DD  F00F         	movff	pow@yi,___xxtofl@val
  4809  000132  C0DE  F010         	movff	pow@yi+1,___xxtofl@val+1
  4810  000136  C0DF  F011         	movff	pow@yi+2,___xxtofl@val+2
  4811  00013A  C0E0  F012         	movff	pow@yi+3,___xxtofl@val+3
  4812  00013E  0E00               	movlw	0
  4813  000140  EC60  F03C         	call	___xxtofl
  4814  000144  C00F  F01D         	movff	?___xxtofl,___fleq@ff1
  4815  000148  C010  F01E         	movff	?___xxtofl+1,___fleq@ff1+1
  4816  00014C  C011  F01F         	movff	?___xxtofl+2,___fleq@ff1+2
  4817  000150  C012  F020         	movff	?___xxtofl+3,___fleq@ff1+3
  4818  000154  C0D0  F021         	movff	pow@y,___fleq@ff2
  4819  000158  C0D1  F022         	movff	pow@y+1,___fleq@ff2+1
  4820  00015C  C0D2  F023         	movff	pow@y+2,___fleq@ff2+2
  4821  000160  C0D3  F024         	movff	pow@y+3,___fleq@ff2+3
  4822  000164  EC3A  F035         	call	___fleq	;wreg free
  4823  000168  B0D8               	btfsc	status,0,c
  4824  00016A  EFB9  F000         	goto	u4841
  4825  00016E  EFBC  F000         	goto	u4840
  4826  000172                     u4841:
  4827  000172  FFFF               	dw	65535	; assembler added errata NOP
  4828  000174  EFCC  F000         	goto	l4925
  4829  000178                     u4840:
  4830  000178  FFFF               	dw	65535	; assembler added errata NOP
  4831  00017A  0E00               	movlw	0
  4832  00017C  0100               	movlb	0	; () banked
  4833  00017E  6FB1               	movwf	(_errno+1)& (0+255),b
  4834  000180  0E21               	movlw	33
  4835  000182  6FB0               	movwf	_errno& (0+255),b
  4836  000184  0E00               	movlw	0
  4837  000186  6FCC               	movwf	?_pow& (0+255),b
  4838  000188  0E00               	movlw	0
  4839  00018A  6FCD               	movwf	(?_pow+1)& (0+255),b
  4840  00018C  0E00               	movlw	0
  4841  00018E  6FCE               	movwf	(?_pow+2)& (0+255),b
  4842  000190  0E00               	movlw	0
  4843  000192  6FCF               	movwf	(?_pow+3)& (0+255),b
  4844  000194  EF4A  F001         	goto	l1017
  4845  000198                     l4925:
  4846  000198  FFFF               	dw	65535	; assembler added errata NOP
  4847  00019A  0100               	movlb	0	; () banked
  4848  00019C  51DD               	movf	pow@yi& (0+255),w,b
  4849  00019E  0B01               	andlw	1
  4850  0001A0  6FDC               	movwf	pow@sign& (0+255),b
  4851  0001A2                     
  4852                           ; BSR set to: 0
  4853  0001A2  C0CC  F001         	movff	pow@x,___flneg@f1
  4854  0001A6  C0CD  F002         	movff	pow@x+1,___flneg@f1+1
  4855  0001AA  C0CE  F003         	movff	pow@x+2,___flneg@f1+2
  4856  0001AE  C0CF  F004         	movff	pow@x+3,___flneg@f1+3
  4857  0001B2  EC29  F033         	call	___flneg	;wreg free
  4858  0001B6  C001  F0CC         	movff	?___flneg,pow@x
  4859  0001BA  C002  F0CD         	movff	?___flneg+1,pow@x+1
  4860  0001BE  C003  F0CE         	movff	?___flneg+2,pow@x+2
  4861  0001C2  C004  F0CF         	movff	?___flneg+3,pow@x+3
  4862  0001C6                     l4929:
  4863  0001C6  FFFF               	dw	65535	; assembler added errata NOP
  4864  0001C8  C0CC  F077         	movff	pow@x,log@x
  4865  0001CC  C0CD  F078         	movff	pow@x+1,log@x+1
  4866  0001D0  C0CE  F079         	movff	pow@x+2,log@x+2
  4867  0001D4  C0CF  F07A         	movff	pow@x+3,log@x+3
  4868  0001D8  EC89  F03B         	call	_log	;wreg free
  4869  0001DC  C077  F0D4         	movff	?_log,_pow$982
  4870  0001E0  C078  F0D5         	movff	?_log+1,_pow$982+1
  4871  0001E4  C079  F0D6         	movff	?_log+2,_pow$982+2
  4872  0001E8  C07A  F0D7         	movff	?_log+3,_pow$982+3
  4873  0001EC  C0D4  F031         	movff	_pow$982,___flmul@b
  4874  0001F0  C0D5  F032         	movff	_pow$982+1,___flmul@b+1
  4875  0001F4  C0D6  F033         	movff	_pow$982+2,___flmul@b+2
  4876  0001F8  C0D7  F034         	movff	_pow$982+3,___flmul@b+3
  4877  0001FC  C0D0  F035         	movff	pow@y,___flmul@a
  4878  000200  C0D1  F036         	movff	pow@y+1,___flmul@a+1
  4879  000204  C0D2  F037         	movff	pow@y+2,___flmul@a+2
  4880  000208  C0D3  F038         	movff	pow@y+3,___flmul@a+3
  4881  00020C  EC66  F009         	call	___flmul	;wreg free
  4882  000210  C031  F0D8         	movff	?___flmul,_pow$983
  4883  000214  C032  F0D9         	movff	?___flmul+1,_pow$983+1
  4884  000218  C033  F0DA         	movff	?___flmul+2,_pow$983+2
  4885  00021C  C034  F0DB         	movff	?___flmul+3,_pow$983+3
  4886  000220  C0D8  F0C1         	movff	_pow$983,exp@x
  4887  000224  C0D9  F0C2         	movff	_pow$983+1,exp@x+1
  4888  000228  C0DA  F0C3         	movff	_pow$983+2,exp@x+2
  4889  00022C  C0DB  F0C4         	movff	_pow$983+3,exp@x+3
  4890  000230  EC4D  F001         	call	_exp	;wreg free
  4891  000234  C0C1  F0CC         	movff	?_exp,pow@x
  4892  000238  C0C2  F0CD         	movff	?_exp+1,pow@x+1
  4893  00023C  C0C3  F0CE         	movff	?_exp+2,pow@x+2
  4894  000240  C0C4  F0CF         	movff	?_exp+3,pow@x+3
  4895  000244  0100               	movlb	0	; () banked
  4896  000246  51DC               	movf	pow@sign& (0+255),w,b
  4897  000248  B4D8               	btfsc	status,2,c
  4898  00024A  EF29  F001         	goto	u4851
  4899  00024E  EF2C  F001         	goto	u4850
  4900  000252                     u4851:
  4901  000252  FFFF               	dw	65535	; assembler added errata NOP
  4902  000254  EF41  F001         	goto	l1021
  4903  000258                     u4850:
  4904  000258  FFFF               	dw	65535	; assembler added errata NOP
  4905  00025A                     
  4906                           ; BSR set to: 0
  4907  00025A  C0CC  F001         	movff	pow@x,___flneg@f1
  4908  00025E  C0CD  F002         	movff	pow@x+1,___flneg@f1+1
  4909  000262  C0CE  F003         	movff	pow@x+2,___flneg@f1+2
  4910  000266  C0CF  F004         	movff	pow@x+3,___flneg@f1+3
  4911  00026A  EC29  F033         	call	___flneg	;wreg free
  4912  00026E  C001  F0CC         	movff	?___flneg,?_pow
  4913  000272  C002  F0CD         	movff	?___flneg+1,?_pow+1
  4914  000276  C003  F0CE         	movff	?___flneg+2,?_pow+2
  4915  00027A  C004  F0CF         	movff	?___flneg+3,?_pow+3
  4916  00027E  EF4A  F001         	goto	l1017
  4917  000282                     l1021:
  4918  000282  FFFF               	dw	65535	; assembler added errata NOP
  4919                           
  4920                           ; BSR set to: 0
  4921  000284  C0CC  F0CC         	movff	pow@x,?_pow
  4922  000288  C0CD  F0CD         	movff	pow@x+1,?_pow+1
  4923  00028C  C0CE  F0CE         	movff	pow@x+2,?_pow+2
  4924  000290  C0CF  F0CF         	movff	pow@x+3,?_pow+3
  4925  000294                     l1017:
  4926  000294  FFFF               	dw	65535	; assembler added errata NOP
  4927  000296  0012               	return		;funcret
  4928  000298  FFFF               	dw	65535	; errata NOP
  4929  00029A                     __end_of_pow:
  4930                           	opt callstack 0
  4931                           
  4932 ;; *************** function _log *****************
  4933 ;; Defined at:
  4934 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\log.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  x               4  118[COMRAM] unsigned char 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;  exponent        2  122[COMRAM] int 
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  4  118[COMRAM] int 
  4941 ;; Registers used:
  4942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4948 ;;      Params:         4       0       0       0       0       0       0
  4949 ;;      Locals:         2       0       0       0       0       0       0
  4950 ;;      Temps:          0       0       0       0       0       0       0
  4951 ;;      Totals:         6       0       0       0       0       0       0
  4952 ;;Total ram usage:        6 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; Hardware stack levels required when called:    2
  4955 ;; This function calls:
  4956 ;;		___fladd
  4957 ;;		___fleq
  4958 ;;		___flmul
  4959 ;;		___xxtofl
  4960 ;;		_eval_poly
  4961 ;;		_frexp
  4962 ;; This function is called by:
  4963 ;;		_pow
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           	psect	text2
  4968  007712                     __ptext2:
  4969                           	opt callstack 0
  4970  007712                     _log:
  4971                           	opt callstack 0
  4972  007712  FFFF               	dw	65535	; assembler added errata NOP
  4973  007714  BE7A               	btfsc	(log@x+3)^0,7,c
  4974  007716  EF92  F03B         	goto	u4700
  4975  00771A  EF8F  F03B         	goto	u4701
  4976  00771E                     u4701:
  4977  00771E  FFFF               	dw	65535	; assembler added errata NOP
  4978  007720  EFA2  F03B         	goto	l4797
  4979  007724                     u4700:
  4980  007724  FFFF               	dw	65535	; assembler added errata NOP
  4981  007726  0E00               	movlw	0
  4982  007728  0100               	movlb	0	; () banked
  4983  00772A  6FB1               	movwf	(_errno+1)& (0+255),b
  4984  00772C  0E21               	movlw	33
  4985  00772E  6FB0               	movwf	_errno& (0+255),b
  4986  007730  0E00               	movlw	0
  4987  007732  6E77               	movwf	?_log^0,c
  4988  007734  0E00               	movlw	0
  4989  007736  6E78               	movwf	(?_log+1)^0,c
  4990  007738  0E00               	movlw	0
  4991  00773A  6E79               	movwf	(?_log+2)^0,c
  4992  00773C  0E00               	movlw	0
  4993  00773E  6E7A               	movwf	(?_log+3)^0,c
  4994  007740  EF5D  F03C         	goto	l1083
  4995  007744                     l4797:
  4996  007744  FFFF               	dw	65535	; assembler added errata NOP
  4997  007746  C077  F01D         	movff	log@x,___fleq@ff1
  4998  00774A  C078  F01E         	movff	log@x+1,___fleq@ff1+1
  4999  00774E  C079  F01F         	movff	log@x+2,___fleq@ff1+2
  5000  007752  C07A  F020         	movff	log@x+3,___fleq@ff1+3
  5001  007756  0E00               	movlw	0
  5002  007758  6E21               	movwf	___fleq@ff2^0,c
  5003  00775A  0E00               	movlw	0
  5004  00775C  6E22               	movwf	(___fleq@ff2+1)^0,c
  5005  00775E  0E00               	movlw	0
  5006  007760  6E23               	movwf	(___fleq@ff2+2)^0,c
  5007  007762  0E00               	movlw	0
  5008  007764  6E24               	movwf	(___fleq@ff2+3)^0,c
  5009  007766  EC3A  F035         	call	___fleq	;wreg free
  5010  00776A  A0D8               	btfss	status,0,c
  5011  00776C  EFBA  F03B         	goto	u4711
  5012  007770  EFBD  F03B         	goto	u4710
  5013  007774                     u4711:
  5014  007774  FFFF               	dw	65535	; assembler added errata NOP
  5015  007776  EFCD  F03B         	goto	l4803
  5016  00777A                     u4710:
  5017  00777A  FFFF               	dw	65535	; assembler added errata NOP
  5018  00777C  0E00               	movlw	0
  5019  00777E  0100               	movlb	0	; () banked
  5020  007780  6FB1               	movwf	(_errno+1)& (0+255),b
  5021  007782  0E22               	movlw	34
  5022  007784  6FB0               	movwf	_errno& (0+255),b
  5023  007786  0E00               	movlw	0
  5024  007788  6E77               	movwf	?_log^0,c
  5025  00778A  0E00               	movlw	0
  5026  00778C  6E78               	movwf	(?_log+1)^0,c
  5027  00778E  0E00               	movlw	0
  5028  007790  6E79               	movwf	(?_log+2)^0,c
  5029  007792  0E00               	movlw	0
  5030  007794  6E7A               	movwf	(?_log+3)^0,c
  5031  007796  EF5D  F03C         	goto	l1083
  5032  00779A                     l4803:
  5033  00779A  FFFF               	dw	65535	; assembler added errata NOP
  5034  00779C  0E00               	movlw	0
  5035  00779E  6E35               	movwf	___flmul@a^0,c
  5036  0077A0  0E00               	movlw	0
  5037  0077A2  6E36               	movwf	(___flmul@a+1)^0,c
  5038  0077A4  0E00               	movlw	0
  5039  0077A6  6E37               	movwf	(___flmul@a+2)^0,c
  5040  0077A8  0E40               	movlw	64
  5041  0077AA  6E38               	movwf	(___flmul@a+3)^0,c
  5042  0077AC  0E7B               	movlw	low log@exponent
  5043  0077AE  6E2D               	movwf	frexp@eptr^0,c
  5044  0077B0  0E00               	movlw	high log@exponent
  5045  0077B2  6E2E               	movwf	(frexp@eptr+1)^0,c
  5046  0077B4  C077  F029         	movff	log@x,frexp@value
  5047  0077B8  C078  F02A         	movff	log@x+1,frexp@value+1
  5048  0077BC  C079  F02B         	movff	log@x+2,frexp@value+2
  5049  0077C0  C07A  F02C         	movff	log@x+3,frexp@value+3
  5050  0077C4  EC9B  F035         	call	_frexp	;wreg free
  5051  0077C8  C029  F031         	movff	?_frexp,___flmul@b
  5052  0077CC  C02A  F032         	movff	?_frexp+1,___flmul@b+1
  5053  0077D0  C02B  F033         	movff	?_frexp+2,___flmul@b+2
  5054  0077D4  C02C  F034         	movff	?_frexp+3,___flmul@b+3
  5055  0077D8  EC66  F009         	call	___flmul	;wreg free
  5056  0077DC  C031  F057         	movff	?___flmul,___fladd@b
  5057  0077E0  C032  F058         	movff	?___flmul+1,___fladd@b+1
  5058  0077E4  C033  F059         	movff	?___flmul+2,___fladd@b+2
  5059  0077E8  C034  F05A         	movff	?___flmul+3,___fladd@b+3
  5060  0077EC  0E00               	movlw	0
  5061  0077EE  6E5B               	movwf	___fladd@a^0,c
  5062  0077F0  0E00               	movlw	0
  5063  0077F2  6E5C               	movwf	(___fladd@a+1)^0,c
  5064  0077F4  0E80               	movlw	128
  5065  0077F6  6E5D               	movwf	(___fladd@a+2)^0,c
  5066  0077F8  0EBF               	movlw	191
  5067  0077FA  6E5E               	movwf	(___fladd@a+3)^0,c
  5068  0077FC  ECB8  F00B         	call	___fladd	;wreg free
  5069  007800  C057  F077         	movff	?___fladd,log@x
  5070  007804  C058  F078         	movff	?___fladd+1,log@x+1
  5071  007808  C059  F079         	movff	?___fladd+2,log@x+2
  5072  00780C  C05A  F07A         	movff	?___fladd+3,log@x+3
  5073  007810  067B               	decf	log@exponent^0,f,c
  5074  007812  A0D8               	btfss	status,0,c
  5075  007814  067C               	decf	(log@exponent+1)^0,f,c
  5076  007816  C077  F067         	movff	log@x,eval_poly@x
  5077  00781A  C078  F068         	movff	log@x+1,eval_poly@x+1
  5078  00781E  C079  F069         	movff	log@x+2,eval_poly@x+2
  5079  007822  C07A  F06A         	movff	log@x+3,eval_poly@x+3
  5080  007826  0E55               	movlw	low log@coeff
  5081  007828  6E6B               	movwf	eval_poly@d^0,c
  5082  00782A  0E7E               	movlw	high log@coeff
  5083  00782C  6E6C               	movwf	(eval_poly@d+1)^0,c
  5084  00782E  0E00               	movlw	0
  5085  007830  6E6E               	movwf	(eval_poly@n+1)^0,c
  5086  007832  0E08               	movlw	8
  5087  007834  6E6D               	movwf	eval_poly@n^0,c
  5088  007836  ECEC  F036         	call	_eval_poly	;wreg free
  5089  00783A  C067  F077         	movff	?_eval_poly,log@x
  5090  00783E  C068  F078         	movff	?_eval_poly+1,log@x+1
  5091  007842  C069  F079         	movff	?_eval_poly+2,log@x+2
  5092  007846  C06A  F07A         	movff	?_eval_poly+3,log@x+3
  5093  00784A  0E18               	movlw	24
  5094  00784C  6E35               	movwf	___flmul@a^0,c
  5095  00784E  0E72               	movlw	114
  5096  007850  6E36               	movwf	(___flmul@a+1)^0,c
  5097  007852  0E31               	movlw	49
  5098  007854  6E37               	movwf	(___flmul@a+2)^0,c
  5099  007856  0E3F               	movlw	63
  5100  007858  6E38               	movwf	(___flmul@a+3)^0,c
  5101  00785A  C07B  F00F         	movff	log@exponent,___xxtofl@val
  5102  00785E  C07C  F010         	movff	log@exponent+1,___xxtofl@val+1
  5103  007862  0E00               	movlw	0
  5104  007864  BE10               	btfsc	(___xxtofl@val+1)^0,7,c
  5105  007866  0EFF               	movlw	-1
  5106  007868  6E11               	movwf	(___xxtofl@val+2)^0,c
  5107  00786A  6E12               	movwf	(___xxtofl@val+3)^0,c
  5108  00786C  0E01               	movlw	1
  5109  00786E  EC60  F03C         	call	___xxtofl
  5110  007872  C00F  F031         	movff	?___xxtofl,___flmul@b
  5111  007876  C010  F032         	movff	?___xxtofl+1,___flmul@b+1
  5112  00787A  C011  F033         	movff	?___xxtofl+2,___flmul@b+2
  5113  00787E  C012  F034         	movff	?___xxtofl+3,___flmul@b+3
  5114  007882  EC66  F009         	call	___flmul	;wreg free
  5115  007886  C031  F057         	movff	?___flmul,___fladd@b
  5116  00788A  C032  F058         	movff	?___flmul+1,___fladd@b+1
  5117  00788E  C033  F059         	movff	?___flmul+2,___fladd@b+2
  5118  007892  C034  F05A         	movff	?___flmul+3,___fladd@b+3
  5119  007896  C077  F05B         	movff	log@x,___fladd@a
  5120  00789A  C078  F05C         	movff	log@x+1,___fladd@a+1
  5121  00789E  C079  F05D         	movff	log@x+2,___fladd@a+2
  5122  0078A2  C07A  F05E         	movff	log@x+3,___fladd@a+3
  5123  0078A6  ECB8  F00B         	call	___fladd	;wreg free
  5124  0078AA  C057  F077         	movff	?___fladd,?_log
  5125  0078AE  C058  F078         	movff	?___fladd+1,?_log+1
  5126  0078B2  C059  F079         	movff	?___fladd+2,?_log+2
  5127  0078B6  C05A  F07A         	movff	?___fladd+3,?_log+3
  5128  0078BA                     l1083:
  5129  0078BA  FFFF               	dw	65535	; assembler added errata NOP
  5130  0078BC  0012               	return		;funcret
  5131  0078BE  FFFF               	dw	65535	; errata NOP
  5132  0078C0                     __end_of_log:
  5133                           	opt callstack 0
  5134                           
  5135 ;; *************** function _exp *****************
  5136 ;; Defined at:
  5137 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\exp.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;  x               4    0[BANK0 ] int 
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;  exponent        2    8[BANK0 ] int 
  5142 ;;  sign            1   10[BANK0 ] unsigned char 
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  4    0[BANK0 ] unsigned char 
  5145 ;; Registers used:
  5146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5152 ;;      Params:         0       4       0       0       0       0       0
  5153 ;;      Locals:         0       7       0       0       0       0       0
  5154 ;;      Temps:          0       0       0       0       0       0       0
  5155 ;;      Totals:         0      11       0       0       0       0       0
  5156 ;;Total ram usage:       11 bytes
  5157 ;; Hardware stack levels used:    1
  5158 ;; Hardware stack levels required when called:    3
  5159 ;; This function calls:
  5160 ;;		___fldiv
  5161 ;;		___fleq
  5162 ;;		___flge
  5163 ;;		___flmul
  5164 ;;		___flneg
  5165 ;;		___flsub
  5166 ;;		___fltol
  5167 ;;		___xxtofl
  5168 ;;		_eval_poly
  5169 ;;		_floor
  5170 ;;		_ldexp
  5171 ;; This function is called by:
  5172 ;;		_pow
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           	psect	text3
  5177  00029A                     __ptext3:
  5178                           	opt callstack 0
  5179  00029A                     _exp:
  5180                           	opt callstack 0
  5181  00029A  FFFF               	dw	65535	; assembler added errata NOP
  5182  00029C  C0C1  F01D         	movff	exp@x,___fleq@ff1
  5183  0002A0  C0C2  F01E         	movff	exp@x+1,___fleq@ff1+1
  5184  0002A4  C0C3  F01F         	movff	exp@x+2,___fleq@ff1+2
  5185  0002A8  C0C4  F020         	movff	exp@x+3,___fleq@ff1+3
  5186  0002AC  0E00               	movlw	0
  5187  0002AE  6E21               	movwf	___fleq@ff2^0,c
  5188  0002B0  0E00               	movlw	0
  5189  0002B2  6E22               	movwf	(___fleq@ff2+1)^0,c
  5190  0002B4  0E00               	movlw	0
  5191  0002B6  6E23               	movwf	(___fleq@ff2+2)^0,c
  5192  0002B8  0E00               	movlw	0
  5193  0002BA  6E24               	movwf	(___fleq@ff2+3)^0,c
  5194  0002BC  EC3A  F035         	call	___fleq	;wreg free
  5195  0002C0  A0D8               	btfss	status,0,c
  5196  0002C2  EF65  F001         	goto	u4721
  5197  0002C6  EF68  F001         	goto	u4720
  5198  0002CA                     u4721:
  5199  0002CA  FFFF               	dw	65535	; assembler added errata NOP
  5200  0002CC  EF74  F001         	goto	l4819
  5201  0002D0                     u4720:
  5202  0002D0  FFFF               	dw	65535	; assembler added errata NOP
  5203  0002D2  0E00               	movlw	0
  5204  0002D4  0100               	movlb	0	; () banked
  5205  0002D6  6FC1               	movwf	?_exp& (0+255),b
  5206  0002D8  0E00               	movlw	0
  5207  0002DA  6FC2               	movwf	(?_exp+1)& (0+255),b
  5208  0002DC  0E80               	movlw	128
  5209  0002DE  6FC3               	movwf	(?_exp+2)& (0+255),b
  5210  0002E0  0E3F               	movlw	63
  5211  0002E2  6FC4               	movwf	(?_exp+3)& (0+255),b
  5212  0002E4  EFD5  F002         	goto	l1041
  5213  0002E8                     l4819:
  5214  0002E8  FFFF               	dw	65535	; assembler added errata NOP
  5215  0002EA  0E18               	movlw	24
  5216  0002EC  6E01               	movwf	___flge@ff1^0,c
  5217  0002EE  0E72               	movlw	114
  5218  0002F0  6E02               	movwf	(___flge@ff1+1)^0,c
  5219  0002F2  0E31               	movlw	49
  5220  0002F4  6E03               	movwf	(___flge@ff1+2)^0,c
  5221  0002F6  0E44               	movlw	68
  5222  0002F8  6E04               	movwf	(___flge@ff1+3)^0,c
  5223  0002FA  C0C1  F005         	movff	exp@x,___flge@ff2
  5224  0002FE  C0C2  F006         	movff	exp@x+1,___flge@ff2+1
  5225  000302  C0C3  F007         	movff	exp@x+2,___flge@ff2+2
  5226  000306  C0C4  F008         	movff	exp@x+3,___flge@ff2+3
  5227  00030A  EC79  F037         	call	___flge	;wreg free
  5228  00030E  B0D8               	btfsc	status,0,c
  5229  000310  EF8C  F001         	goto	u4731
  5230  000314  EF8F  F001         	goto	u4730
  5231  000318                     u4731:
  5232  000318  FFFF               	dw	65535	; assembler added errata NOP
  5233  00031A  EF9F  F001         	goto	l4825
  5234  00031E                     u4730:
  5235  00031E  FFFF               	dw	65535	; assembler added errata NOP
  5236  000320  0E00               	movlw	0
  5237  000322  0100               	movlb	0	; () banked
  5238  000324  6FB1               	movwf	(_errno+1)& (0+255),b
  5239  000326  0E22               	movlw	34
  5240  000328  6FB0               	movwf	_errno& (0+255),b
  5241  00032A  0EFF               	movlw	255
  5242  00032C  6FC1               	movwf	?_exp& (0+255),b
  5243  00032E  0EFF               	movlw	255
  5244  000330  6FC2               	movwf	(?_exp+1)& (0+255),b
  5245  000332  0E7F               	movlw	127
  5246  000334  6FC3               	movwf	(?_exp+2)& (0+255),b
  5247  000336  0E7F               	movlw	127
  5248  000338  6FC4               	movwf	(?_exp+3)& (0+255),b
  5249  00033A  EFD5  F002         	goto	l1041
  5250  00033E                     l4825:
  5251  00033E  FFFF               	dw	65535	; assembler added errata NOP
  5252  000340  C0C1  F001         	movff	exp@x,___flge@ff1
  5253  000344  C0C2  F002         	movff	exp@x+1,___flge@ff1+1
  5254  000348  C0C3  F003         	movff	exp@x+2,___flge@ff1+2
  5255  00034C  C0C4  F004         	movff	exp@x+3,___flge@ff1+3
  5256  000350  0E87               	movlw	135
  5257  000352  6E05               	movwf	___flge@ff2^0,c
  5258  000354  0E48               	movlw	72
  5259  000356  6E06               	movwf	(___flge@ff2+1)^0,c
  5260  000358  0E3A               	movlw	58
  5261  00035A  6E07               	movwf	(___flge@ff2+2)^0,c
  5262  00035C  0EC4               	movlw	196
  5263  00035E  6E08               	movwf	(___flge@ff2+3)^0,c
  5264  000360  EC79  F037         	call	___flge	;wreg free
  5265  000364  B0D8               	btfsc	status,0,c
  5266  000366  EFB7  F001         	goto	u4741
  5267  00036A  EFBA  F001         	goto	u4740
  5268  00036E                     u4741:
  5269  00036E  FFFF               	dw	65535	; assembler added errata NOP
  5270  000370  EFCA  F001         	goto	l4831
  5271  000374                     u4740:
  5272  000374  FFFF               	dw	65535	; assembler added errata NOP
  5273  000376  0E00               	movlw	0
  5274  000378  0100               	movlb	0	; () banked
  5275  00037A  6FB1               	movwf	(_errno+1)& (0+255),b
  5276  00037C  0E22               	movlw	34
  5277  00037E  6FB0               	movwf	_errno& (0+255),b
  5278  000380  0E00               	movlw	0
  5279  000382  6FC1               	movwf	?_exp& (0+255),b
  5280  000384  0E00               	movlw	0
  5281  000386  6FC2               	movwf	(?_exp+1)& (0+255),b
  5282  000388  0E00               	movlw	0
  5283  00038A  6FC3               	movwf	(?_exp+2)& (0+255),b
  5284  00038C  0E00               	movlw	0
  5285  00038E  6FC4               	movwf	(?_exp+3)& (0+255),b
  5286  000390  EFD5  F002         	goto	l1041
  5287  000394                     l4831:
  5288  000394  FFFF               	dw	65535	; assembler added errata NOP
  5289  000396  0100               	movlb	0	; () banked
  5290  000398  BFC4               	btfsc	(exp@x+3)& (0+255),7,b
  5291  00039A  EFD1  F001         	goto	u4751
  5292  00039E  EFD5  F001         	goto	u4750
  5293  0003A2                     u4751:
  5294  0003A2  FFFF               	dw	65535	; assembler added errata NOP
  5295  0003A4  0E01               	movlw	1
  5296  0003A6  EFD7  F001         	goto	u4760
  5297  0003AA                     u4750:
  5298  0003AA  FFFF               	dw	65535	; assembler added errata NOP
  5299  0003AC  0E00               	movlw	0
  5300  0003AE                     u4760:
  5301  0003AE  FFFF               	dw	65535	; assembler added errata NOP
  5302  0003B0  6FCB               	movwf	exp@sign& (0+255),b
  5303  0003B2                     
  5304                           ; BSR set to: 0
  5305  0003B2  51CB               	movf	exp@sign& (0+255),w,b
  5306  0003B4  B4D8               	btfsc	status,2,c
  5307  0003B6  EFDF  F001         	goto	u4771
  5308  0003BA  EFE2  F001         	goto	u4770
  5309  0003BE                     u4771:
  5310  0003BE  FFFF               	dw	65535	; assembler added errata NOP
  5311  0003C0  EFF5  F001         	goto	l4837
  5312  0003C4                     u4770:
  5313  0003C4  FFFF               	dw	65535	; assembler added errata NOP
  5314  0003C6                     
  5315                           ; BSR set to: 0
  5316  0003C6  C0C1  F001         	movff	exp@x,___flneg@f1
  5317  0003CA  C0C2  F002         	movff	exp@x+1,___flneg@f1+1
  5318  0003CE  C0C3  F003         	movff	exp@x+2,___flneg@f1+2
  5319  0003D2  C0C4  F004         	movff	exp@x+3,___flneg@f1+3
  5320  0003D6  EC29  F033         	call	___flneg	;wreg free
  5321  0003DA  C001  F0C1         	movff	?___flneg,exp@x
  5322  0003DE  C002  F0C2         	movff	?___flneg+1,exp@x+1
  5323  0003E2  C003  F0C3         	movff	?___flneg+2,exp@x+2
  5324  0003E6  C004  F0C4         	movff	?___flneg+3,exp@x+3
  5325  0003EA                     l4837:
  5326  0003EA  FFFF               	dw	65535	; assembler added errata NOP
  5327  0003EC  C0C1  F031         	movff	exp@x,___flmul@b
  5328  0003F0  C0C2  F032         	movff	exp@x+1,___flmul@b+1
  5329  0003F4  C0C3  F033         	movff	exp@x+2,___flmul@b+2
  5330  0003F8  C0C4  F034         	movff	exp@x+3,___flmul@b+3
  5331  0003FC  0E3B               	movlw	59
  5332  0003FE  6E35               	movwf	___flmul@a^0,c
  5333  000400  0EAA               	movlw	170
  5334  000402  6E36               	movwf	(___flmul@a+1)^0,c
  5335  000404  0EB8               	movlw	184
  5336  000406  6E37               	movwf	(___flmul@a+2)^0,c
  5337  000408  0E3F               	movlw	63
  5338  00040A  6E38               	movwf	(___flmul@a+3)^0,c
  5339  00040C  EC66  F009         	call	___flmul	;wreg free
  5340  000410  C031  F0C1         	movff	?___flmul,exp@x
  5341  000414  C032  F0C2         	movff	?___flmul+1,exp@x+1
  5342  000418  C033  F0C3         	movff	?___flmul+2,exp@x+2
  5343  00041C  C034  F0C4         	movff	?___flmul+3,exp@x+3
  5344  000420  C0C1  F067         	movff	exp@x,floor@x
  5345  000424  C0C2  F068         	movff	exp@x+1,floor@x+1
  5346  000428  C0C3  F069         	movff	exp@x+2,floor@x+2
  5347  00042C  C0C4  F06A         	movff	exp@x+3,floor@x+3
  5348  000430  EC55  F039         	call	_floor	;wreg free
  5349  000434  C067  F0C5         	movff	?_floor,_exp$984
  5350  000438  C068  F0C6         	movff	?_floor+1,_exp$984+1
  5351  00043C  C069  F0C7         	movff	?_floor+2,_exp$984+2
  5352  000440  C06A  F0C8         	movff	?_floor+3,_exp$984+3
  5353  000444  C0C5  F053         	movff	_exp$984,___fltol@f1
  5354  000448  C0C6  F054         	movff	_exp$984+1,___fltol@f1+1
  5355  00044C  C0C7  F055         	movff	_exp$984+2,___fltol@f1+2
  5356  000450  C0C8  F056         	movff	_exp$984+3,___fltol@f1+3
  5357  000454  EC0D  F038         	call	___fltol	;wreg free
  5358  000458  C053  F0C9         	movff	?___fltol,exp@exponent
  5359  00045C  C054  F0CA         	movff	?___fltol+1,exp@exponent+1
  5360  000460  C0C1  F067         	movff	exp@x,___flsub@b
  5361  000464  C0C2  F068         	movff	exp@x+1,___flsub@b+1
  5362  000468  C0C3  F069         	movff	exp@x+2,___flsub@b+2
  5363  00046C  C0C4  F06A         	movff	exp@x+3,___flsub@b+3
  5364  000470  C0C9  F00F         	movff	exp@exponent,___xxtofl@val
  5365  000474  C0CA  F010         	movff	exp@exponent+1,___xxtofl@val+1
  5366  000478  0E00               	movlw	0
  5367  00047A  BE10               	btfsc	(___xxtofl@val+1)^0,7,c
  5368  00047C  0EFF               	movlw	-1
  5369  00047E  6E11               	movwf	(___xxtofl@val+2)^0,c
  5370  000480  6E12               	movwf	(___xxtofl@val+3)^0,c
  5371  000482  0E01               	movlw	1
  5372  000484  EC60  F03C         	call	___xxtofl
  5373  000488  C00F  F06B         	movff	?___xxtofl,___flsub@a
  5374  00048C  C010  F06C         	movff	?___xxtofl+1,___flsub@a+1
  5375  000490  C011  F06D         	movff	?___xxtofl+2,___flsub@a+2
  5376  000494  C012  F06E         	movff	?___xxtofl+3,___flsub@a+3
  5377  000498  EC6B  F033         	call	___flsub	;wreg free
  5378  00049C  C067  F0C1         	movff	?___flsub,exp@x
  5379  0004A0  C068  F0C2         	movff	?___flsub+1,exp@x+1
  5380  0004A4  C069  F0C3         	movff	?___flsub+2,exp@x+2
  5381  0004A8  C06A  F0C4         	movff	?___flsub+3,exp@x+3
  5382  0004AC  C0C1  F067         	movff	exp@x,eval_poly@x
  5383  0004B0  C0C2  F068         	movff	exp@x+1,eval_poly@x+1
  5384  0004B4  C0C3  F069         	movff	exp@x+2,eval_poly@x+2
  5385  0004B8  C0C4  F06A         	movff	exp@x+3,eval_poly@x+3
  5386  0004BC  0E05               	movlw	low exp@coeff
  5387  0004BE  6E6B               	movwf	eval_poly@d^0,c
  5388  0004C0  0E7E               	movlw	high exp@coeff
  5389  0004C2  6E6C               	movwf	(eval_poly@d+1)^0,c
  5390  0004C4  0E00               	movlw	0
  5391  0004C6  6E6E               	movwf	(eval_poly@n+1)^0,c
  5392  0004C8  0E09               	movlw	9
  5393  0004CA  6E6D               	movwf	eval_poly@n^0,c
  5394  0004CC  ECEC  F036         	call	_eval_poly	;wreg free
  5395  0004D0  C067  F077         	movff	?_eval_poly,ldexp@value
  5396  0004D4  C068  F078         	movff	?_eval_poly+1,ldexp@value+1
  5397  0004D8  C069  F079         	movff	?_eval_poly+2,ldexp@value+2
  5398  0004DC  C06A  F07A         	movff	?_eval_poly+3,ldexp@value+3
  5399  0004E0  C0C9  F07B         	movff	exp@exponent,ldexp@newexp
  5400  0004E4  C0CA  F07C         	movff	exp@exponent+1,ldexp@newexp+1
  5401  0004E8  ECA8  F038         	call	_ldexp	;wreg free
  5402  0004EC  C077  F0C1         	movff	?_ldexp,exp@x
  5403  0004F0  C078  F0C2         	movff	?_ldexp+1,exp@x+1
  5404  0004F4  C079  F0C3         	movff	?_ldexp+2,exp@x+2
  5405  0004F8  C07A  F0C4         	movff	?_ldexp+3,exp@x+3
  5406  0004FC  0100               	movlb	0	; () banked
  5407  0004FE  51CB               	movf	exp@sign& (0+255),w,b
  5408  000500  B4D8               	btfsc	status,2,c
  5409  000502  EF85  F002         	goto	u4781
  5410  000506  EF88  F002         	goto	u4780
  5411  00050A                     u4781:
  5412  00050A  FFFF               	dw	65535	; assembler added errata NOP
  5413  00050C  EFCC  F002         	goto	l1045
  5414  000510                     u4780:
  5415  000510  FFFF               	dw	65535	; assembler added errata NOP
  5416  000512                     
  5417                           ; BSR set to: 0
  5418  000512  C0C1  F01D         	movff	exp@x,___fleq@ff1
  5419  000516  C0C2  F01E         	movff	exp@x+1,___fleq@ff1+1
  5420  00051A  C0C3  F01F         	movff	exp@x+2,___fleq@ff1+2
  5421  00051E  C0C4  F020         	movff	exp@x+3,___fleq@ff1+3
  5422  000522  0EFF               	movlw	255
  5423  000524  6E21               	movwf	___fleq@ff2^0,c
  5424  000526  0EFF               	movlw	255
  5425  000528  6E22               	movwf	(___fleq@ff2+1)^0,c
  5426  00052A  0E7F               	movlw	127
  5427  00052C  6E23               	movwf	(___fleq@ff2+2)^0,c
  5428  00052E  0E7F               	movlw	127
  5429  000530  6E24               	movwf	(___fleq@ff2+3)^0,c
  5430  000532  EC3A  F035         	call	___fleq	;wreg free
  5431  000536  A0D8               	btfss	status,0,c
  5432  000538  EFA0  F002         	goto	u4791
  5433  00053C  EFA3  F002         	goto	u4790
  5434  000540                     u4791:
  5435  000540  FFFF               	dw	65535	; assembler added errata NOP
  5436  000542  EFAF  F002         	goto	l4855
  5437  000546                     u4790:
  5438  000546  FFFF               	dw	65535	; assembler added errata NOP
  5439  000548  0E00               	movlw	0
  5440  00054A  0100               	movlb	0	; () banked
  5441  00054C  6FC1               	movwf	?_exp& (0+255),b
  5442  00054E  0E00               	movlw	0
  5443  000550  6FC2               	movwf	(?_exp+1)& (0+255),b
  5444  000552  0E00               	movlw	0
  5445  000554  6FC3               	movwf	(?_exp+2)& (0+255),b
  5446  000556  0E00               	movlw	0
  5447  000558  6FC4               	movwf	(?_exp+3)& (0+255),b
  5448  00055A  EFD5  F002         	goto	l1041
  5449  00055E                     l4855:
  5450  00055E  FFFF               	dw	65535	; assembler added errata NOP
  5451  000560  0E00               	movlw	0
  5452  000562  6E01               	movwf	___fldiv@b^0,c
  5453  000564  0E00               	movlw	0
  5454  000566  6E02               	movwf	(___fldiv@b+1)^0,c
  5455  000568  0E80               	movlw	128
  5456  00056A  6E03               	movwf	(___fldiv@b+2)^0,c
  5457  00056C  0E3F               	movlw	63
  5458  00056E  6E04               	movwf	(___fldiv@b+3)^0,c
  5459  000570  C0C1  F005         	movff	exp@x,___fldiv@a
  5460  000574  C0C2  F006         	movff	exp@x+1,___fldiv@a+1
  5461  000578  C0C3  F007         	movff	exp@x+2,___fldiv@a+2
  5462  00057C  C0C4  F008         	movff	exp@x+3,___fldiv@a+3
  5463  000580  ECD8  F002         	call	___fldiv	;wreg free
  5464  000584  C001  F0C1         	movff	?___fldiv,?_exp
  5465  000588  C002  F0C2         	movff	?___fldiv+1,?_exp+1
  5466  00058C  C003  F0C3         	movff	?___fldiv+2,?_exp+2
  5467  000590  C004  F0C4         	movff	?___fldiv+3,?_exp+3
  5468  000594  EFD5  F002         	goto	l1041
  5469  000598                     l1045:
  5470  000598  FFFF               	dw	65535	; assembler added errata NOP
  5471                           
  5472                           ; BSR set to: 0
  5473  00059A  C0C1  F0C1         	movff	exp@x,?_exp
  5474  00059E  C0C2  F0C2         	movff	exp@x+1,?_exp+1
  5475  0005A2  C0C3  F0C3         	movff	exp@x+2,?_exp+2
  5476  0005A6  C0C4  F0C4         	movff	exp@x+3,?_exp+3
  5477  0005AA                     l1041:
  5478  0005AA  FFFF               	dw	65535	; assembler added errata NOP
  5479  0005AC  0012               	return		;funcret
  5480  0005AE  FFFF               	dw	65535	; errata NOP
  5481  0005B0                     __end_of_exp:
  5482                           	opt callstack 0
  5483                           
  5484 ;; *************** function _ldexp *****************
  5485 ;; Defined at:
  5486 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\frexp.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;  value           4  118[COMRAM] unsigned char 
  5489 ;;  newexp          2  122[COMRAM] int 
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;		None
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  4  118[COMRAM] int 
  5494 ;; Registers used:
  5495 ;;		wreg, status,2, status,0, cstack
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5501 ;;      Params:         6       0       0       0       0       0       0
  5502 ;;      Locals:         0       0       0       0       0       0       0
  5503 ;;      Temps:          2       0       0       0       0       0       0
  5504 ;;      Totals:         8       0       0       0       0       0       0
  5505 ;;Total ram usage:        8 bytes
  5506 ;; Hardware stack levels used:    1
  5507 ;; Hardware stack levels required when called:    1
  5508 ;; This function calls:
  5509 ;;		___fleq
  5510 ;; This function is called by:
  5511 ;;		_exp
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           	psect	text4
  5516  007150                     __ptext4:
  5517                           	opt callstack 0
  5518  007150                     _ldexp:
  5519                           	opt callstack 0
  5520  007150  FFFF               	dw	65535	; assembler added errata NOP
  5521  007152  C077  F01D         	movff	ldexp@value,___fleq@ff1
  5522  007156  C078  F01E         	movff	ldexp@value+1,___fleq@ff1+1
  5523  00715A  C079  F01F         	movff	ldexp@value+2,___fleq@ff1+2
  5524  00715E  C07A  F020         	movff	ldexp@value+3,___fleq@ff1+3
  5525  007162  0E00               	movlw	0
  5526  007164  6E21               	movwf	___fleq@ff2^0,c
  5527  007166  0E00               	movlw	0
  5528  007168  6E22               	movwf	(___fleq@ff2+1)^0,c
  5529  00716A  0E00               	movlw	0
  5530  00716C  6E23               	movwf	(___fleq@ff2+2)^0,c
  5531  00716E  0E00               	movlw	0
  5532  007170  6E24               	movwf	(___fleq@ff2+3)^0,c
  5533  007172  EC3A  F035         	call	___fleq	;wreg free
  5534  007176  A0D8               	btfss	status,0,c
  5535  007178  EFC0  F038         	goto	u4291
  5536  00717C  EFC3  F038         	goto	u4290
  5537  007180                     u4291:
  5538  007180  FFFF               	dw	65535	; assembler added errata NOP
  5539  007182  EFCE  F038         	goto	l4483
  5540  007186                     u4290:
  5541  007186  FFFF               	dw	65535	; assembler added errata NOP
  5542  007188  0E00               	movlw	0
  5543  00718A  6E77               	movwf	?_ldexp^0,c
  5544  00718C  0E00               	movlw	0
  5545  00718E  6E78               	movwf	(?_ldexp+1)^0,c
  5546  007190  0E00               	movlw	0
  5547  007192  6E79               	movwf	(?_ldexp+2)^0,c
  5548  007194  0E00               	movlw	0
  5549  007196  6E7A               	movwf	(?_ldexp+3)^0,c
  5550  007198  EF52  F039         	goto	l1065
  5551  00719C                     l4483:
  5552  00719C  FFFF               	dw	65535	; assembler added errata NOP
  5553  00719E  507A               	movf	(ldexp@value+3)^0,w,c
  5554  0071A0  0B7F               	andlw	127
  5555  0071A2  6E7D               	movwf	??_ldexp^0,c
  5556  0071A4  6A7E               	clrf	(??_ldexp+1)^0,c
  5557  0071A6  90D8               	bcf	status,0,c
  5558  0071A8  367D               	rlcf	??_ldexp^0,f,c
  5559  0071AA  367E               	rlcf	(??_ldexp+1)^0,f,c
  5560  0071AC  507D               	movf	??_ldexp^0,w,c
  5561  0071AE  267B               	addwf	ldexp@newexp^0,f,c
  5562  0071B0  507E               	movf	(??_ldexp+1)^0,w,c
  5563  0071B2  227C               	addwfc	(ldexp@newexp+1)^0,f,c
  5564  0071B4  BE79               	btfsc	(ldexp@value+2)^0,7,c
  5565  0071B6  EFDF  F038         	goto	u4301
  5566  0071BA  EFE4  F038         	goto	u4300
  5567  0071BE                     u4301:
  5568  0071BE  FFFF               	dw	65535	; assembler added errata NOP
  5569  0071C0  6A7D               	clrf	??_ldexp^0,c
  5570  0071C2  2A7D               	incf	??_ldexp^0,f,c
  5571  0071C4  EFE6  F038         	goto	u4308
  5572  0071C8                     u4300:
  5573  0071C8  FFFF               	dw	65535	; assembler added errata NOP
  5574  0071CA  6A7D               	clrf	??_ldexp^0,c
  5575  0071CC                     u4308:
  5576  0071CC  FFFF               	dw	65535	; assembler added errata NOP
  5577  0071CE  507D               	movf	??_ldexp^0,w,c
  5578  0071D0  267B               	addwf	ldexp@newexp^0,f,c
  5579  0071D2  0E00               	movlw	0
  5580  0071D4  227C               	addwfc	(ldexp@newexp+1)^0,f,c
  5581  0071D6  BE7C               	btfsc	(ldexp@newexp+1)^0,7,c
  5582  0071D8  EFF3  F038         	goto	u4310
  5583  0071DC  EFF0  F038         	goto	u4311
  5584  0071E0                     u4311:
  5585  0071E0  FFFF               	dw	65535	; assembler added errata NOP
  5586  0071E2  EF03  F039         	goto	l4491
  5587  0071E6                     u4310:
  5588  0071E6  FFFF               	dw	65535	; assembler added errata NOP
  5589  0071E8  0E00               	movlw	0
  5590  0071EA  0100               	movlb	0	; () banked
  5591  0071EC  6FB1               	movwf	(_errno+1)& (0+255),b
  5592  0071EE  0E22               	movlw	34
  5593  0071F0  6FB0               	movwf	_errno& (0+255),b
  5594  0071F2  0E00               	movlw	0
  5595  0071F4  6E77               	movwf	?_ldexp^0,c
  5596  0071F6  0E00               	movlw	0
  5597  0071F8  6E78               	movwf	(?_ldexp+1)^0,c
  5598  0071FA  0E00               	movlw	0
  5599  0071FC  6E79               	movwf	(?_ldexp+2)^0,c
  5600  0071FE  0E00               	movlw	0
  5601  007200  6E7A               	movwf	(?_ldexp+3)^0,c
  5602  007202  EF52  F039         	goto	l1065
  5603  007206                     l4491:
  5604  007206  FFFF               	dw	65535	; assembler added errata NOP
  5605  007208  BE7C               	btfsc	(ldexp@newexp+1)^0,7,c
  5606  00720A  EF0D  F039         	goto	u4321
  5607  00720E  047C               	decf	(ldexp@newexp+1)^0,w,c
  5608  007210  A0D8               	btfss	status,0,c
  5609  007212  EF0D  F039         	goto	u4321
  5610  007216  EF10  F039         	goto	u4320
  5611  00721A                     u4321:
  5612  00721A  FFFF               	dw	65535	; assembler added errata NOP
  5613  00721C  EF34  F039         	goto	l4507
  5614  007220                     u4320:
  5615  007220  FFFF               	dw	65535	; assembler added errata NOP
  5616  007222  0E00               	movlw	0
  5617  007224  0100               	movlb	0	; () banked
  5618  007226  6FB1               	movwf	(_errno+1)& (0+255),b
  5619  007228  0E22               	movlw	34
  5620  00722A  6FB0               	movwf	_errno& (0+255),b
  5621  00722C                     
  5622                           ; BSR set to: 0
  5623  00722C  BE7A               	btfsc	(ldexp@value+3)^0,7,c
  5624  00722E  EF1E  F039         	goto	u4330
  5625  007232  EF1B  F039         	goto	u4331
  5626  007236                     u4331:
  5627  007236  FFFF               	dw	65535	; assembler added errata NOP
  5628  007238  EF29  F039         	goto	l4503
  5629  00723C                     u4330:
  5630  00723C  FFFF               	dw	65535	; assembler added errata NOP
  5631  00723E                     
  5632                           ; BSR set to: 0
  5633  00723E  0EFF               	movlw	255
  5634  007240  6E77               	movwf	?_ldexp^0,c
  5635  007242  0EFF               	movlw	255
  5636  007244  6E78               	movwf	(?_ldexp+1)^0,c
  5637  007246  0E7F               	movlw	127
  5638  007248  6E79               	movwf	(?_ldexp+2)^0,c
  5639  00724A  0EFF               	movlw	255
  5640  00724C  6E7A               	movwf	(?_ldexp+3)^0,c
  5641  00724E  EF52  F039         	goto	l1065
  5642  007252                     l4503:
  5643  007252  FFFF               	dw	65535	; assembler added errata NOP
  5644                           
  5645                           ; BSR set to: 0
  5646  007254  0EFF               	movlw	255
  5647  007256  6E77               	movwf	?_ldexp^0,c
  5648  007258  0EFF               	movlw	255
  5649  00725A  6E78               	movwf	(?_ldexp+1)^0,c
  5650  00725C  0E7F               	movlw	127
  5651  00725E  6E79               	movwf	(?_ldexp+2)^0,c
  5652  007260  0E7F               	movlw	127
  5653  007262  6E7A               	movwf	(?_ldexp+3)^0,c
  5654  007264  EF52  F039         	goto	l1065
  5655  007268                     l4507:
  5656  007268  FFFF               	dw	65535	; assembler added errata NOP
  5657  00726A  347C               	rlcf	(ldexp@newexp+1)^0,w,c
  5658  00726C  307C               	rrcf	(ldexp@newexp+1)^0,w,c
  5659  00726E  6E7E               	movwf	(??_ldexp+1)^0,c
  5660  007270  307B               	rrcf	ldexp@newexp^0,w,c
  5661  007272  6E7D               	movwf	??_ldexp^0,c
  5662  007274  507A               	movf	(ldexp@value+3)^0,w,c
  5663  007276  187D               	xorwf	??_ldexp^0,w,c
  5664  007278  0B80               	andlw	-128
  5665  00727A  187D               	xorwf	??_ldexp^0,w,c
  5666  00727C  6E7A               	movwf	(ldexp@value+3)^0,c
  5667  00727E  C07B  F07D         	movff	ldexp@newexp,??_ldexp
  5668  007282  0E01               	movlw	1
  5669  007284  167D               	andwf	??_ldexp^0,f,c
  5670  007286  327D               	rrcf	??_ldexp^0,f,c
  5671  007288  327D               	rrcf	??_ldexp^0,f,c
  5672  00728A  5079               	movf	(ldexp@value+2)^0,w,c
  5673  00728C  187D               	xorwf	??_ldexp^0,w,c
  5674  00728E  0B7F               	andlw	-129
  5675  007290  187D               	xorwf	??_ldexp^0,w,c
  5676  007292  6E79               	movwf	(ldexp@value+2)^0,c
  5677  007294  C077  F077         	movff	ldexp@value,?_ldexp
  5678  007298  C078  F078         	movff	ldexp@value+1,?_ldexp+1
  5679  00729C  C079  F079         	movff	ldexp@value+2,?_ldexp+2
  5680  0072A0  C07A  F07A         	movff	ldexp@value+3,?_ldexp+3
  5681  0072A4                     l1065:
  5682  0072A4  FFFF               	dw	65535	; assembler added errata NOP
  5683  0072A6  0012               	return		;funcret
  5684  0072A8  FFFF               	dw	65535	; errata NOP
  5685  0072AA                     __end_of_ldexp:
  5686                           	opt callstack 0
  5687                           
  5688 ;; *************** function _floor *****************
  5689 ;; Defined at:
  5690 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\floor.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;  x               4  102[COMRAM] int 
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;  i               4  106[COMRAM] int 
  5695 ;;  expon           2  110[COMRAM] int 
  5696 ;; Return value:  Size  Location     Type
  5697 ;;                  4  102[COMRAM] int 
  5698 ;; Registers used:
  5699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5700 ;; Tracked objects:
  5701 ;;		On entry : 0/0
  5702 ;;		On exit  : 0/0
  5703 ;;		Unchanged: 0/0
  5704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5705 ;;      Params:         4       0       0       0       0       0       0
  5706 ;;      Locals:         6       0       0       0       0       0       0
  5707 ;;      Temps:          0       0       0       0       0       0       0
  5708 ;;      Totals:        10       0       0       0       0       0       0
  5709 ;;Total ram usage:       10 bytes
  5710 ;; Hardware stack levels used:    1
  5711 ;; Hardware stack levels required when called:    2
  5712 ;; This function calls:
  5713 ;;		___fladd
  5714 ;;		___flge
  5715 ;;		___fltol
  5716 ;;		___xxtofl
  5717 ;;		_frexp
  5718 ;; This function is called by:
  5719 ;;		_exp
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           
  5723                           	psect	text5
  5724  0072AA                     __ptext5:
  5725                           	opt callstack 0
  5726  0072AA                     _floor:
  5727                           	opt callstack 0
  5728  0072AA  FFFF               	dw	65535	; assembler added errata NOP
  5729  0072AC  C067  F029         	movff	floor@x,frexp@value
  5730  0072B0  C068  F02A         	movff	floor@x+1,frexp@value+1
  5731  0072B4  C069  F02B         	movff	floor@x+2,frexp@value+2
  5732  0072B8  C06A  F02C         	movff	floor@x+3,frexp@value+3
  5733  0072BC  0E6F               	movlw	low floor@expon
  5734  0072BE  6E2D               	movwf	frexp@eptr^0,c
  5735  0072C0  0E00               	movlw	high floor@expon
  5736  0072C2  6E2E               	movwf	(frexp@eptr+1)^0,c
  5737  0072C4  EC9B  F035         	call	_frexp	;wreg free
  5738  0072C8  BE70               	btfsc	(floor@expon+1)^0,7,c
  5739  0072CA  EF6C  F039         	goto	u4240
  5740  0072CE  EF69  F039         	goto	u4241
  5741  0072D2                     u4241:
  5742  0072D2  FFFF               	dw	65535	; assembler added errata NOP
  5743  0072D4  EF8B  F039         	goto	l4461
  5744  0072D8                     u4240:
  5745  0072D8  FFFF               	dw	65535	; assembler added errata NOP
  5746  0072DA  BE6A               	btfsc	(floor@x+3)^0,7,c
  5747  0072DC  EF75  F039         	goto	u4250
  5748  0072E0  EF72  F039         	goto	u4251
  5749  0072E4                     u4251:
  5750  0072E4  FFFF               	dw	65535	; assembler added errata NOP
  5751  0072E6  EF80  F039         	goto	l4457
  5752  0072EA                     u4250:
  5753  0072EA  FFFF               	dw	65535	; assembler added errata NOP
  5754  0072EC  0E00               	movlw	0
  5755  0072EE  6E67               	movwf	?_floor^0,c
  5756  0072F0  0E00               	movlw	0
  5757  0072F2  6E68               	movwf	(?_floor+1)^0,c
  5758  0072F4  0E80               	movlw	128
  5759  0072F6  6E69               	movwf	(?_floor+2)^0,c
  5760  0072F8  0EBF               	movlw	191
  5761  0072FA  6E6A               	movwf	(?_floor+3)^0,c
  5762  0072FC  EF01  F03A         	goto	l1053
  5763  007300                     l4457:
  5764  007300  FFFF               	dw	65535	; assembler added errata NOP
  5765  007302  0E00               	movlw	0
  5766  007304  6E67               	movwf	?_floor^0,c
  5767  007306  0E00               	movlw	0
  5768  007308  6E68               	movwf	(?_floor+1)^0,c
  5769  00730A  0E00               	movlw	0
  5770  00730C  6E69               	movwf	(?_floor+2)^0,c
  5771  00730E  0E00               	movlw	0
  5772  007310  6E6A               	movwf	(?_floor+3)^0,c
  5773  007312  EF01  F03A         	goto	l1053
  5774  007316                     l4461:
  5775  007316  FFFF               	dw	65535	; assembler added errata NOP
  5776  007318  5070               	movf	(floor@expon+1)^0,w,c
  5777  00731A  E10A               	bnz	u4260
  5778  00731C  0E1D               	movlw	29
  5779  00731E  5C6F               	subwf	floor@expon^0,w,c
  5780  007320  A0D8               	btfss	status,0,c
  5781  007322  EF95  F039         	goto	u4261
  5782  007326  EF98  F039         	goto	u4260
  5783  00732A                     u4261:
  5784  00732A  FFFF               	dw	65535	; assembler added errata NOP
  5785  00732C  EFA3  F039         	goto	l4465
  5786  007330                     u4260:
  5787  007330  FFFF               	dw	65535	; assembler added errata NOP
  5788  007332  C067  F067         	movff	floor@x,?_floor
  5789  007336  C068  F068         	movff	floor@x+1,?_floor+1
  5790  00733A  C069  F069         	movff	floor@x+2,?_floor+2
  5791  00733E  C06A  F06A         	movff	floor@x+3,?_floor+3
  5792  007342  EF01  F03A         	goto	l1053
  5793  007346                     l4465:
  5794  007346  FFFF               	dw	65535	; assembler added errata NOP
  5795  007348  C067  F053         	movff	floor@x,___fltol@f1
  5796  00734C  C068  F054         	movff	floor@x+1,___fltol@f1+1
  5797  007350  C069  F055         	movff	floor@x+2,___fltol@f1+2
  5798  007354  C06A  F056         	movff	floor@x+3,___fltol@f1+3
  5799  007358  EC0D  F038         	call	___fltol	;wreg free
  5800  00735C  C053  F00F         	movff	?___fltol,___xxtofl@val
  5801  007360  C054  F010         	movff	?___fltol+1,___xxtofl@val+1
  5802  007364  C055  F011         	movff	?___fltol+2,___xxtofl@val+2
  5803  007368  C056  F012         	movff	?___fltol+3,___xxtofl@val+3
  5804  00736C  0E01               	movlw	1
  5805  00736E  EC60  F03C         	call	___xxtofl
  5806  007372  C00F  F06B         	movff	?___xxtofl,floor@i
  5807  007376  C010  F06C         	movff	?___xxtofl+1,floor@i+1
  5808  00737A  C011  F06D         	movff	?___xxtofl+2,floor@i+2
  5809  00737E  C012  F06E         	movff	?___xxtofl+3,floor@i+3
  5810  007382  C067  F001         	movff	floor@x,___flge@ff1
  5811  007386  C068  F002         	movff	floor@x+1,___flge@ff1+1
  5812  00738A  C069  F003         	movff	floor@x+2,___flge@ff1+2
  5813  00738E  C06A  F004         	movff	floor@x+3,___flge@ff1+3
  5814  007392  C06B  F005         	movff	floor@i,___flge@ff2
  5815  007396  C06C  F006         	movff	floor@i+1,___flge@ff2+1
  5816  00739A  C06D  F007         	movff	floor@i+2,___flge@ff2+2
  5817  00739E  C06E  F008         	movff	floor@i+3,___flge@ff2+3
  5818  0073A2  EC79  F037         	call	___flge	;wreg free
  5819  0073A6  B0D8               	btfsc	status,0,c
  5820  0073A8  EFD8  F039         	goto	u4271
  5821  0073AC  EFDB  F039         	goto	u4270
  5822  0073B0                     u4271:
  5823  0073B0  FFFF               	dw	65535	; assembler added errata NOP
  5824  0073B2  EFF8  F039         	goto	l1055
  5825  0073B6                     u4270:
  5826  0073B6  FFFF               	dw	65535	; assembler added errata NOP
  5827  0073B8  C06B  F057         	movff	floor@i,___fladd@b
  5828  0073BC  C06C  F058         	movff	floor@i+1,___fladd@b+1
  5829  0073C0  C06D  F059         	movff	floor@i+2,___fladd@b+2
  5830  0073C4  C06E  F05A         	movff	floor@i+3,___fladd@b+3
  5831  0073C8  0E00               	movlw	0
  5832  0073CA  6E5B               	movwf	___fladd@a^0,c
  5833  0073CC  0E00               	movlw	0
  5834  0073CE  6E5C               	movwf	(___fladd@a+1)^0,c
  5835  0073D0  0E80               	movlw	128
  5836  0073D2  6E5D               	movwf	(___fladd@a+2)^0,c
  5837  0073D4  0EBF               	movlw	191
  5838  0073D6  6E5E               	movwf	(___fladd@a+3)^0,c
  5839  0073D8  ECB8  F00B         	call	___fladd	;wreg free
  5840  0073DC  C057  F067         	movff	?___fladd,?_floor
  5841  0073E0  C058  F068         	movff	?___fladd+1,?_floor+1
  5842  0073E4  C059  F069         	movff	?___fladd+2,?_floor+2
  5843  0073E8  C05A  F06A         	movff	?___fladd+3,?_floor+3
  5844  0073EC  EF01  F03A         	goto	l1053
  5845  0073F0                     l1055:
  5846  0073F0  FFFF               	dw	65535	; assembler added errata NOP
  5847  0073F2  C06B  F067         	movff	floor@i,?_floor
  5848  0073F6  C06C  F068         	movff	floor@i+1,?_floor+1
  5849  0073FA  C06D  F069         	movff	floor@i+2,?_floor+2
  5850  0073FE  C06E  F06A         	movff	floor@i+3,?_floor+3
  5851  007402                     l1053:
  5852  007402  FFFF               	dw	65535	; assembler added errata NOP
  5853  007404  0012               	return		;funcret
  5854  007406  FFFF               	dw	65535	; errata NOP
  5855  007408                     __end_of_floor:
  5856                           	opt callstack 0
  5857                           
  5858 ;; *************** function _frexp *****************
  5859 ;; Defined at:
  5860 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\frexp.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  value           4   40[COMRAM] int 
  5863 ;;  eptr            2   44[COMRAM] PTR int 
  5864 ;;		 -> log@exponent(2), floor@expon(2), 
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;		None
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  4   40[COMRAM] PTR int 
  5869 ;; Registers used:
  5870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5876 ;;      Params:         6       0       0       0       0       0       0
  5877 ;;      Locals:         0       0       0       0       0       0       0
  5878 ;;      Temps:          2       0       0       0       0       0       0
  5879 ;;      Totals:         8       0       0       0       0       0       0
  5880 ;;Total ram usage:        8 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; Hardware stack levels required when called:    1
  5883 ;; This function calls:
  5884 ;;		___fleq
  5885 ;; This function is called by:
  5886 ;;		_floor
  5887 ;;		_log
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           	psect	text6
  5892  006B36                     __ptext6:
  5893                           	opt callstack 0
  5894  006B36                     _frexp:
  5895                           	opt callstack 0
  5896  006B36  FFFF               	dw	65535	; assembler added errata NOP
  5897  006B38  C029  F01D         	movff	frexp@value,___fleq@ff1
  5898  006B3C  C02A  F01E         	movff	frexp@value+1,___fleq@ff1+1
  5899  006B40  C02B  F01F         	movff	frexp@value+2,___fleq@ff1+2
  5900  006B44  C02C  F020         	movff	frexp@value+3,___fleq@ff1+3
  5901  006B48  0E00               	movlw	0
  5902  006B4A  6E21               	movwf	___fleq@ff2^0,c
  5903  006B4C  0E00               	movlw	0
  5904  006B4E  6E22               	movwf	(___fleq@ff2+1)^0,c
  5905  006B50  0E00               	movlw	0
  5906  006B52  6E23               	movwf	(___fleq@ff2+2)^0,c
  5907  006B54  0E00               	movlw	0
  5908  006B56  6E24               	movwf	(___fleq@ff2+3)^0,c
  5909  006B58  EC3A  F035         	call	___fleq	;wreg free
  5910  006B5C  A0D8               	btfss	status,0,c
  5911  006B5E  EFB3  F035         	goto	u3671
  5912  006B62  EFB6  F035         	goto	u3670
  5913  006B66                     u3671:
  5914  006B66  FFFF               	dw	65535	; assembler added errata NOP
  5915  006B68  EFC9  F035         	goto	l4047
  5916  006B6C                     u3670:
  5917  006B6C  FFFF               	dw	65535	; assembler added errata NOP
  5918  006B6E  C02D  FFD9         	movff	frexp@eptr,fsr2l
  5919  006B72  C02E  FFDA         	movff	frexp@eptr+1,fsr2h
  5920  006B76  0E00               	movlw	0
  5921  006B78  6EDE               	movwf	postinc2,c
  5922  006B7A  0E00               	movlw	0
  5923  006B7C  6EDD               	movwf	postdec2,c
  5924  006B7E  0E00               	movlw	0
  5925  006B80  6E29               	movwf	?_frexp^0,c
  5926  006B82  0E00               	movlw	0
  5927  006B84  6E2A               	movwf	(?_frexp+1)^0,c
  5928  006B86  0E00               	movlw	0
  5929  006B88  6E2B               	movwf	(?_frexp+2)^0,c
  5930  006B8A  0E00               	movlw	0
  5931  006B8C  6E2C               	movwf	(?_frexp+3)^0,c
  5932  006B8E  EF03  F036         	goto	l1061
  5933  006B92                     l4047:
  5934  006B92  FFFF               	dw	65535	; assembler added errata NOP
  5935  006B94  502C               	movf	(frexp@value+3)^0,w,c
  5936  006B96  0B7F               	andlw	127
  5937  006B98  6E2F               	movwf	??_frexp^0,c
  5938  006B9A  6A30               	clrf	(??_frexp+1)^0,c
  5939  006B9C  90D8               	bcf	status,0,c
  5940  006B9E  362F               	rlcf	??_frexp^0,f,c
  5941  006BA0  3630               	rlcf	(??_frexp+1)^0,f,c
  5942  006BA2  C02D  FFD9         	movff	frexp@eptr,fsr2l
  5943  006BA6  C02E  FFDA         	movff	frexp@eptr+1,fsr2h
  5944  006BAA  C02F  FFDE         	movff	??_frexp,postinc2
  5945  006BAE  C030  FFDD         	movff	??_frexp+1,postdec2
  5946  006BB2  BE2B               	btfsc	(frexp@value+2)^0,7,c
  5947  006BB4  EFDE  F035         	goto	u3681
  5948  006BB8  EFE3  F035         	goto	u3680
  5949  006BBC                     u3681:
  5950  006BBC  FFFF               	dw	65535	; assembler added errata NOP
  5951  006BBE  6A2F               	clrf	??_frexp^0,c
  5952  006BC0  2A2F               	incf	??_frexp^0,f,c
  5953  006BC2  EFE5  F035         	goto	u3688
  5954  006BC6                     u3680:
  5955  006BC6  FFFF               	dw	65535	; assembler added errata NOP
  5956  006BC8  6A2F               	clrf	??_frexp^0,c
  5957  006BCA                     u3688:
  5958  006BCA  FFFF               	dw	65535	; assembler added errata NOP
  5959  006BCC  502F               	movf	??_frexp^0,w,c
  5960  006BCE  C02D  FFD9         	movff	frexp@eptr,fsr2l
  5961  006BD2  C02E  FFDA         	movff	frexp@eptr+1,fsr2h
  5962  006BD6  12DE               	iorwf	postinc2,f,c
  5963  006BD8  0E00               	movlw	0
  5964  006BDA  12DD               	iorwf	postdec2,f,c
  5965  006BDC  C02D  FFD9         	movff	frexp@eptr,fsr2l
  5966  006BE0  C02E  FFDA         	movff	frexp@eptr+1,fsr2h
  5967  006BE4  0E82               	movlw	130
  5968  006BE6  26DE               	addwf	postinc2,f,c
  5969  006BE8  0EFF               	movlw	255
  5970  006BEA  22DD               	addwfc	postdec2,f,c
  5971  006BEC  502C               	movf	(frexp@value+3)^0,w,c
  5972  006BEE  0B80               	andlw	-128
  5973  006BF0  093F               	iorlw	63
  5974  006BF2  6E2C               	movwf	(frexp@value+3)^0,c
  5975  006BF4  9E2B               	bcf	(frexp@value+2)^0,7,c
  5976  006BF6  C029  F029         	movff	frexp@value,?_frexp
  5977  006BFA  C02A  F02A         	movff	frexp@value+1,?_frexp+1
  5978  006BFE  C02B  F02B         	movff	frexp@value+2,?_frexp+2
  5979  006C02  C02C  F02C         	movff	frexp@value+3,?_frexp+3
  5980  006C06                     l1061:
  5981  006C06  FFFF               	dw	65535	; assembler added errata NOP
  5982  006C08  0012               	return		;funcret
  5983  006C0A  FFFF               	dw	65535	; errata NOP
  5984  006C0C                     __end_of_frexp:
  5985                           	opt callstack 0
  5986                           
  5987 ;; *************** function _eval_poly *****************
  5988 ;; Defined at:
  5989 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\evalpoly.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;  x               4  102[COMRAM] PTR int 
  5992 ;;  d               2  106[COMRAM] PTR const 
  5993 ;;		 -> log@coeff(36), exp@coeff(40), 
  5994 ;;  n               2  108[COMRAM] int 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;  res             4  114[COMRAM] int 
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  4  102[COMRAM] int 
  5999 ;; Registers used:
  6000 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6006 ;;      Params:         8       0       0       0       0       0       0
  6007 ;;      Locals:         4       0       0       0       0       0       0
  6008 ;;      Temps:          4       0       0       0       0       0       0
  6009 ;;      Totals:        16       0       0       0       0       0       0
  6010 ;;Total ram usage:       16 bytes
  6011 ;; Hardware stack levels used:    1
  6012 ;; Hardware stack levels required when called:    1
  6013 ;; This function calls:
  6014 ;;		___fladd
  6015 ;;		___flmul
  6016 ;; This function is called by:
  6017 ;;		_exp
  6018 ;;		_log
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           
  6022                           	psect	text7
  6023  006DD8                     __ptext7:
  6024                           	opt callstack 0
  6025  006DD8                     _eval_poly:
  6026                           	opt callstack 0
  6027  006DD8  FFFF               	dw	65535	; assembler added errata NOP
  6028  006DDA  C06D  F06F         	movff	eval_poly@n,??_eval_poly
  6029  006DDE  C06E  F070         	movff	eval_poly@n+1,??_eval_poly+1
  6030  006DE2  90D8               	bcf	status,0,c
  6031  006DE4  366F               	rlcf	??_eval_poly^0,f,c
  6032  006DE6  3670               	rlcf	(??_eval_poly+1)^0,f,c
  6033  006DE8  90D8               	bcf	status,0,c
  6034  006DEA  366F               	rlcf	??_eval_poly^0,f,c
  6035  006DEC  3670               	rlcf	(??_eval_poly+1)^0,f,c
  6036  006DEE  C06B  F071         	movff	eval_poly@d,??_eval_poly+2
  6037  006DF2  C06C  F072         	movff	eval_poly@d+1,??_eval_poly+3
  6038  006DF6  506F               	movf	??_eval_poly^0,w,c
  6039  006DF8  2671               	addwf	(??_eval_poly+2)^0,f,c
  6040  006DFA  5070               	movf	(??_eval_poly+1)^0,w,c
  6041  006DFC  2272               	addwfc	(??_eval_poly+3)^0,f,c
  6042  006DFE  C071  FFF6         	movff	??_eval_poly+2,tblptrl
  6043  006E02  C072  FFF7         	movff	??_eval_poly+3,tblptrh
  6044  006E06                     	if	0	;tblptru may be non-zero
  6045  006E06                     	endif
  6046  006E06                     	if	0	;tblptru may be non-zero
  6047  006E06                     	endif
  6048  006E06  0009               	tblrd		*+
  6049  006E08  FFFF               	dw	65535	; errata NOP
  6050  006E0A  CFF5 F073          	movff	tablat,eval_poly@res
  6051  006E0E  0009               	tblrd		*+
  6052  006E10  FFFF               	dw	65535	; errata NOP
  6053  006E12  CFF5 F074          	movff	tablat,eval_poly@res+1
  6054  006E16  0009               	tblrd		*+
  6055  006E18  FFFF               	dw	65535	; errata NOP
  6056  006E1A  CFF5 F075          	movff	tablat,eval_poly@res+2
  6057  006E1E  000A               	tblrd		*-
  6058  006E20  FFFF               	dw	65535	; errata NOP
  6059  006E22  CFF5 F076          	movff	tablat,eval_poly@res+3
  6060  006E26  EF63  F037         	goto	l4475
  6061  006E2A                     l4473:
  6062  006E2A  FFFF               	dw	65535	; assembler added errata NOP
  6063  006E2C  C073  F035         	movff	eval_poly@res,___flmul@a
  6064  006E30  C074  F036         	movff	eval_poly@res+1,___flmul@a+1
  6065  006E34  C075  F037         	movff	eval_poly@res+2,___flmul@a+2
  6066  006E38  C076  F038         	movff	eval_poly@res+3,___flmul@a+3
  6067  006E3C  C067  F031         	movff	eval_poly@x,___flmul@b
  6068  006E40  C068  F032         	movff	eval_poly@x+1,___flmul@b+1
  6069  006E44  C069  F033         	movff	eval_poly@x+2,___flmul@b+2
  6070  006E48  C06A  F034         	movff	eval_poly@x+3,___flmul@b+3
  6071  006E4C  EC66  F009         	call	___flmul	;wreg free
  6072  006E50  C031  F057         	movff	?___flmul,___fladd@b
  6073  006E54  C032  F058         	movff	?___flmul+1,___fladd@b+1
  6074  006E58  C033  F059         	movff	?___flmul+2,___fladd@b+2
  6075  006E5C  C034  F05A         	movff	?___flmul+3,___fladd@b+3
  6076  006E60  066D               	decf	eval_poly@n^0,f,c
  6077  006E62  A0D8               	btfss	status,0,c
  6078  006E64  066E               	decf	(eval_poly@n+1)^0,f,c
  6079  006E66  C06D  F06F         	movff	eval_poly@n,??_eval_poly
  6080  006E6A  C06E  F070         	movff	eval_poly@n+1,??_eval_poly+1
  6081  006E6E  90D8               	bcf	status,0,c
  6082  006E70  366F               	rlcf	??_eval_poly^0,f,c
  6083  006E72  3670               	rlcf	(??_eval_poly+1)^0,f,c
  6084  006E74  90D8               	bcf	status,0,c
  6085  006E76  366F               	rlcf	??_eval_poly^0,f,c
  6086  006E78  3670               	rlcf	(??_eval_poly+1)^0,f,c
  6087  006E7A  C06B  F071         	movff	eval_poly@d,??_eval_poly+2
  6088  006E7E  C06C  F072         	movff	eval_poly@d+1,??_eval_poly+3
  6089  006E82  506F               	movf	??_eval_poly^0,w,c
  6090  006E84  2671               	addwf	(??_eval_poly+2)^0,f,c
  6091  006E86  5070               	movf	(??_eval_poly+1)^0,w,c
  6092  006E88  2272               	addwfc	(??_eval_poly+3)^0,f,c
  6093  006E8A  C071  FFF6         	movff	??_eval_poly+2,tblptrl
  6094  006E8E  C072  FFF7         	movff	??_eval_poly+3,tblptrh
  6095  006E92                     	if	0	;tblptru may be non-zero
  6096  006E92                     	endif
  6097  006E92                     	if	0	;tblptru may be non-zero
  6098  006E92                     	endif
  6099  006E92  0009               	tblrd		*+
  6100  006E94  FFFF               	dw	65535	; errata NOP
  6101  006E96  CFF5 F05B          	movff	tablat,___fladd@a
  6102  006E9A  0009               	tblrd		*+
  6103  006E9C  FFFF               	dw	65535	; errata NOP
  6104  006E9E  CFF5 F05C          	movff	tablat,___fladd@a+1
  6105  006EA2  0009               	tblrd		*+
  6106  006EA4  FFFF               	dw	65535	; errata NOP
  6107  006EA6  CFF5 F05D          	movff	tablat,___fladd@a+2
  6108  006EAA  000A               	tblrd		*-
  6109  006EAC  FFFF               	dw	65535	; errata NOP
  6110  006EAE  CFF5 F05E          	movff	tablat,___fladd@a+3
  6111  006EB2  ECB8  F00B         	call	___fladd	;wreg free
  6112  006EB6  C057  F073         	movff	?___fladd,eval_poly@res
  6113  006EBA  C058  F074         	movff	?___fladd+1,eval_poly@res+1
  6114  006EBE  C059  F075         	movff	?___fladd+2,eval_poly@res+2
  6115  006EC2  C05A  F076         	movff	?___fladd+3,eval_poly@res+3
  6116  006EC6                     l4475:
  6117  006EC6  FFFF               	dw	65535	; assembler added errata NOP
  6118  006EC8  506D               	movf	eval_poly@n^0,w,c
  6119  006ECA  106E               	iorwf	(eval_poly@n+1)^0,w,c
  6120  006ECC  A4D8               	btfss	status,2,c
  6121  006ECE  EF6B  F037         	goto	u4281
  6122  006ED2  EF6E  F037         	goto	u4280
  6123  006ED6                     u4281:
  6124  006ED6  FFFF               	dw	65535	; assembler added errata NOP
  6125  006ED8  EF15  F037         	goto	l4473
  6126  006EDC                     u4280:
  6127  006EDC  FFFF               	dw	65535	; assembler added errata NOP
  6128  006EDE  C073  F067         	movff	eval_poly@res,?_eval_poly
  6129  006EE2  C074  F068         	movff	eval_poly@res+1,?_eval_poly+1
  6130  006EE6  C075  F069         	movff	eval_poly@res+2,?_eval_poly+2
  6131  006EEA  C076  F06A         	movff	eval_poly@res+3,?_eval_poly+3
  6132  006EEE  0012               	return		;funcret
  6133  006EF0  FFFF               	dw	65535	; errata NOP
  6134  006EF2                     __end_of_eval_poly:
  6135                           	opt callstack 0
  6136                           
  6137 ;; *************** function ___fldiv *****************
  6138 ;; Defined at:
  6139 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;  b               4    0[COMRAM] int 
  6142 ;;  a               4    4[COMRAM] int 
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;  grs             4   19[COMRAM] unsigned long 
  6145 ;;  rem             4   12[COMRAM] unsigned long 
  6146 ;;  new_exp         2   17[COMRAM] int 
  6147 ;;  aexp            1   24[COMRAM] unsigned char 
  6148 ;;  bexp            1   23[COMRAM] unsigned char 
  6149 ;;  sign            1   16[COMRAM] unsigned char 
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  4    0[COMRAM] unsigned char 
  6152 ;; Registers used:
  6153 ;;		wreg, status,2, status,0
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6159 ;;      Params:         8       0       0       0       0       0       0
  6160 ;;      Locals:        13       0       0       0       0       0       0
  6161 ;;      Temps:          4       0       0       0       0       0       0
  6162 ;;      Totals:        25       0       0       0       0       0       0
  6163 ;;Total ram usage:       25 bytes
  6164 ;; Hardware stack levels used:    1
  6165 ;; This function calls:
  6166 ;;		Nothing
  6167 ;; This function is called by:
  6168 ;;		_exp
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172                           	psect	text8
  6173  0005B0                     __ptext8:
  6174                           	opt callstack 0
  6175  0005B0                     ___fldiv:
  6176                           	opt callstack 0
  6177  0005B0  FFFF               	dw	65535	; assembler added errata NOP
  6178  0005B2  5004               	movf	(___fldiv@b+3)^0,w,c
  6179  0005B4  0B80               	andlw	128
  6180  0005B6  6E11               	movwf	___fldiv@sign^0,c
  6181  0005B8  5004               	movf	(___fldiv@b+3)^0,w,c
  6182  0005BA  2404               	addwf	(___fldiv@b+3)^0,w,c
  6183  0005BC  6E18               	movwf	___fldiv@bexp^0,c
  6184  0005BE  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6185  0005C0  EFE4  F002         	goto	u3971
  6186  0005C4  EFE7  F002         	goto	u3970
  6187  0005C8                     u3971:
  6188  0005C8  FFFF               	dw	65535	; assembler added errata NOP
  6189  0005CA  EFE9  F002         	goto	l4285
  6190  0005CE                     u3970:
  6191  0005CE  FFFF               	dw	65535	; assembler added errata NOP
  6192  0005D0  8018               	bsf	___fldiv@bexp^0,0,c
  6193  0005D2                     l4285:
  6194  0005D2  FFFF               	dw	65535	; assembler added errata NOP
  6195  0005D4  5018               	movf	___fldiv@bexp^0,w,c
  6196  0005D6  B4D8               	btfsc	status,2,c
  6197  0005D8  EFF0  F002         	goto	u3981
  6198  0005DC  EFF3  F002         	goto	u3980
  6199  0005E0                     u3981:
  6200  0005E0  FFFF               	dw	65535	; assembler added errata NOP
  6201  0005E2  EF0C  F003         	goto	l4295
  6202  0005E6                     u3980:
  6203  0005E6  FFFF               	dw	65535	; assembler added errata NOP
  6204  0005E8  2818               	incf	___fldiv@bexp^0,w,c
  6205  0005EA  A4D8               	btfss	status,2,c
  6206  0005EC  EFFA  F002         	goto	u3991
  6207  0005F0  EFFD  F002         	goto	u3990
  6208  0005F4                     u3991:
  6209  0005F4  FFFF               	dw	65535	; assembler added errata NOP
  6210  0005F6  EF06  F003         	goto	l4291
  6211  0005FA                     u3990:
  6212  0005FA  FFFF               	dw	65535	; assembler added errata NOP
  6213  0005FC  0E00               	movlw	0
  6214  0005FE  6E01               	movwf	___fldiv@b^0,c
  6215  000600  0E00               	movlw	0
  6216  000602  6E02               	movwf	(___fldiv@b+1)^0,c
  6217  000604  0E00               	movlw	0
  6218  000606  6E03               	movwf	(___fldiv@b+2)^0,c
  6219  000608  0E00               	movlw	0
  6220  00060A  6E04               	movwf	(___fldiv@b+3)^0,c
  6221  00060C                     l4291:
  6222  00060C  FFFF               	dw	65535	; assembler added errata NOP
  6223  00060E  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6224  000610  0E00               	movlw	0
  6225  000612  6E04               	movwf	(___fldiv@b+3)^0,c
  6226  000614  EF15  F003         	goto	l4297
  6227  000618                     l4295:
  6228  000618  FFFF               	dw	65535	; assembler added errata NOP
  6229  00061A  0E00               	movlw	0
  6230  00061C  6E01               	movwf	___fldiv@b^0,c
  6231  00061E  0E00               	movlw	0
  6232  000620  6E02               	movwf	(___fldiv@b+1)^0,c
  6233  000622  0E00               	movlw	0
  6234  000624  6E03               	movwf	(___fldiv@b+2)^0,c
  6235  000626  0E00               	movlw	0
  6236  000628  6E04               	movwf	(___fldiv@b+3)^0,c
  6237  00062A                     l4297:
  6238  00062A  FFFF               	dw	65535	; assembler added errata NOP
  6239  00062C  5008               	movf	(___fldiv@a+3)^0,w,c
  6240  00062E  0B80               	andlw	128
  6241  000630  1A11               	xorwf	___fldiv@sign^0,f,c
  6242  000632  5008               	movf	(___fldiv@a+3)^0,w,c
  6243  000634  2408               	addwf	(___fldiv@a+3)^0,w,c
  6244  000636  6E19               	movwf	___fldiv@aexp^0,c
  6245  000638  AE07               	btfss	(___fldiv@a+2)^0,7,c
  6246  00063A  EF21  F003         	goto	u4001
  6247  00063E  EF24  F003         	goto	u4000
  6248  000642                     u4001:
  6249  000642  FFFF               	dw	65535	; assembler added errata NOP
  6250  000644  EF26  F003         	goto	l4305
  6251  000648                     u4000:
  6252  000648  FFFF               	dw	65535	; assembler added errata NOP
  6253  00064A  8019               	bsf	___fldiv@aexp^0,0,c
  6254  00064C                     l4305:
  6255  00064C  FFFF               	dw	65535	; assembler added errata NOP
  6256  00064E  5019               	movf	___fldiv@aexp^0,w,c
  6257  000650  B4D8               	btfsc	status,2,c
  6258  000652  EF2D  F003         	goto	u4011
  6259  000656  EF30  F003         	goto	u4010
  6260  00065A                     u4011:
  6261  00065A  FFFF               	dw	65535	; assembler added errata NOP
  6262  00065C  EF49  F003         	goto	l4315
  6263  000660                     u4010:
  6264  000660  FFFF               	dw	65535	; assembler added errata NOP
  6265  000662  2819               	incf	___fldiv@aexp^0,w,c
  6266  000664  A4D8               	btfss	status,2,c
  6267  000666  EF37  F003         	goto	u4021
  6268  00066A  EF3A  F003         	goto	u4020
  6269  00066E                     u4021:
  6270  00066E  FFFF               	dw	65535	; assembler added errata NOP
  6271  000670  EF43  F003         	goto	l4311
  6272  000674                     u4020:
  6273  000674  FFFF               	dw	65535	; assembler added errata NOP
  6274  000676  0E00               	movlw	0
  6275  000678  6E05               	movwf	___fldiv@a^0,c
  6276  00067A  0E00               	movlw	0
  6277  00067C  6E06               	movwf	(___fldiv@a+1)^0,c
  6278  00067E  0E00               	movlw	0
  6279  000680  6E07               	movwf	(___fldiv@a+2)^0,c
  6280  000682  0E00               	movlw	0
  6281  000684  6E08               	movwf	(___fldiv@a+3)^0,c
  6282  000686                     l4311:
  6283  000686  FFFF               	dw	65535	; assembler added errata NOP
  6284  000688  8E07               	bsf	(___fldiv@a+2)^0,7,c
  6285  00068A  0E00               	movlw	0
  6286  00068C  6E08               	movwf	(___fldiv@a+3)^0,c
  6287  00068E  EF52  F003         	goto	l4317
  6288  000692                     l4315:
  6289  000692  FFFF               	dw	65535	; assembler added errata NOP
  6290  000694  0E00               	movlw	0
  6291  000696  6E05               	movwf	___fldiv@a^0,c
  6292  000698  0E00               	movlw	0
  6293  00069A  6E06               	movwf	(___fldiv@a+1)^0,c
  6294  00069C  0E00               	movlw	0
  6295  00069E  6E07               	movwf	(___fldiv@a+2)^0,c
  6296  0006A0  0E00               	movlw	0
  6297  0006A2  6E08               	movwf	(___fldiv@a+3)^0,c
  6298  0006A4                     l4317:
  6299  0006A4  FFFF               	dw	65535	; assembler added errata NOP
  6300  0006A6  5005               	movf	___fldiv@a^0,w,c
  6301  0006A8  1006               	iorwf	(___fldiv@a+1)^0,w,c
  6302  0006AA  1007               	iorwf	(___fldiv@a+2)^0,w,c
  6303  0006AC  1008               	iorwf	(___fldiv@a+3)^0,w,c
  6304  0006AE  A4D8               	btfss	status,2,c
  6305  0006B0  EF5C  F003         	goto	u4031
  6306  0006B4  EF5F  F003         	goto	u4030
  6307  0006B8                     u4031:
  6308  0006B8  FFFF               	dw	65535	; assembler added errata NOP
  6309  0006BA  EF79  F003         	goto	l4329
  6310  0006BE                     u4030:
  6311  0006BE  FFFF               	dw	65535	; assembler added errata NOP
  6312  0006C0  0E00               	movlw	0
  6313  0006C2  6E01               	movwf	___fldiv@b^0,c
  6314  0006C4  0E00               	movlw	0
  6315  0006C6  6E02               	movwf	(___fldiv@b+1)^0,c
  6316  0006C8  0E00               	movlw	0
  6317  0006CA  6E03               	movwf	(___fldiv@b+2)^0,c
  6318  0006CC  0E00               	movlw	0
  6319  0006CE  6E04               	movwf	(___fldiv@b+3)^0,c
  6320  0006D0  0E80               	movlw	128
  6321  0006D2  1203               	iorwf	(___fldiv@b+2)^0,f,c
  6322  0006D4  0E7F               	movlw	127
  6323  0006D6  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6324  0006D8                     l4323:
  6325  0006D8  FFFF               	dw	65535	; assembler added errata NOP
  6326  0006DA  5011               	movf	___fldiv@sign^0,w,c
  6327  0006DC  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6328  0006DE  C001  F001         	movff	___fldiv@b,?___fldiv
  6329  0006E2  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6330  0006E6  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6331  0006EA  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6332  0006EE  EFEE  F004         	goto	l912
  6333  0006F2                     l4329:
  6334  0006F2  FFFF               	dw	65535	; assembler added errata NOP
  6335  0006F4  5018               	movf	___fldiv@bexp^0,w,c
  6336  0006F6  A4D8               	btfss	status,2,c
  6337  0006F8  EF80  F003         	goto	u4041
  6338  0006FC  EF83  F003         	goto	u4040
  6339  000700                     u4041:
  6340  000700  FFFF               	dw	65535	; assembler added errata NOP
  6341  000702  EF8E  F003         	goto	l4337
  6342  000706                     u4040:
  6343  000706  FFFF               	dw	65535	; assembler added errata NOP
  6344  000708  0E00               	movlw	0
  6345  00070A  6E01               	movwf	?___fldiv^0,c
  6346  00070C  0E00               	movlw	0
  6347  00070E  6E02               	movwf	(?___fldiv+1)^0,c
  6348  000710  0E00               	movlw	0
  6349  000712  6E03               	movwf	(?___fldiv+2)^0,c
  6350  000714  0E00               	movlw	0
  6351  000716  6E04               	movwf	(?___fldiv+3)^0,c
  6352  000718  EFEE  F004         	goto	l912
  6353  00071C                     l4337:
  6354  00071C  FFFF               	dw	65535	; assembler added errata NOP
  6355  00071E  5019               	movf	___fldiv@aexp^0,w,c
  6356  000720  C018  F009         	movff	___fldiv@bexp,??___fldiv
  6357  000724  6A0A               	clrf	(??___fldiv+1)^0,c
  6358  000726  5E09               	subwf	??___fldiv^0,f,c
  6359  000728  0E00               	movlw	0
  6360  00072A  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  6361  00072C  0E7F               	movlw	127
  6362  00072E  2409               	addwf	??___fldiv^0,w,c
  6363  000730  6E12               	movwf	___fldiv@new_exp^0,c
  6364  000732  0E00               	movlw	0
  6365  000734  200A               	addwfc	(??___fldiv+1)^0,w,c
  6366  000736  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6367  000738  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  6368  00073C  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  6369  000740  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  6370  000744  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  6371  000748  0E00               	movlw	0
  6372  00074A  6E01               	movwf	___fldiv@b^0,c
  6373  00074C  0E00               	movlw	0
  6374  00074E  6E02               	movwf	(___fldiv@b+1)^0,c
  6375  000750  0E00               	movlw	0
  6376  000752  6E03               	movwf	(___fldiv@b+2)^0,c
  6377  000754  0E00               	movlw	0
  6378  000756  6E04               	movwf	(___fldiv@b+3)^0,c
  6379  000758  0E00               	movlw	0
  6380  00075A  6E14               	movwf	___fldiv@grs^0,c
  6381  00075C  0E00               	movlw	0
  6382  00075E  6E15               	movwf	(___fldiv@grs+1)^0,c
  6383  000760  0E00               	movlw	0
  6384  000762  6E16               	movwf	(___fldiv@grs+2)^0,c
  6385  000764  0E00               	movlw	0
  6386  000766  6E17               	movwf	(___fldiv@grs+3)^0,c
  6387  000768  0E00               	movlw	0
  6388  00076A  6E19               	movwf	___fldiv@aexp^0,c
  6389  00076C  EFFA  F003         	goto	l914
  6390  000770                     l4347:
  6391  000770  FFFF               	dw	65535	; assembler added errata NOP
  6392  000772  5019               	movf	___fldiv@aexp^0,w,c
  6393  000774  B4D8               	btfsc	status,2,c
  6394  000776  EFBF  F003         	goto	u4051
  6395  00077A  EFC2  F003         	goto	u4050
  6396  00077E                     u4051:
  6397  00077E  FFFF               	dw	65535	; assembler added errata NOP
  6398  000780  EFDD  F003         	goto	l4355
  6399  000784                     u4050:
  6400  000784  FFFF               	dw	65535	; assembler added errata NOP
  6401  000786  90D8               	bcf	status,0,c
  6402  000788  360D               	rlcf	___fldiv@rem^0,f,c
  6403  00078A  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  6404  00078C  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  6405  00078E  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  6406  000790  90D8               	bcf	status,0,c
  6407  000792  3601               	rlcf	___fldiv@b^0,f,c
  6408  000794  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6409  000796  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6410  000798  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6411  00079A  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6412  00079C  EFD2  F003         	goto	u4061
  6413  0007A0  EFD5  F003         	goto	u4060
  6414  0007A4                     u4061:
  6415  0007A4  FFFF               	dw	65535	; assembler added errata NOP
  6416  0007A6  EFD7  F003         	goto	l917
  6417  0007AA                     u4060:
  6418  0007AA  FFFF               	dw	65535	; assembler added errata NOP
  6419  0007AC  8001               	bsf	___fldiv@b^0,0,c
  6420  0007AE                     l917:
  6421  0007AE  FFFF               	dw	65535	; assembler added errata NOP
  6422  0007B0  90D8               	bcf	status,0,c
  6423  0007B2  3614               	rlcf	___fldiv@grs^0,f,c
  6424  0007B4  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6425  0007B6  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6426  0007B8  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6427  0007BA                     l4355:
  6428  0007BA  FFFF               	dw	65535	; assembler added errata NOP
  6429  0007BC  5005               	movf	___fldiv@a^0,w,c
  6430  0007BE  5C0D               	subwf	___fldiv@rem^0,w,c
  6431  0007C0  5006               	movf	(___fldiv@a+1)^0,w,c
  6432  0007C2  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  6433  0007C4  5007               	movf	(___fldiv@a+2)^0,w,c
  6434  0007C6  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  6435  0007C8  5008               	movf	(___fldiv@a+3)^0,w,c
  6436  0007CA  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  6437  0007CC  A0D8               	btfss	status,0,c
  6438  0007CE  EFEB  F003         	goto	u4071
  6439  0007D2  EFEE  F003         	goto	u4070
  6440  0007D6                     u4071:
  6441  0007D6  FFFF               	dw	65535	; assembler added errata NOP
  6442  0007D8  EFF8  F003         	goto	l4361
  6443  0007DC                     u4070:
  6444  0007DC  FFFF               	dw	65535	; assembler added errata NOP
  6445  0007DE  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  6446  0007E0  5005               	movf	___fldiv@a^0,w,c
  6447  0007E2  5E0D               	subwf	___fldiv@rem^0,f,c
  6448  0007E4  5006               	movf	(___fldiv@a+1)^0,w,c
  6449  0007E6  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  6450  0007E8  5007               	movf	(___fldiv@a+2)^0,w,c
  6451  0007EA  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  6452  0007EC  5008               	movf	(___fldiv@a+3)^0,w,c
  6453  0007EE  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  6454  0007F0                     l4361:
  6455  0007F0  FFFF               	dw	65535	; assembler added errata NOP
  6456  0007F2  2A19               	incf	___fldiv@aexp^0,f,c
  6457  0007F4                     l914:
  6458  0007F4  FFFF               	dw	65535	; assembler added errata NOP
  6459  0007F6  0E19               	movlw	25
  6460  0007F8  6419               	cpfsgt	___fldiv@aexp^0,c
  6461  0007FA  EF01  F004         	goto	u4081
  6462  0007FE  EF04  F004         	goto	u4080
  6463  000802                     u4081:
  6464  000802  FFFF               	dw	65535	; assembler added errata NOP
  6465  000804  EFB8  F003         	goto	l4347
  6466  000808                     u4080:
  6467  000808  FFFF               	dw	65535	; assembler added errata NOP
  6468  00080A  500D               	movf	___fldiv@rem^0,w,c
  6469  00080C  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  6470  00080E  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  6471  000810  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  6472  000812  B4D8               	btfsc	status,2,c
  6473  000814  EF0E  F004         	goto	u4091
  6474  000818  EF11  F004         	goto	u4090
  6475  00081C                     u4091:
  6476  00081C  FFFF               	dw	65535	; assembler added errata NOP
  6477  00081E  EF2E  F004         	goto	l4373
  6478  000822                     u4090:
  6479  000822  FFFF               	dw	65535	; assembler added errata NOP
  6480  000824  8014               	bsf	___fldiv@grs^0,0,c
  6481  000826  EF2E  F004         	goto	l4373
  6482  00082A                     l4367:
  6483  00082A  FFFF               	dw	65535	; assembler added errata NOP
  6484  00082C  90D8               	bcf	status,0,c
  6485  00082E  3601               	rlcf	___fldiv@b^0,f,c
  6486  000830  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6487  000832  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6488  000834  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6489  000836  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6490  000838  EF20  F004         	goto	u4101
  6491  00083C  EF23  F004         	goto	u4100
  6492  000840                     u4101:
  6493  000840  FFFF               	dw	65535	; assembler added errata NOP
  6494  000842  EF25  F004         	goto	l923
  6495  000846                     u4100:
  6496  000846  FFFF               	dw	65535	; assembler added errata NOP
  6497  000848  8001               	bsf	___fldiv@b^0,0,c
  6498  00084A                     l923:
  6499  00084A  FFFF               	dw	65535	; assembler added errata NOP
  6500  00084C  90D8               	bcf	status,0,c
  6501  00084E  3614               	rlcf	___fldiv@grs^0,f,c
  6502  000850  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6503  000852  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6504  000854  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6505  000856  0612               	decf	___fldiv@new_exp^0,f,c
  6506  000858  A0D8               	btfss	status,0,c
  6507  00085A  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  6508  00085C                     l4373:
  6509  00085C  FFFF               	dw	65535	; assembler added errata NOP
  6510  00085E  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6511  000860  EF34  F004         	goto	u4111
  6512  000864  EF37  F004         	goto	u4110
  6513  000868                     u4111:
  6514  000868  FFFF               	dw	65535	; assembler added errata NOP
  6515  00086A  EF15  F004         	goto	l4367
  6516  00086E                     u4110:
  6517  00086E  FFFF               	dw	65535	; assembler added errata NOP
  6518  000870  0E00               	movlw	0
  6519  000872  6E19               	movwf	___fldiv@aexp^0,c
  6520  000874  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6521  000876  EF3F  F004         	goto	u4121
  6522  00087A  EF42  F004         	goto	u4120
  6523  00087E                     u4121:
  6524  00087E  FFFF               	dw	65535	; assembler added errata NOP
  6525  000880  EF6D  F004         	goto	l925
  6526  000884                     u4120:
  6527  000884  FFFF               	dw	65535	; assembler added errata NOP
  6528  000886  0EFF               	movlw	255
  6529  000888  1414               	andwf	___fldiv@grs^0,w,c
  6530  00088A  6E09               	movwf	??___fldiv^0,c
  6531  00088C  0EFF               	movlw	255
  6532  00088E  1415               	andwf	(___fldiv@grs+1)^0,w,c
  6533  000890  6E0A               	movwf	(??___fldiv+1)^0,c
  6534  000892  0EFF               	movlw	255
  6535  000894  1416               	andwf	(___fldiv@grs+2)^0,w,c
  6536  000896  6E0B               	movwf	(??___fldiv+2)^0,c
  6537  000898  0E7F               	movlw	127
  6538  00089A  1417               	andwf	(___fldiv@grs+3)^0,w,c
  6539  00089C  6E0C               	movwf	(??___fldiv+3)^0,c
  6540  00089E  5009               	movf	??___fldiv^0,w,c
  6541  0008A0  100A               	iorwf	(??___fldiv+1)^0,w,c
  6542  0008A2  100B               	iorwf	(??___fldiv+2)^0,w,c
  6543  0008A4  100C               	iorwf	(??___fldiv+3)^0,w,c
  6544  0008A6  B4D8               	btfsc	status,2,c
  6545  0008A8  EF58  F004         	goto	u4131
  6546  0008AC  EF5B  F004         	goto	u4130
  6547  0008B0                     u4131:
  6548  0008B0  FFFF               	dw	65535	; assembler added errata NOP
  6549  0008B2  EF61  F004         	goto	l926
  6550  0008B6                     u4130:
  6551  0008B6  FFFF               	dw	65535	; assembler added errata NOP
  6552  0008B8                     l4381:
  6553  0008B8  FFFF               	dw	65535	; assembler added errata NOP
  6554  0008BA  0E01               	movlw	1
  6555  0008BC  6E19               	movwf	___fldiv@aexp^0,c
  6556  0008BE  EF6D  F004         	goto	l925
  6557  0008C2                     l926:
  6558  0008C2  FFFF               	dw	65535	; assembler added errata NOP
  6559  0008C4  A001               	btfss	___fldiv@b^0,0,c
  6560  0008C6  EF67  F004         	goto	u4141
  6561  0008CA  EF6A  F004         	goto	u4140
  6562  0008CE                     u4141:
  6563  0008CE  FFFF               	dw	65535	; assembler added errata NOP
  6564  0008D0  EF6D  F004         	goto	l925
  6565  0008D4                     u4140:
  6566  0008D4  FFFF               	dw	65535	; assembler added errata NOP
  6567  0008D6  EF5C  F004         	goto	l4381
  6568  0008DA                     l925:
  6569  0008DA  FFFF               	dw	65535	; assembler added errata NOP
  6570  0008DC  5019               	movf	___fldiv@aexp^0,w,c
  6571  0008DE  B4D8               	btfsc	status,2,c
  6572  0008E0  EF74  F004         	goto	u4151
  6573  0008E4  EF77  F004         	goto	u4150
  6574  0008E8                     u4151:
  6575  0008E8  FFFF               	dw	65535	; assembler added errata NOP
  6576  0008EA  EF9E  F004         	goto	l4393
  6577  0008EE                     u4150:
  6578  0008EE  FFFF               	dw	65535	; assembler added errata NOP
  6579  0008F0  0E01               	movlw	1
  6580  0008F2  2601               	addwf	___fldiv@b^0,f,c
  6581  0008F4  0E00               	movlw	0
  6582  0008F6  2202               	addwfc	(___fldiv@b+1)^0,f,c
  6583  0008F8  2203               	addwfc	(___fldiv@b+2)^0,f,c
  6584  0008FA  2204               	addwfc	(___fldiv@b+3)^0,f,c
  6585  0008FC  A004               	btfss	(___fldiv@b+3)^0,0,c
  6586  0008FE  EF83  F004         	goto	u4161
  6587  000902  EF86  F004         	goto	u4160
  6588  000906                     u4161:
  6589  000906  FFFF               	dw	65535	; assembler added errata NOP
  6590  000908  EF9E  F004         	goto	l4393
  6591  00090C                     u4160:
  6592  00090C  FFFF               	dw	65535	; assembler added errata NOP
  6593  00090E  C001  F009         	movff	___fldiv@b,??___fldiv
  6594  000912  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  6595  000916  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  6596  00091A  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  6597  00091E  340C               	rlcf	(??___fldiv+3)^0,w,c
  6598  000920  320C               	rrcf	(??___fldiv+3)^0,f,c
  6599  000922  320B               	rrcf	(??___fldiv+2)^0,f,c
  6600  000924  320A               	rrcf	(??___fldiv+1)^0,f,c
  6601  000926  3209               	rrcf	??___fldiv^0,f,c
  6602  000928  C009  F001         	movff	??___fldiv,___fldiv@b
  6603  00092C  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  6604  000930  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  6605  000934  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  6606  000938  4A12               	infsnz	___fldiv@new_exp^0,f,c
  6607  00093A  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  6608  00093C                     l4393:
  6609  00093C  FFFF               	dw	65535	; assembler added errata NOP
  6610  00093E  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6611  000940  EFAA  F004         	goto	u4171
  6612  000944  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6613  000946  E109               	bnz	u4170
  6614  000948  2812               	incf	___fldiv@new_exp^0,w,c
  6615  00094A  A0D8               	btfss	status,0,c
  6616  00094C  EFAA  F004         	goto	u4171
  6617  000950  EFAD  F004         	goto	u4170
  6618  000954                     u4171:
  6619  000954  FFFF               	dw	65535	; assembler added errata NOP
  6620  000956  EFB9  F004         	goto	l4397
  6621  00095A                     u4170:
  6622  00095A  FFFF               	dw	65535	; assembler added errata NOP
  6623  00095C  0E00               	movlw	0
  6624  00095E  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6625  000960  6812               	setf	___fldiv@new_exp^0,c
  6626  000962  0E00               	movlw	0
  6627  000964  6E01               	movwf	___fldiv@b^0,c
  6628  000966  0E00               	movlw	0
  6629  000968  6E02               	movwf	(___fldiv@b+1)^0,c
  6630  00096A  0E00               	movlw	0
  6631  00096C  6E03               	movwf	(___fldiv@b+2)^0,c
  6632  00096E  0E00               	movlw	0
  6633  000970  6E04               	movwf	(___fldiv@b+3)^0,c
  6634  000972                     l4397:
  6635  000972  FFFF               	dw	65535	; assembler added errata NOP
  6636  000974  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6637  000976  EFC8  F004         	goto	u4180
  6638  00097A  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6639  00097C  E106               	bnz	u4181
  6640  00097E  0412               	decf	___fldiv@new_exp^0,w,c
  6641  000980  B0D8               	btfsc	status,0,c
  6642  000982  EFC5  F004         	goto	u4181
  6643  000986  EFC8  F004         	goto	u4180
  6644  00098A                     u4181:
  6645  00098A  FFFF               	dw	65535	; assembler added errata NOP
  6646  00098C  EFD7  F004         	goto	l4401
  6647  000990                     u4180:
  6648  000990  FFFF               	dw	65535	; assembler added errata NOP
  6649  000992  0E00               	movlw	0
  6650  000994  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6651  000996  0E00               	movlw	0
  6652  000998  6E12               	movwf	___fldiv@new_exp^0,c
  6653  00099A  0E00               	movlw	0
  6654  00099C  6E01               	movwf	___fldiv@b^0,c
  6655  00099E  0E00               	movlw	0
  6656  0009A0  6E02               	movwf	(___fldiv@b+1)^0,c
  6657  0009A2  0E00               	movlw	0
  6658  0009A4  6E03               	movwf	(___fldiv@b+2)^0,c
  6659  0009A6  0E00               	movlw	0
  6660  0009A8  6E04               	movwf	(___fldiv@b+3)^0,c
  6661  0009AA  0E00               	movlw	0
  6662  0009AC  6E11               	movwf	___fldiv@sign^0,c
  6663  0009AE                     l4401:
  6664  0009AE  FFFF               	dw	65535	; assembler added errata NOP
  6665  0009B0  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  6666  0009B4  A018               	btfss	___fldiv@bexp^0,0,c
  6667  0009B6  EFDF  F004         	goto	u4191
  6668  0009BA  EFE2  F004         	goto	u4190
  6669  0009BE                     u4191:
  6670  0009BE  FFFF               	dw	65535	; assembler added errata NOP
  6671  0009C0  EFE6  F004         	goto	l4407
  6672  0009C4                     u4190:
  6673  0009C4  FFFF               	dw	65535	; assembler added errata NOP
  6674  0009C6  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6675  0009C8  EFE8  F004         	goto	l4409
  6676  0009CC                     l4407:
  6677  0009CC  FFFF               	dw	65535	; assembler added errata NOP
  6678  0009CE  9E03               	bcf	(___fldiv@b+2)^0,7,c
  6679  0009D0                     l4409:
  6680  0009D0  FFFF               	dw	65535	; assembler added errata NOP
  6681  0009D2  90D8               	bcf	status,0,c
  6682  0009D4  3018               	rrcf	___fldiv@bexp^0,w,c
  6683  0009D6  6E04               	movwf	(___fldiv@b+3)^0,c
  6684  0009D8  EF6C  F003         	goto	l4323
  6685  0009DC                     l912:
  6686  0009DC  FFFF               	dw	65535	; assembler added errata NOP
  6687  0009DE  0012               	return		;funcret
  6688  0009E0  FFFF               	dw	65535	; errata NOP
  6689  0009E2                     __end_of___fldiv:
  6690                           	opt callstack 0
  6691                           
  6692 ;; *************** function _nombresbaby *****************
  6693 ;; Defined at:
  6694 ;;		line 469 in file "CalculadoraLCD.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;		None
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;		None
  6699 ;; Return value:  Size  Location     Type
  6700 ;;                  2   20[None  ] unsigned int 
  6701 ;; Registers used:
  6702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6703 ;; Tracked objects:
  6704 ;;		On entry : 0/0
  6705 ;;		On exit  : 0/0
  6706 ;;		Unchanged: 0/0
  6707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6708 ;;      Params:         0       0       0       0       0       0       0
  6709 ;;      Locals:         0       0       0       0       0       0       0
  6710 ;;      Temps:          2       0       0       0       0       0       0
  6711 ;;      Totals:         2       0       0       0       0       0       0
  6712 ;;Total ram usage:        2 bytes
  6713 ;; Hardware stack levels used:    1
  6714 ;; Hardware stack levels required when called:    3
  6715 ;; This function calls:
  6716 ;;		_ins_LCD
  6717 ;;		_sprintf
  6718 ;;		_write_LCD
  6719 ;; This function is called by:
  6720 ;;		_main
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           	psect	text9
  6725  0009E2                     __ptext9:
  6726                           	opt callstack 0
  6727  0009E2                     _nombresbaby:
  6728                           	opt callstack 0
  6729  0009E2  FFFF               	dw	65535	; assembler added errata NOP
  6730  0009E4                     
  6731                           ;CalculadoraLCD.c: 470: ins_LCD(132);
  6732  0009E4  0E84               	movlw	132
  6733  0009E6  EC94  F032         	call	_ins_LCD
  6734  0009EA                     
  6735                           ;CalculadoraLCD.c: 471: write_LCD(sprintf(buffer, " "));
  6736  0009EA  0E04               	movlw	low _buffer
  6737  0009EC  0100               	movlb	0	; () banked
  6738  0009EE  6FC1               	movwf	sprintf@sp& (0+255),b
  6739  0009F0  0E01               	movlw	high _buffer
  6740  0009F2  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  6741  0009F4  0EE4               	movlw	low STR_48
  6742  0009F6  6FC3               	movwf	sprintf@f& (0+255),b
  6743  0009F8  0E7F               	movlw	high STR_48
  6744  0009FA  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  6745  0009FC  EC8C  F00E         	call	_sprintf	;wreg free
  6746  000A00  0100               	movlb	0	; () banked
  6747  000A02  51C1               	movf	?_sprintf& (0+255),w,b
  6748  000A04  ECEA  F032         	call	_write_LCD
  6749  000A08                     
  6750                           ;CalculadoraLCD.c: 472: ins_LCD(197);
  6751  000A08  0EC5               	movlw	197
  6752  000A0A  EC94  F032         	call	_ins_LCD
  6753                           
  6754                           ;CalculadoraLCD.c: 473: write_LCD(sprintf(buffer, " "));
  6755  000A0E  0E04               	movlw	low _buffer
  6756  000A10  0100               	movlb	0	; () banked
  6757  000A12  6FC1               	movwf	sprintf@sp& (0+255),b
  6758  000A14  0E01               	movlw	high _buffer
  6759  000A16  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  6760  000A18  0EE4               	movlw	low STR_48
  6761  000A1A  6FC3               	movwf	sprintf@f& (0+255),b
  6762  000A1C  0E7F               	movlw	high STR_48
  6763  000A1E  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  6764  000A20  EC8C  F00E         	call	_sprintf	;wreg free
  6765  000A24  0100               	movlb	0	; () banked
  6766  000A26  51C1               	movf	?_sprintf& (0+255),w,b
  6767  000A28  ECEA  F032         	call	_write_LCD
  6768  000A2C                     
  6769                           ;CalculadoraLCD.c: 474: ins_LCD(128);
  6770  000A2C  0E80               	movlw	128
  6771  000A2E  EC94  F032         	call	_ins_LCD
  6772  000A32                     
  6773                           ;CalculadoraLCD.c: 475: write_LCD(sprintf(buffer, "J"));
  6774  000A32  0E04               	movlw	low _buffer
  6775  000A34  0100               	movlb	0	; () banked
  6776  000A36  6FC1               	movwf	sprintf@sp& (0+255),b
  6777  000A38  0E01               	movlw	high _buffer
  6778  000A3A  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  6779  000A3C  0EF0               	movlw	low STR_50
  6780  000A3E  6FC3               	movwf	sprintf@f& (0+255),b
  6781  000A40  0E7F               	movlw	high STR_50
  6782  000A42  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  6783  000A44  EC8C  F00E         	call	_sprintf	;wreg free
  6784  000A48  0100               	movlb	0	; () banked
  6785  000A4A  51C1               	movf	?_sprintf& (0+255),w,b
  6786  000A4C  ECEA  F032         	call	_write_LCD
  6787                           
  6788                           ;CalculadoraLCD.c: 476: ins_LCD(204);
  6789  000A50  0ECC               	movlw	204
  6790  000A52  EC94  F032         	call	_ins_LCD
  6791  000A56                     
  6792                           ;CalculadoraLCD.c: 477: write_LCD(sprintf(buffer, "O"));
  6793  000A56  0E04               	movlw	low _buffer
  6794  000A58  0100               	movlb	0	; () banked
  6795  000A5A  6FC1               	movwf	sprintf@sp& (0+255),b
  6796  000A5C  0E01               	movlw	high _buffer
  6797  000A5E  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  6798  000A60  0EE2               	movlw	low (STR_70+1)
  6799  000A62  6FC3               	movwf	sprintf@f& (0+255),b
  6800  000A64  0E7F               	movlw	high (STR_70+1)
  6801  000A66  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  6802  000A68  EC8C  F00E         	call	_sprintf	;wreg free
  6803  000A6C  0100               	movlb	0	; () banked
  6804  000A6E  51C1               	movf	?_sprintf& (0+255),w,b
  6805  000A70  ECEA  F032         	call	_write_LCD
  6806  000A74                     
  6807                           ;CalculadoraLCD.c: 478: ins_LCD(199);
  6808  000A74  0EC7               	movlw	199
  6809  000A76  EC94  F032         	call	_ins_LCD
  6810                           
  6811                           ;CalculadoraLCD.c: 479: write_LCD(sprintf(buffer, "A"));
  6812  000A7A  0E04               	movlw	low _buffer
  6813  000A7C  0100               	movlb	0	; () banked
  6814  000A7E  6FC1               	movwf	sprintf@sp& (0+255),b
  6815  000A80  0E01               	movlw	high _buffer
  6816  000A82  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  6817  000A84  0EE6               	movlw	low STR_52
  6818  000A86  6FC3               	movwf	sprintf@f& (0+255),b
  6819  000A88  0E7F               	movlw	high STR_52
  6820  000A8A  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  6821  000A8C  EC8C  F00E         	call	_sprintf	;wreg free
  6822  000A90  0100               	movlb	0	; () banked
  6823  000A92  51C1               	movf	?_sprintf& (0+255),w,b
  6824  000A94  ECEA  F032         	call	_write_LCD
  6825  000A98                     
  6826                           ;CalculadoraLCD.c: 480: _delay((unsigned long)((300)*(4000000/4000.0)));
  6827  000A98  0E02               	movlw	2
  6828  000A9A  6E74               	movwf	(??_nombresbaby+1)^0,c
  6829  000A9C  0E25               	movlw	37
  6830  000A9E  6E73               	movwf	??_nombresbaby^0,c
  6831  000AA0  0E63               	movlw	99
  6832  000AA2                     u5347:
  6833  000AA2  FFFF               	dw	65535	; errata NOP
  6834  000AA4  2EE8               	decfsz	wreg,f,c
  6835  000AA6  D7FD               	bra	u5347
  6836  000AA8  2E73               	decfsz	??_nombresbaby^0,f,c
  6837  000AAA  D7FB               	bra	u5347
  6838  000AAC  2E74               	decfsz	(??_nombresbaby+1)^0,f,c
  6839  000AAE  D7F9               	bra	u5347
  6840  000AB0  D000               	nop2	
  6841  000AB2                     
  6842                           ;CalculadoraLCD.c: 482: ins_LCD(130);
  6843  000AB2  0E82               	movlw	130
  6844  000AB4  EC94  F032         	call	_ins_LCD
  6845  000AB8                     
  6846                           ;CalculadoraLCD.c: 483: write_LCD(sprintf(buffer, "A"));
  6847  000AB8  0E04               	movlw	low _buffer
  6848  000ABA  0100               	movlb	0	; () banked
  6849  000ABC  6FC1               	movwf	sprintf@sp& (0+255),b
  6850  000ABE  0E01               	movlw	high _buffer
  6851  000AC0  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  6852  000AC2  0EE6               	movlw	low STR_52
  6853  000AC4  6FC3               	movwf	sprintf@f& (0+255),b
  6854  000AC6  0E7F               	movlw	high STR_52
  6855  000AC8  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  6856  000ACA  EC8C  F00E         	call	_sprintf	;wreg free
  6857  000ACE  0100               	movlb	0	; () banked
  6858  000AD0  51C1               	movf	?_sprintf& (0+255),w,b
  6859  000AD2  ECEA  F032         	call	_write_LCD
  6860  000AD6                     
  6861                           ;CalculadoraLCD.c: 484: ins_LCD(202);
  6862  000AD6  0ECA               	movlw	202
  6863  000AD8  EC94  F032         	call	_ins_LCD
  6864  000ADC                     
  6865                           ;CalculadoraLCD.c: 485: write_LCD(sprintf(buffer, "A"));
  6866  000ADC  0E04               	movlw	low _buffer
  6867  000ADE  0100               	movlb	0	; () banked
  6868  000AE0  6FC1               	movwf	sprintf@sp& (0+255),b
  6869  000AE2  0E01               	movlw	high _buffer
  6870  000AE4  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  6871  000AE6  0EE6               	movlw	low STR_52
  6872  000AE8  6FC3               	movwf	sprintf@f& (0+255),b
  6873  000AEA  0E7F               	movlw	high STR_52
  6874  000AEC  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  6875  000AEE  EC8C  F00E         	call	_sprintf	;wreg free
  6876  000AF2  0100               	movlb	0	; () banked
  6877  000AF4  51C1               	movf	?_sprintf& (0+255),w,b
  6878  000AF6  ECEA  F032         	call	_write_LCD
  6879  000AFA                     
  6880                           ;CalculadoraLCD.c: 486: ins_LCD(198);
  6881  000AFA  0EC6               	movlw	198
  6882  000AFC  EC94  F032         	call	_ins_LCD
  6883  000B00                     
  6884                           ;CalculadoraLCD.c: 487: write_LCD(sprintf(buffer, "S"));
  6885  000B00  0E04               	movlw	low _buffer
  6886  000B02  0100               	movlb	0	; () banked
  6887  000B04  6FC1               	movwf	sprintf@sp& (0+255),b
  6888  000B06  0E01               	movlw	high _buffer
  6889  000B08  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  6890  000B0A  0EF8               	movlw	low STR_55
  6891  000B0C  6FC3               	movwf	sprintf@f& (0+255),b
  6892  000B0E  0E7F               	movlw	high STR_55
  6893  000B10  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  6894  000B12  EC8C  F00E         	call	_sprintf	;wreg free
  6895  000B16  0100               	movlb	0	; () banked
  6896  000B18  51C1               	movf	?_sprintf& (0+255),w,b
  6897  000B1A  ECEA  F032         	call	_write_LCD
  6898  000B1E                     
  6899                           ;CalculadoraLCD.c: 488: _delay((unsigned long)((300)*(4000000/4000.0)));
  6900  000B1E  0E02               	movlw	2
  6901  000B20  6E74               	movwf	(??_nombresbaby+1)^0,c
  6902  000B22  0E25               	movlw	37
  6903  000B24  6E73               	movwf	??_nombresbaby^0,c
  6904  000B26  0E63               	movlw	99
  6905  000B28                     u5357:
  6906  000B28  FFFF               	dw	65535	; errata NOP
  6907  000B2A  2EE8               	decfsz	wreg,f,c
  6908  000B2C  D7FD               	bra	u5357
  6909  000B2E  2E73               	decfsz	??_nombresbaby^0,f,c
  6910  000B30  D7FB               	bra	u5357
  6911  000B32  2E74               	decfsz	(??_nombresbaby+1)^0,f,c
  6912  000B34  D7F9               	bra	u5357
  6913  000B36  D000               	nop2	
  6914                           
  6915                           ;CalculadoraLCD.c: 490: ins_LCD(129);
  6916  000B38  0E81               	movlw	129
  6917  000B3A  EC94  F032         	call	_ins_LCD
  6918  000B3E                     
  6919                           ;CalculadoraLCD.c: 491: write_LCD(sprintf(buffer, "U"));
  6920  000B3E  0E04               	movlw	low _buffer
  6921  000B40  0100               	movlb	0	; () banked
  6922  000B42  6FC1               	movwf	sprintf@sp& (0+255),b
  6923  000B44  0E01               	movlw	high _buffer
  6924  000B46  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  6925  000B48  0EFA               	movlw	low STR_56
  6926  000B4A  6FC3               	movwf	sprintf@f& (0+255),b
  6927  000B4C  0E7F               	movlw	high STR_56
  6928  000B4E  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  6929  000B50  EC8C  F00E         	call	_sprintf	;wreg free
  6930  000B54  0100               	movlb	0	; () banked
  6931  000B56  51C1               	movf	?_sprintf& (0+255),w,b
  6932  000B58  ECEA  F032         	call	_write_LCD
  6933  000B5C                     
  6934                           ;CalculadoraLCD.c: 492: ins_LCD(203);
  6935  000B5C  0ECB               	movlw	203
  6936  000B5E  EC94  F032         	call	_ins_LCD
  6937                           
  6938                           ;CalculadoraLCD.c: 493: write_LCD(sprintf(buffer, "D"));
  6939  000B62  0E04               	movlw	low _buffer
  6940  000B64  0100               	movlb	0	; () banked
  6941  000B66  6FC1               	movwf	sprintf@sp& (0+255),b
  6942  000B68  0E01               	movlw	high _buffer
  6943  000B6A  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  6944  000B6C  0EE8               	movlw	low STR_57
  6945  000B6E  6FC3               	movwf	sprintf@f& (0+255),b
  6946  000B70  0E7F               	movlw	high STR_57
  6947  000B72  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  6948  000B74  EC8C  F00E         	call	_sprintf	;wreg free
  6949  000B78  0100               	movlb	0	; () banked
  6950  000B7A  51C1               	movf	?_sprintf& (0+255),w,b
  6951  000B7C  ECEA  F032         	call	_write_LCD
  6952  000B80                     
  6953                           ;CalculadoraLCD.c: 494: ins_LCD(200);
  6954  000B80  0EC8               	movlw	200
  6955  000B82  EC94  F032         	call	_ins_LCD
  6956  000B86                     
  6957                           ;CalculadoraLCD.c: 495: write_LCD(sprintf(buffer, "L"));
  6958  000B86  0E04               	movlw	low _buffer
  6959  000B88  0100               	movlb	0	; () banked
  6960  000B8A  6FC1               	movwf	sprintf@sp& (0+255),b
  6961  000B8C  0E01               	movlw	high _buffer
  6962  000B8E  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  6963  000B90  0EF4               	movlw	low STR_58
  6964  000B92  6FC3               	movwf	sprintf@f& (0+255),b
  6965  000B94  0E7F               	movlw	high STR_58
  6966  000B96  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  6967  000B98  EC8C  F00E         	call	_sprintf	;wreg free
  6968  000B9C  0100               	movlb	0	; () banked
  6969  000B9E  51C1               	movf	?_sprintf& (0+255),w,b
  6970  000BA0  ECEA  F032         	call	_write_LCD
  6971  000BA4                     
  6972                           ;CalculadoraLCD.c: 496: _delay((unsigned long)((300)*(4000000/4000.0)));
  6973  000BA4  0E02               	movlw	2
  6974  000BA6  6E74               	movwf	(??_nombresbaby+1)^0,c
  6975  000BA8  0E25               	movlw	37
  6976  000BAA  6E73               	movwf	??_nombresbaby^0,c
  6977  000BAC  0E63               	movlw	99
  6978  000BAE                     u5367:
  6979  000BAE  FFFF               	dw	65535	; errata NOP
  6980  000BB0  2EE8               	decfsz	wreg,f,c
  6981  000BB2  D7FD               	bra	u5367
  6982  000BB4  2E73               	decfsz	??_nombresbaby^0,f,c
  6983  000BB6  D7FB               	bra	u5367
  6984  000BB8  2E74               	decfsz	(??_nombresbaby+1)^0,f,c
  6985  000BBA  D7F9               	bra	u5367
  6986  000BBC  D000               	nop2	
  6987  000BBE                     
  6988                           ;CalculadoraLCD.c: 498: ins_LCD(131);
  6989  000BBE  0E83               	movlw	131
  6990  000BC0  EC94  F032         	call	_ins_LCD
  6991  000BC4                     
  6992                           ;CalculadoraLCD.c: 499: write_LCD(sprintf(buffer, "N"));
  6993  000BC4  0E04               	movlw	low _buffer
  6994  000BC6  0100               	movlb	0	; () banked
  6995  000BC8  6FC1               	movwf	sprintf@sp& (0+255),b
  6996  000BCA  0E01               	movlw	high _buffer
  6997  000BCC  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  6998  000BCE  0EF6               	movlw	low STR_59
  6999  000BD0  6FC3               	movwf	sprintf@f& (0+255),b
  7000  000BD2  0E7F               	movlw	high STR_59
  7001  000BD4  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  7002  000BD6  EC8C  F00E         	call	_sprintf	;wreg free
  7003  000BDA  0100               	movlb	0	; () banked
  7004  000BDC  51C1               	movf	?_sprintf& (0+255),w,b
  7005  000BDE  ECEA  F032         	call	_write_LCD
  7006  000BE2                     
  7007                           ;CalculadoraLCD.c: 500: ins_LCD(201);
  7008  000BE2  0EC9               	movlw	201
  7009  000BE4  EC94  F032         	call	_ins_LCD
  7010  000BE8                     
  7011                           ;CalculadoraLCD.c: 501: write_LCD(sprintf(buffer, "G"));
  7012  000BE8  0E04               	movlw	low _buffer
  7013  000BEA  0100               	movlb	0	; () banked
  7014  000BEC  6FC1               	movwf	sprintf@sp& (0+255),b
  7015  000BEE  0E01               	movlw	high _buffer
  7016  000BF0  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  7017  000BF2  0EEC               	movlw	low STR_60
  7018  000BF4  6FC3               	movwf	sprintf@f& (0+255),b
  7019  000BF6  0E7F               	movlw	high STR_60
  7020  000BF8  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  7021  000BFA  EC8C  F00E         	call	_sprintf	;wreg free
  7022  000BFE  0100               	movlb	0	; () banked
  7023  000C00  51C1               	movf	?_sprintf& (0+255),w,b
  7024  000C02  ECEA  F032         	call	_write_LCD
  7025  000C06                     
  7026                           ;CalculadoraLCD.c: 502: _delay((unsigned long)((300)*(4000000/4000.0)));
  7027  000C06  0E02               	movlw	2
  7028  000C08  6E74               	movwf	(??_nombresbaby+1)^0,c
  7029  000C0A  0E25               	movlw	37
  7030  000C0C  6E73               	movwf	??_nombresbaby^0,c
  7031  000C0E  0E63               	movlw	99
  7032  000C10                     u5377:
  7033  000C10  FFFF               	dw	65535	; errata NOP
  7034  000C12  2EE8               	decfsz	wreg,f,c
  7035  000C14  D7FD               	bra	u5377
  7036  000C16  2E73               	decfsz	??_nombresbaby^0,f,c
  7037  000C18  D7FB               	bra	u5377
  7038  000C1A  2E74               	decfsz	(??_nombresbaby+1)^0,f,c
  7039  000C1C  D7F9               	bra	u5377
  7040  000C1E  D000               	nop2	
  7041                           
  7042                           ;CalculadoraLCD.c: 504: ins_LCD(133);
  7043  000C20  0E85               	movlw	133
  7044  000C22  EC94  F032         	call	_ins_LCD
  7045  000C26                     
  7046                           ;CalculadoraLCD.c: 505: write_LCD(sprintf(buffer, "S"));
  7047  000C26  0E04               	movlw	low _buffer
  7048  000C28  0100               	movlb	0	; () banked
  7049  000C2A  6FC1               	movwf	sprintf@sp& (0+255),b
  7050  000C2C  0E01               	movlw	high _buffer
  7051  000C2E  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  7052  000C30  0EF8               	movlw	low STR_55
  7053  000C32  6FC3               	movwf	sprintf@f& (0+255),b
  7054  000C34  0E7F               	movlw	high STR_55
  7055  000C36  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  7056  000C38  EC8C  F00E         	call	_sprintf	;wreg free
  7057  000C3C  0100               	movlb	0	; () banked
  7058  000C3E  51C1               	movf	?_sprintf& (0+255),w,b
  7059  000C40  ECEA  F032         	call	_write_LCD
  7060  000C44                     
  7061                           ;CalculadoraLCD.c: 506: ins_LCD(140);
  7062  000C44  0E8C               	movlw	140
  7063  000C46  EC94  F032         	call	_ins_LCD
  7064                           
  7065                           ;CalculadoraLCD.c: 507: write_LCD(sprintf(buffer, "L"));
  7066  000C4A  0E04               	movlw	low _buffer
  7067  000C4C  0100               	movlb	0	; () banked
  7068  000C4E  6FC1               	movwf	sprintf@sp& (0+255),b
  7069  000C50  0E01               	movlw	high _buffer
  7070  000C52  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  7071  000C54  0EF4               	movlw	low STR_58
  7072  000C56  6FC3               	movwf	sprintf@f& (0+255),b
  7073  000C58  0E7F               	movlw	high STR_58
  7074  000C5A  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  7075  000C5C  EC8C  F00E         	call	_sprintf	;wreg free
  7076  000C60  0100               	movlb	0	; () banked
  7077  000C62  51C1               	movf	?_sprintf& (0+255),w,b
  7078  000C64  ECEA  F032         	call	_write_LCD
  7079  000C68                     
  7080                           ;CalculadoraLCD.c: 508: ins_LCD(194);
  7081  000C68  0EC2               	movlw	194
  7082  000C6A  EC94  F032         	call	_ins_LCD
  7083  000C6E                     
  7084                           ;CalculadoraLCD.c: 509: write_LCD(sprintf(buffer, "V"));
  7085  000C6E  0E04               	movlw	low _buffer
  7086  000C70  0100               	movlb	0	; () banked
  7087  000C72  6FC1               	movwf	sprintf@sp& (0+255),b
  7088  000C74  0E01               	movlw	high _buffer
  7089  000C76  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  7090  000C78  0EFC               	movlw	low STR_63
  7091  000C7A  6FC3               	movwf	sprintf@f& (0+255),b
  7092  000C7C  0E7F               	movlw	high STR_63
  7093  000C7E  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  7094  000C80  EC8C  F00E         	call	_sprintf	;wreg free
  7095  000C84  0100               	movlb	0	; () banked
  7096  000C86  51C1               	movf	?_sprintf& (0+255),w,b
  7097  000C88  ECEA  F032         	call	_write_LCD
  7098  000C8C                     
  7099                           ;CalculadoraLCD.c: 510: _delay((unsigned long)((300)*(4000000/4000.0)));
  7100  000C8C  0E02               	movlw	2
  7101  000C8E  6E74               	movwf	(??_nombresbaby+1)^0,c
  7102  000C90  0E25               	movlw	37
  7103  000C92  6E73               	movwf	??_nombresbaby^0,c
  7104  000C94  0E63               	movlw	99
  7105  000C96                     u5387:
  7106  000C96  FFFF               	dw	65535	; errata NOP
  7107  000C98  2EE8               	decfsz	wreg,f,c
  7108  000C9A  D7FD               	bra	u5387
  7109  000C9C  2E73               	decfsz	??_nombresbaby^0,f,c
  7110  000C9E  D7FB               	bra	u5387
  7111  000CA0  2E74               	decfsz	(??_nombresbaby+1)^0,f,c
  7112  000CA2  D7F9               	bra	u5387
  7113  000CA4  D000               	nop2	
  7114  000CA6                     
  7115                           ;CalculadoraLCD.c: 512: ins_LCD(134);
  7116  000CA6  0E86               	movlw	134
  7117  000CA8  EC94  F032         	call	_ins_LCD
  7118  000CAC                     
  7119                           ;CalculadoraLCD.c: 513: write_LCD(sprintf(buffer, "A"));
  7120  000CAC  0E04               	movlw	low _buffer
  7121  000CAE  0100               	movlb	0	; () banked
  7122  000CB0  6FC1               	movwf	sprintf@sp& (0+255),b
  7123  000CB2  0E01               	movlw	high _buffer
  7124  000CB4  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  7125  000CB6  0EE6               	movlw	low STR_52
  7126  000CB8  6FC3               	movwf	sprintf@f& (0+255),b
  7127  000CBA  0E7F               	movlw	high STR_52
  7128  000CBC  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  7129  000CBE  EC8C  F00E         	call	_sprintf	;wreg free
  7130  000CC2  0100               	movlb	0	; () banked
  7131  000CC4  51C1               	movf	?_sprintf& (0+255),w,b
  7132  000CC6  ECEA  F032         	call	_write_LCD
  7133  000CCA                     
  7134                           ;CalculadoraLCD.c: 514: ins_LCD(139);
  7135  000CCA  0E8B               	movlw	139
  7136  000CCC  EC94  F032         	call	_ins_LCD
  7137  000CD0                     
  7138                           ;CalculadoraLCD.c: 515: write_LCD(sprintf(buffer, "A"));
  7139  000CD0  0E04               	movlw	low _buffer
  7140  000CD2  0100               	movlb	0	; () banked
  7141  000CD4  6FC1               	movwf	sprintf@sp& (0+255),b
  7142  000CD6  0E01               	movlw	high _buffer
  7143  000CD8  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  7144  000CDA  0EE6               	movlw	low STR_52
  7145  000CDC  6FC3               	movwf	sprintf@f& (0+255),b
  7146  000CDE  0E7F               	movlw	high STR_52
  7147  000CE0  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  7148  000CE2  EC8C  F00E         	call	_sprintf	;wreg free
  7149  000CE6  0100               	movlb	0	; () banked
  7150  000CE8  51C1               	movf	?_sprintf& (0+255),w,b
  7151  000CEA  ECEA  F032         	call	_write_LCD
  7152  000CEE                     
  7153                           ;CalculadoraLCD.c: 516: ins_LCD(193);
  7154  000CEE  0EC1               	movlw	193
  7155  000CF0  EC94  F032         	call	_ins_LCD
  7156  000CF4                     
  7157                           ;CalculadoraLCD.c: 517: write_LCD(sprintf(buffer, "E"));
  7158  000CF4  0E04               	movlw	low _buffer
  7159  000CF6  0100               	movlb	0	; () banked
  7160  000CF8  6FC1               	movwf	sprintf@sp& (0+255),b
  7161  000CFA  0E01               	movlw	high _buffer
  7162  000CFC  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  7163  000CFE  0EEA               	movlw	low STR_66
  7164  000D00  6FC3               	movwf	sprintf@f& (0+255),b
  7165  000D02  0E7F               	movlw	high STR_66
  7166  000D04  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  7167  000D06  EC8C  F00E         	call	_sprintf	;wreg free
  7168  000D0A  0100               	movlb	0	; () banked
  7169  000D0C  51C1               	movf	?_sprintf& (0+255),w,b
  7170  000D0E  ECEA  F032         	call	_write_LCD
  7171  000D12                     
  7172                           ;CalculadoraLCD.c: 518: _delay((unsigned long)((300)*(4000000/4000.0)));
  7173  000D12  0E02               	movlw	2
  7174  000D14  6E74               	movwf	(??_nombresbaby+1)^0,c
  7175  000D16  0E25               	movlw	37
  7176  000D18  6E73               	movwf	??_nombresbaby^0,c
  7177  000D1A  0E63               	movlw	99
  7178  000D1C                     u5397:
  7179  000D1C  FFFF               	dw	65535	; errata NOP
  7180  000D1E  2EE8               	decfsz	wreg,f,c
  7181  000D20  D7FD               	bra	u5397
  7182  000D22  2E73               	decfsz	??_nombresbaby^0,f,c
  7183  000D24  D7FB               	bra	u5397
  7184  000D26  2E74               	decfsz	(??_nombresbaby+1)^0,f,c
  7185  000D28  D7F9               	bra	u5397
  7186  000D2A  D000               	nop2	
  7187  000D2C                     
  7188                           ;CalculadoraLCD.c: 520: ins_LCD(135);
  7189  000D2C  0E87               	movlw	135
  7190  000D2E  EC94  F032         	call	_ins_LCD
  7191  000D32                     
  7192                           ;CalculadoraLCD.c: 521: write_LCD(sprintf(buffer, "N"));
  7193  000D32  0E04               	movlw	low _buffer
  7194  000D34  0100               	movlb	0	; () banked
  7195  000D36  6FC1               	movwf	sprintf@sp& (0+255),b
  7196  000D38  0E01               	movlw	high _buffer
  7197  000D3A  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  7198  000D3C  0EF6               	movlw	low STR_59
  7199  000D3E  6FC3               	movwf	sprintf@f& (0+255),b
  7200  000D40  0E7F               	movlw	high STR_59
  7201  000D42  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  7202  000D44  EC8C  F00E         	call	_sprintf	;wreg free
  7203  000D48  0100               	movlb	0	; () banked
  7204  000D4A  51C1               	movf	?_sprintf& (0+255),w,b
  7205  000D4C  ECEA  F032         	call	_write_LCD
  7206                           
  7207                           ;CalculadoraLCD.c: 522: ins_LCD(138);
  7208  000D50  0E8A               	movlw	138
  7209  000D52  EC94  F032         	call	_ins_LCD
  7210  000D56                     
  7211                           ;CalculadoraLCD.c: 523: write_LCD(sprintf(buffer, "V"));
  7212  000D56  0E04               	movlw	low _buffer
  7213  000D58  0100               	movlb	0	; () banked
  7214  000D5A  6FC1               	movwf	sprintf@sp& (0+255),b
  7215  000D5C  0E01               	movlw	high _buffer
  7216  000D5E  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  7217  000D60  0EFC               	movlw	low STR_63
  7218  000D62  6FC3               	movwf	sprintf@f& (0+255),b
  7219  000D64  0E7F               	movlw	high STR_63
  7220  000D66  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  7221  000D68  EC8C  F00E         	call	_sprintf	;wreg free
  7222  000D6C  0100               	movlb	0	; () banked
  7223  000D6E  51C1               	movf	?_sprintf& (0+255),w,b
  7224  000D70  ECEA  F032         	call	_write_LCD
  7225  000D74                     
  7226                           ;CalculadoraLCD.c: 524: ins_LCD(195);
  7227  000D74  0EC3               	movlw	195
  7228  000D76  EC94  F032         	call	_ins_LCD
  7229                           
  7230                           ;CalculadoraLCD.c: 525: write_LCD(sprintf(buffer, "I"));
  7231  000D7A  0E04               	movlw	low _buffer
  7232  000D7C  0100               	movlb	0	; () banked
  7233  000D7E  6FC1               	movwf	sprintf@sp& (0+255),b
  7234  000D80  0E01               	movlw	high _buffer
  7235  000D82  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  7236  000D84  0EEE               	movlw	low STR_69
  7237  000D86  6FC3               	movwf	sprintf@f& (0+255),b
  7238  000D88  0E7F               	movlw	high STR_69
  7239  000D8A  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  7240  000D8C  EC8C  F00E         	call	_sprintf	;wreg free
  7241  000D90  0100               	movlb	0	; () banked
  7242  000D92  51C1               	movf	?_sprintf& (0+255),w,b
  7243  000D94  ECEA  F032         	call	_write_LCD
  7244  000D98                     
  7245                           ;CalculadoraLCD.c: 526: _delay((unsigned long)((300)*(4000000/4000.0)));
  7246  000D98  0E02               	movlw	2
  7247  000D9A  6E74               	movwf	(??_nombresbaby+1)^0,c
  7248  000D9C  0E25               	movlw	37
  7249  000D9E  6E73               	movwf	??_nombresbaby^0,c
  7250  000DA0  0E63               	movlw	99
  7251  000DA2                     u5407:
  7252  000DA2  FFFF               	dw	65535	; errata NOP
  7253  000DA4  2EE8               	decfsz	wreg,f,c
  7254  000DA6  D7FD               	bra	u5407
  7255  000DA8  2E73               	decfsz	??_nombresbaby^0,f,c
  7256  000DAA  D7FB               	bra	u5407
  7257  000DAC  2E74               	decfsz	(??_nombresbaby+1)^0,f,c
  7258  000DAE  D7F9               	bra	u5407
  7259  000DB0  D000               	nop2	
  7260  000DB2                     
  7261                           ;CalculadoraLCD.c: 528: ins_LCD(136);
  7262  000DB2  0E88               	movlw	136
  7263  000DB4  EC94  F032         	call	_ins_LCD
  7264  000DB8                     
  7265                           ;CalculadoraLCD.c: 529: write_LCD(sprintf(buffer, "DO"));
  7266  000DB8  0E04               	movlw	low _buffer
  7267  000DBA  0100               	movlb	0	; () banked
  7268  000DBC  6FC1               	movwf	sprintf@sp& (0+255),b
  7269  000DBE  0E01               	movlw	high _buffer
  7270  000DC0  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  7271  000DC2  0EE1               	movlw	low STR_70
  7272  000DC4  6FC3               	movwf	sprintf@f& (0+255),b
  7273  000DC6  0E7F               	movlw	high STR_70
  7274  000DC8  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  7275  000DCA  EC8C  F00E         	call	_sprintf	;wreg free
  7276  000DCE  0100               	movlb	0	; () banked
  7277  000DD0  51C1               	movf	?_sprintf& (0+255),w,b
  7278  000DD2  ECEA  F032         	call	_write_LCD
  7279  000DD6                     
  7280                           ;CalculadoraLCD.c: 530: ins_LCD(192);
  7281  000DD6  0EC0               	movlw	192
  7282  000DD8  EC94  F032         	call	_ins_LCD
  7283  000DDC                     
  7284                           ;CalculadoraLCD.c: 531: write_LCD(sprintf(buffer, "K"));
  7285  000DDC  0E04               	movlw	low _buffer
  7286  000DDE  0100               	movlb	0	; () banked
  7287  000DE0  6FC1               	movwf	sprintf@sp& (0+255),b
  7288  000DE2  0E01               	movlw	high _buffer
  7289  000DE4  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  7290  000DE6  0EF2               	movlw	low STR_71
  7291  000DE8  6FC3               	movwf	sprintf@f& (0+255),b
  7292  000DEA  0E7F               	movlw	high STR_71
  7293  000DEC  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  7294  000DEE  EC8C  F00E         	call	_sprintf	;wreg free
  7295  000DF2  0100               	movlb	0	; () banked
  7296  000DF4  51C1               	movf	?_sprintf& (0+255),w,b
  7297  000DF6  ECEA  F032         	call	_write_LCD
  7298  000DFA                     
  7299                           ;CalculadoraLCD.c: 532: ins_LCD(196);
  7300  000DFA  0EC4               	movlw	196
  7301  000DFC  EC94  F032         	call	_ins_LCD
  7302  000E00                     
  7303                           ;CalculadoraLCD.c: 533: write_LCD(sprintf(buffer, "N"));
  7304  000E00  0E04               	movlw	low _buffer
  7305  000E02  0100               	movlb	0	; () banked
  7306  000E04  6FC1               	movwf	sprintf@sp& (0+255),b
  7307  000E06  0E01               	movlw	high _buffer
  7308  000E08  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  7309  000E0A  0EF6               	movlw	low STR_59
  7310  000E0C  6FC3               	movwf	sprintf@f& (0+255),b
  7311  000E0E  0E7F               	movlw	high STR_59
  7312  000E10  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  7313  000E12  EC8C  F00E         	call	_sprintf	;wreg free
  7314  000E16  0100               	movlb	0	; () banked
  7315  000E18  51C1               	movf	?_sprintf& (0+255),w,b
  7316  000E1A  ECEA  F032         	call	_write_LCD
  7317  000E1E                     
  7318                           ;CalculadoraLCD.c: 534: _delay((unsigned long)((300)*(4000000/4000.0)));
  7319  000E1E  0E02               	movlw	2
  7320  000E20  6E74               	movwf	(??_nombresbaby+1)^0,c
  7321  000E22  0E25               	movlw	37
  7322  000E24  6E73               	movwf	??_nombresbaby^0,c
  7323  000E26  0E63               	movlw	99
  7324  000E28                     u5417:
  7325  000E28  FFFF               	dw	65535	; errata NOP
  7326  000E2A  2EE8               	decfsz	wreg,f,c
  7327  000E2C  D7FD               	bra	u5417
  7328  000E2E  2E73               	decfsz	??_nombresbaby^0,f,c
  7329  000E30  D7FB               	bra	u5417
  7330  000E32  2E74               	decfsz	(??_nombresbaby+1)^0,f,c
  7331  000E34  D7F9               	bra	u5417
  7332  000E36  D000               	nop2	
  7333  000E38  0012               	return		;funcret
  7334  000E3A  FFFF               	dw	65535	; errata NOP
  7335  000E3C                     __end_of_nombresbaby:
  7336                           	opt callstack 0
  7337                           
  7338 ;; *************** function _write_LCD *****************
  7339 ;; Defined at:
  7340 ;;		line 461 in file "CalculadoraLCD.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;  tam             1    wreg     unsigned char 
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;  tam             1    2[COMRAM] unsigned char 
  7345 ;;  i               1    3[COMRAM] unsigned char 
  7346 ;; Return value:  Size  Location     Type
  7347 ;;                  1    wreg      void 
  7348 ;; Registers used:
  7349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7350 ;; Tracked objects:
  7351 ;;		On entry : 0/0
  7352 ;;		On exit  : 0/0
  7353 ;;		Unchanged: 0/0
  7354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7355 ;;      Params:         0       0       0       0       0       0       0
  7356 ;;      Locals:         2       0       0       0       0       0       0
  7357 ;;      Temps:          0       0       0       0       0       0       0
  7358 ;;      Totals:         2       0       0       0       0       0       0
  7359 ;;Total ram usage:        2 bytes
  7360 ;; Hardware stack levels used:    1
  7361 ;; Hardware stack levels required when called:    2
  7362 ;; This function calls:
  7363 ;;		_dato_LCD
  7364 ;; This function is called by:
  7365 ;;		_main
  7366 ;;		_nombresbaby
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           	psect	text10
  7371  0065D4                     __ptext10:
  7372                           	opt callstack 0
  7373  0065D4                     _write_LCD:
  7374                           	opt callstack 0
  7375  0065D4  FFFF               	dw	65535	; assembler added errata NOP
  7376                           
  7377                           ;incstack = 0
  7378                           ;write_LCD@tam stored from wreg
  7379  0065D6  6E03               	movwf	write_LCD@tam^0,c
  7380  0065D8                     
  7381                           ;CalculadoraLCD.c: 463: unsigned char i;;CalculadoraLCD.c: 465: for (i = 0; i < tam; i++
      +                          ) {
  7382  0065D8  0E00               	movlw	0
  7383  0065DA  6E04               	movwf	write_LCD@i^0,c
  7384  0065DC  EFFB  F032         	goto	l4789
  7385  0065E0                     l4785:
  7386  0065E0  FFFF               	dw	65535	; assembler added errata NOP
  7387                           
  7388                           ;CalculadoraLCD.c: 466: dato_LCD(buffer[i]);
  7389  0065E2  0E04               	movlw	low _buffer
  7390  0065E4  2404               	addwf	write_LCD@i^0,w,c
  7391  0065E6  6ED9               	movwf	fsr2l,c
  7392  0065E8  6ADA               	clrf	fsr2h,c
  7393  0065EA  0E01               	movlw	high _buffer
  7394  0065EC  22DA               	addwfc	fsr2h,f,c
  7395  0065EE  50DF               	movf	indf2,w,c
  7396  0065F0  ECA6  F032         	call	_dato_LCD
  7397  0065F4  2A04               	incf	write_LCD@i^0,f,c
  7398  0065F6                     l4789:
  7399  0065F6  FFFF               	dw	65535	; assembler added errata NOP
  7400  0065F8  5003               	movf	write_LCD@tam^0,w,c
  7401  0065FA  5C04               	subwf	write_LCD@i^0,w,c
  7402  0065FC  A0D8               	btfss	status,0,c
  7403  0065FE  EF03  F033         	goto	u4691
  7404  006602  EF06  F033         	goto	u4690
  7405  006606                     u4691:
  7406  006606  FFFF               	dw	65535	; assembler added errata NOP
  7407  006608  EFF0  F032         	goto	l4785
  7408  00660C                     u4690:
  7409  00660C  FFFF               	dw	65535	; assembler added errata NOP
  7410  00660E  0012               	return		;funcret
  7411  006610  FFFF               	dw	65535	; errata NOP
  7412  006612                     __end_of_write_LCD:
  7413                           	opt callstack 0
  7414                           
  7415 ;; *************** function _dato_LCD *****************
  7416 ;; Defined at:
  7417 ;;		line 445 in file "CalculadoraLCD.c"
  7418 ;; Parameters:    Size  Location     Type
  7419 ;;  dato            1    wreg     unsigned char 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;  dato            1    1[COMRAM] unsigned char 
  7422 ;; Return value:  Size  Location     Type
  7423 ;;                  1    wreg      void 
  7424 ;; Registers used:
  7425 ;;		wreg, cstack
  7426 ;; Tracked objects:
  7427 ;;		On entry : 0/0
  7428 ;;		On exit  : 0/0
  7429 ;;		Unchanged: 0/0
  7430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7431 ;;      Params:         0       0       0       0       0       0       0
  7432 ;;      Locals:         1       0       0       0       0       0       0
  7433 ;;      Temps:          1       0       0       0       0       0       0
  7434 ;;      Totals:         2       0       0       0       0       0       0
  7435 ;;Total ram usage:        2 bytes
  7436 ;; Hardware stack levels used:    1
  7437 ;; Hardware stack levels required when called:    1
  7438 ;; This function calls:
  7439 ;;		_enable
  7440 ;; This function is called by:
  7441 ;;		_write_LCD
  7442 ;; This function uses a non-reentrant model
  7443 ;;
  7444                           
  7445                           	psect	text11
  7446  00654C                     __ptext11:
  7447                           	opt callstack 0
  7448  00654C                     _dato_LCD:
  7449                           	opt callstack 0
  7450  00654C  FFFF               	dw	65535	; assembler added errata NOP
  7451                           
  7452                           ;incstack = 0
  7453                           ;dato_LCD@dato stored from wreg
  7454  00654E  6E02               	movwf	dato_LCD@dato^0,c
  7455  006550                     
  7456                           ;CalculadoraLCD.c: 446: RE0 = 1;
  7457  006550  8084               	bsf	3972,0,c	;volatile
  7458  006552                     
  7459                           ;CalculadoraLCD.c: 447: PORTD = dato;
  7460  006552  C002  FF83         	movff	dato_LCD@dato,3971	;volatile
  7461  006556                     
  7462                           ;CalculadoraLCD.c: 448: enable();
  7463  006556  EC8A  F032         	call	_enable	;wreg free
  7464  00655A                     
  7465                           ;CalculadoraLCD.c: 449: _delay((unsigned long)((2)*(4000000/4000.0)));
  7466  00655A  0E02               	movlw	2
  7467  00655C  6E01               	movwf	??_dato_LCD^0,c
  7468  00655E  0EF2               	movlw	242
  7469  006560                     u5427:
  7470  006560  FFFF               	dw	65535	; errata NOP
  7471  006562  2EE8               	decfsz	wreg,f,c
  7472  006564  D7FD               	bra	u5427
  7473  006566  2E01               	decfsz	??_dato_LCD^0,f,c
  7474  006568  D7FB               	bra	u5427
  7475  00656A  D000               	nop2	
  7476  00656C  0012               	return		;funcret
  7477  00656E  FFFF               	dw	65535	; errata NOP
  7478  006570                     __end_of_dato_LCD:
  7479                           	opt callstack 0
  7480                           
  7481 ;; *************** function _sprintf *****************
  7482 ;; Defined at:
  7483 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;  sp              2    0[BANK0 ] PTR unsigned char 
  7486 ;;		 -> buffer(40), 
  7487 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  7488 ;;		 -> STR_72(2), STR_71(2), STR_70(3), STR_69(2), 
  7489 ;;		 -> STR_68(2), STR_67(2), STR_66(2), STR_65(2), 
  7490 ;;		 -> STR_64(2), STR_63(2), STR_62(2), STR_61(2), 
  7491 ;;		 -> STR_60(2), STR_59(2), STR_58(2), STR_57(2), 
  7492 ;;		 -> STR_56(2), STR_55(2), STR_54(2), STR_53(2), 
  7493 ;;		 -> STR_52(2), STR_51(2), STR_50(2), STR_49(2), 
  7494 ;;		 -> STR_48(2), STR_47(22), STR_46(22), STR_45(5), 
  7495 ;;		 -> STR_44(13), STR_43(10), STR_42(14), STR_41(8), 
  7496 ;;		 -> STR_40(15), STR_39(22), STR_38(22), STR_37(22), 
  7497 ;;		 -> STR_36(22), STR_35(17), STR_34(11), STR_33(11), 
  7498 ;;		 -> STR_32(17), STR_31(11), STR_30(11), STR_29(17), 
  7499 ;;		 -> STR_28(11), STR_27(11), STR_26(17), STR_25(11), 
  7500 ;;		 -> STR_24(11), STR_23(17), STR_22(11), STR_21(11), 
  7501 ;;		 -> STR_20(17), STR_19(11), STR_18(11), STR_17(15), 
  7502 ;;		 -> STR_16(14), STR_15(5), STR_14(3), STR_13(14), 
  7503 ;;		 -> STR_12(5), STR_11(3), STR_10(15), STR_9(5), 
  7504 ;;		 -> STR_8(3), STR_7(15), STR_6(5), STR_5(3), 
  7505 ;;		 -> STR_4(14), STR_3(9), STR_2(9), STR_1(13), 
  7506 ;; Auto vars:     Size  Location     Type
  7507 ;;  fval            4   40[BANK0 ] PTR const unsigned char 
  7508 ;;  val             4   36[BANK0 ] unsigned long 
  7509 ;;  tmpval          4   32[BANK0 ] struct .
  7510 ;;  cp              3    0        PTR const unsigned char 
  7511 ;;  prec            2   44[BANK0 ] int 
  7512 ;;  eexp            2   30[BANK0 ] int 
  7513 ;;  flag            2   28[BANK0 ] unsigned short 
  7514 ;;  ccnt            2   26[BANK0 ] int 
  7515 ;;  ap              2   24[BANK0 ] PTR void [1]
  7516 ;;		 -> ?_sprintf(2), 
  7517 ;;  len             2    0        unsigned int 
  7518 ;;  width           2    0        int 
  7519 ;;  c               1   46[BANK0 ] unsigned char 
  7520 ;;  d               1    0        unsigned char 
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  2    0[BANK0 ] int 
  7523 ;; Registers used:
  7524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7530 ;;      Params:         0      20       0       0       0       0       0
  7531 ;;      Locals:         0      27       0       0       0       0       0
  7532 ;;      Temps:          4       0       0       0       0       0       0
  7533 ;;      Totals:         4      47       0       0       0       0       0
  7534 ;;Total ram usage:       51 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; Hardware stack levels required when called:    2
  7537 ;; This function calls:
  7538 ;;		___awdiv
  7539 ;;		___fladd
  7540 ;;		___fleq
  7541 ;;		___flge
  7542 ;;		___flmul
  7543 ;;		___flneg
  7544 ;;		___flsub
  7545 ;;		___fltol
  7546 ;;		___lldiv
  7547 ;;		___llmod
  7548 ;;		___wmul
  7549 ;;		___xxtofl
  7550 ;;		__div_to_l_
  7551 ;;		__tdiv_to_l_
  7552 ;;		_fround
  7553 ;;		_isdigit
  7554 ;;		_scale
  7555 ;; This function is called by:
  7556 ;;		_main
  7557 ;;		_nombresbaby
  7558 ;; This function uses a non-reentrant model
  7559 ;;
  7560                           
  7561                           	psect	text12
  7562  001D18                     __ptext12:
  7563                           	opt callstack 0
  7564  001D18                     _sprintf:
  7565                           	opt callstack 0
  7566  001D18  FFFF               	dw	65535	; assembler added errata NOP
  7567  001D1A                     
  7568                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 527: int ccnt = 0;
  7569  001D1A  0E00               	movlw	0
  7570  001D1C  0100               	movlb	0	; () banked
  7571  001D1E  6FDC               	movwf	(sprintf@ccnt+1)& (0+255),b
  7572  001D20  0E00               	movlw	0
  7573  001D22  6FDB               	movwf	sprintf@ccnt& (0+255),b
  7574  001D24                     
  7575                           ; BSR set to: 0
  7576                           ;doprnt.c: 532: char d;;doprnt.c: 533: double fval;;doprnt.c: 534: int eexp;;doprnt.c: 5
      +                          40: union {;doprnt.c: 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543:
      +                           } tmpval;;doprnt.c: 545: unsigned long val;;doprnt.c: 546: unsigned len;;doprnt.c: 547:
      +                           const char * cp;;doprnt.c: 550: *ap = __va_start();
  7577  001D24  0EC5               	movlw	low (?_sprintf+4)
  7578  001D26  6FD9               	movwf	sprintf@ap& (0+255),b
  7579  001D28  0E00               	movlw	high (?_sprintf+4)
  7580  001D2A  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  7581                           
  7582                           ;doprnt.c: 553: while((c = *f++)) {
  7583  001D2C  EF41  F014         	goto	l4775
  7584  001D30                     l4525:
  7585  001D30  FFFF               	dw	65535	; assembler added errata NOP
  7586                           
  7587                           ; BSR set to: 0
  7588                           ;doprnt.c: 555: if(c != '%')
  7589  001D32  0E25               	movlw	37
  7590  001D34  19EF               	xorwf	sprintf@c& (0+255),w,b
  7591  001D36  B4D8               	btfsc	status,2,c
  7592  001D38  EFA0  F00E         	goto	u4341
  7593  001D3C  EFA3  F00E         	goto	u4340
  7594  001D40                     u4341:
  7595  001D40  FFFF               	dw	65535	; assembler added errata NOP
  7596  001D42  EFB0  F00E         	goto	l4533
  7597  001D46                     u4340:
  7598  001D46  FFFF               	dw	65535	; assembler added errata NOP
  7599  001D48                     
  7600                           ; BSR set to: 0
  7601                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)),(++ccnt));
  7602  001D48  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  7603  001D4C  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  7604  001D50  C0EF  FFDF         	movff	sprintf@c,indf2
  7605  001D54                     
  7606                           ; BSR set to: 0
  7607  001D54  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  7608  001D56  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  7609  001D58                     
  7610                           ; BSR set to: 0
  7611  001D58  4BDB               	infsnz	sprintf@ccnt& (0+255),f,b
  7612  001D5A  2BDC               	incf	(sprintf@ccnt+1)& (0+255),f,b
  7613                           
  7614                           ;doprnt.c: 559: continue;
  7615  001D5C  EF41  F014         	goto	l4775
  7616  001D60                     l4533:
  7617  001D60  FFFF               	dw	65535	; assembler added errata NOP
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  7621  001D62  0E00               	movlw	0
  7622  001D64  6FDE               	movwf	(sprintf@flag+1)& (0+255),b
  7623  001D66  0E00               	movlw	0
  7624  001D68  6FDD               	movwf	sprintf@flag& (0+255),b
  7625  001D6A                     
  7626                           ; BSR set to: 0
  7627                           ;doprnt.c: 628: if(*f == '.') {
  7628  001D6A  C0C3  FFF6         	movff	sprintf@f,tblptrl
  7629  001D6E  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  7630  001D72                     	if	0	;tblptru may be non-zero
  7631  001D72                     	endif
  7632  001D72                     	if	0	;tblptru may be non-zero
  7633  001D72                     	endif
  7634  001D72  0008               	tblrd		*
  7635  001D74  FFFF               	dw	65535	; errata NOP
  7636  001D76  50F5               	movf	tablat,w,c
  7637  001D78  0A2E               	xorlw	46
  7638  001D7A  A4D8               	btfss	status,2,c
  7639  001D7C  EFC2  F00E         	goto	u4351
  7640  001D80  EFC5  F00E         	goto	u4350
  7641  001D84                     u4351:
  7642  001D84  FFFF               	dw	65535	; assembler added errata NOP
  7643  001D86  EF0B  F00F         	goto	l4549
  7644  001D8A                     u4350:
  7645  001D8A  FFFF               	dw	65535	; assembler added errata NOP
  7646  001D8C                     
  7647                           ; BSR set to: 0
  7648                           ;doprnt.c: 629: flag |= 0x4000;
  7649  001D8C  8DDE               	bsf	(sprintf@flag+1)& (0+255),6,b
  7650                           
  7651                           ;doprnt.c: 630: f++;
  7652  001D8E  4BC3               	infsnz	sprintf@f& (0+255),f,b
  7653  001D90  2BC4               	incf	(sprintf@f+1)& (0+255),f,b
  7654  001D92                     
  7655                           ; BSR set to: 0
  7656                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  7657  001D92  0E00               	movlw	0
  7658  001D94  6FEE               	movwf	(sprintf@prec+1)& (0+255),b
  7659  001D96  0E00               	movlw	0
  7660  001D98  6FED               	movwf	sprintf@prec& (0+255),b
  7661                           
  7662                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  7663  001D9A  EFF6  F00E         	goto	l4547
  7664  001D9E                     l4541:
  7665  001D9E  FFFF               	dw	65535	; assembler added errata NOP
  7666                           
  7667                           ;doprnt.c: 647: prec *= 10;
  7668  001DA0  C0ED  F001         	movff	sprintf@prec,___wmul@multiplier
  7669  001DA4  C0EE  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
  7670  001DA8  0E00               	movlw	0
  7671  001DAA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7672  001DAC  0E0A               	movlw	10
  7673  001DAE  6E03               	movwf	___wmul@multiplicand^0,c
  7674  001DB0  ECB8  F032         	call	___wmul	;wreg free
  7675  001DB4  C001  F0ED         	movff	?___wmul,sprintf@prec
  7676  001DB8  C002  F0EE         	movff	?___wmul+1,sprintf@prec+1
  7677  001DBC                     
  7678                           ;doprnt.c: 648: prec += *f++ - '0';
  7679  001DBC  0ED0               	movlw	208
  7680  001DBE  6E6F               	movwf	??_sprintf^0,c
  7681  001DC0  0EFF               	movlw	255
  7682  001DC2  6E70               	movwf	(??_sprintf+1)^0,c
  7683  001DC4  C0C3  FFF6         	movff	sprintf@f,tblptrl
  7684  001DC8  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  7685  001DCC                     	if	0	;tblptru may be non-zero
  7686  001DCC                     	endif
  7687  001DCC                     	if	0	;tblptru may be non-zero
  7688  001DCC                     	endif
  7689  001DCC  0008               	tblrd		*
  7690  001DCE  FFFF               	dw	65535	; errata NOP
  7691  001DD0  50F5               	movf	tablat,w,c
  7692  001DD2  6E71               	movwf	(??_sprintf+2)^0,c
  7693  001DD4  6A72               	clrf	(??_sprintf+3)^0,c
  7694  001DD6  506F               	movf	??_sprintf^0,w,c
  7695  001DD8  2671               	addwf	(??_sprintf+2)^0,f,c
  7696  001DDA  5070               	movf	(??_sprintf+1)^0,w,c
  7697  001DDC  2272               	addwfc	(??_sprintf+3)^0,f,c
  7698  001DDE  5071               	movf	(??_sprintf+2)^0,w,c
  7699  001DE0  0100               	movlb	0	; () banked
  7700  001DE2  27ED               	addwf	sprintf@prec& (0+255),f,b
  7701  001DE4  5072               	movf	(??_sprintf+3)^0,w,c
  7702  001DE6  23EE               	addwfc	(sprintf@prec+1)& (0+255),f,b
  7703  001DE8                     
  7704                           ; BSR set to: 0
  7705  001DE8  4BC3               	infsnz	sprintf@f& (0+255),f,b
  7706  001DEA  2BC4               	incf	(sprintf@f+1)& (0+255),f,b
  7707  001DEC                     l4547:
  7708  001DEC  FFFF               	dw	65535	; assembler added errata NOP
  7709                           
  7710                           ; BSR set to: 0
  7711  001DEE  C0C3  FFF6         	movff	sprintf@f,tblptrl
  7712  001DF2  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  7713  001DF6                     	if	0	;tblptru may be non-zero
  7714  001DF6                     	endif
  7715  001DF6                     	if	0	;tblptru may be non-zero
  7716  001DF6                     	endif
  7717  001DF6  0008               	tblrd		*
  7718  001DF8  FFFF               	dw	65535	; errata NOP
  7719  001DFA  50F5               	movf	tablat,w,c
  7720  001DFC  EC09  F033         	call	_isdigit
  7721  001E00  B0D8               	btfsc	status,0,c
  7722  001E02  EF05  F00F         	goto	u4361
  7723  001E06  EF08  F00F         	goto	u4360
  7724  001E0A                     u4361:
  7725  001E0A  FFFF               	dw	65535	; assembler added errata NOP
  7726  001E0C  EFCF  F00E         	goto	l4541
  7727  001E10                     u4360:
  7728  001E10  FFFF               	dw	65535	; assembler added errata NOP
  7729  001E12  EF17  F00F         	goto	l4557
  7730  001E16                     l4549:
  7731  001E16  FFFF               	dw	65535	; assembler added errata NOP
  7732                           
  7733                           ; BSR set to: 0
  7734                           ;doprnt.c: 652: prec = 0;
  7735  001E18  0E00               	movlw	0
  7736  001E1A  6FEE               	movwf	(sprintf@prec+1)& (0+255),b
  7737  001E1C  0E00               	movlw	0
  7738  001E1E  6FED               	movwf	sprintf@prec& (0+255),b
  7739  001E20                     
  7740                           ; BSR set to: 0
  7741                           ;doprnt.c: 654: flag |= 0x1000;
  7742  001E20  89DE               	bsf	(sprintf@flag+1)& (0+255),4,b
  7743  001E22  EF17  F00F         	goto	l4557
  7744  001E26                     l4553:
  7745  001E26  FFFF               	dw	65535	; assembler added errata NOP
  7746                           
  7747                           ; BSR set to: 0
  7748                           ;doprnt.c: 689: flag |= 0x400;
  7749  001E28  85DE               	bsf	(sprintf@flag+1)& (0+255),2,b
  7750                           
  7751                           ;doprnt.c: 690: break;
  7752  001E2A  EF36  F00F         	goto	l4559
  7753  001E2E                     l4557:
  7754  001E2E  FFFF               	dw	65535	; assembler added errata NOP
  7755  001E30  C0C3  FFF6         	movff	sprintf@f,tblptrl
  7756  001E34  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  7757  001E38  0100               	movlb	0	; () banked
  7758  001E3A  4BC3               	infsnz	sprintf@f& (0+255),f,b
  7759  001E3C  2BC4               	incf	(sprintf@f+1)& (0+255),f,b
  7760  001E3E                     	if	0	;tblptru may be non-zero
  7761  001E3E                     	endif
  7762  001E3E                     	if	0	;tblptru may be non-zero
  7763  001E3E                     	endif
  7764  001E3E  0008               	tblrd		*
  7765  001E40  FFFF               	dw	65535	; errata NOP
  7766  001E42  CFF5 F0EF          	movff	tablat,sprintf@c
  7767  001E46  51EF               	movf	sprintf@c& (0+255),w,b
  7768                           
  7769                           ; Switch size 1, requested type "simple"
  7770                           ; Number of cases is 4, Range of values is 0 to 105
  7771                           ; switch strategies available:
  7772                           ; Name         Instructions Cycles
  7773                           ; simple_byte           13     7 (average)
  7774                           ;	Chosen strategy is simple_byte
  7775  001E48  0A00               	xorlw	0	; case 0
  7776  001E4A  B4D8               	btfsc	status,2,c
  7777  001E4C  EF55  F014         	goto	l4777
  7778  001E50  0A64               	xorlw	100	; case 100
  7779  001E52  B4D8               	btfsc	status,2,c
  7780  001E54  EF36  F00F         	goto	l4559
  7781  001E58  0A02               	xorlw	2	; case 102
  7782  001E5A  B4D8               	btfsc	status,2,c
  7783  001E5C  EF13  F00F         	goto	l4553
  7784  001E60  0A0F               	xorlw	15	; case 105
  7785  001E62  B4D8               	btfsc	status,2,c
  7786  001E64  EF36  F00F         	goto	l4559
  7787  001E68  EF41  F014         	goto	l4775
  7788  001E6C                     l4559:
  7789  001E6C  FFFF               	dw	65535	; assembler added errata NOP
  7790                           
  7791                           ; BSR set to: 0
  7792                           ;doprnt.c: 851: if(flag & (0x700)) {
  7793  001E6E  0E07               	movlw	7
  7794  001E70  15DE               	andwf	(sprintf@flag+1)& (0+255),w,b
  7795  001E72  B4D8               	btfsc	status,2,c
  7796  001E74  EF3E  F00F         	goto	u4371
  7797  001E78  EF41  F00F         	goto	u4370
  7798  001E7C                     u4371:
  7799  001E7C  FFFF               	dw	65535	; assembler added errata NOP
  7800  001E7E  EF28  F013         	goto	l4719
  7801  001E82                     u4370:
  7802  001E82  FFFF               	dw	65535	; assembler added errata NOP
  7803  001E84                     
  7804                           ; BSR set to: 0
  7805                           ;doprnt.c: 853: if(flag & 0x1000)
  7806  001E84  A9DE               	btfss	(sprintf@flag+1)& (0+255),4,b
  7807  001E86  EF47  F00F         	goto	u4381
  7808  001E8A  EF4A  F00F         	goto	u4380
  7809  001E8E                     u4381:
  7810  001E8E  FFFF               	dw	65535	; assembler added errata NOP
  7811  001E90  EF4F  F00F         	goto	l4565
  7812  001E94                     u4380:
  7813  001E94  FFFF               	dw	65535	; assembler added errata NOP
  7814  001E96                     
  7815                           ; BSR set to: 0
  7816                           ;doprnt.c: 855: prec = 6;
  7817  001E96  0E00               	movlw	0
  7818  001E98  6FEE               	movwf	(sprintf@prec+1)& (0+255),b
  7819  001E9A  0E06               	movlw	6
  7820  001E9C  6FED               	movwf	sprintf@prec& (0+255),b
  7821  001E9E                     l4565:
  7822  001E9E  FFFF               	dw	65535	; assembler added errata NOP
  7823                           
  7824                           ; BSR set to: 0
  7825                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7826  001EA0  C0D9  FFD9         	movff	sprintf@ap,fsr2l
  7827  001EA4  C0DA  FFDA         	movff	sprintf@ap+1,fsr2h
  7828  001EA8  CFDE F0E9          	movff	postinc2,sprintf@fval
  7829  001EAC  CFDE F0EA          	movff	postinc2,sprintf@fval+1
  7830  001EB0  CFDE F0EB          	movff	postinc2,sprintf@fval+2
  7831  001EB4  CFDE F0EC          	movff	postinc2,sprintf@fval+3
  7832  001EB8                     
  7833                           ; BSR set to: 0
  7834  001EB8  0E04               	movlw	4
  7835  001EBA  27D9               	addwf	sprintf@ap& (0+255),f,b
  7836  001EBC  0E00               	movlw	0
  7837  001EBE  23DA               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7838  001EC0                     
  7839                           ; BSR set to: 0
  7840                           ;doprnt.c: 857: if(fval < 0.0) {
  7841  001EC0  BFEC               	btfsc	(sprintf@fval+3)& (0+255),7,b
  7842  001EC2  EF68  F00F         	goto	u4390
  7843  001EC6  EF65  F00F         	goto	u4391
  7844  001ECA                     u4391:
  7845  001ECA  FFFF               	dw	65535	; assembler added errata NOP
  7846  001ECC  EF7E  F00F         	goto	l4575
  7847  001ED0                     u4390:
  7848  001ED0  FFFF               	dw	65535	; assembler added errata NOP
  7849  001ED2                     
  7850                           ; BSR set to: 0
  7851                           ;doprnt.c: 858: fval = -fval;
  7852  001ED2  C0E9  F001         	movff	sprintf@fval,___flneg@f1
  7853  001ED6  C0EA  F002         	movff	sprintf@fval+1,___flneg@f1+1
  7854  001EDA  C0EB  F003         	movff	sprintf@fval+2,___flneg@f1+2
  7855  001EDE  C0EC  F004         	movff	sprintf@fval+3,___flneg@f1+3
  7856  001EE2  EC29  F033         	call	___flneg	;wreg free
  7857  001EE6  C001  F0E9         	movff	?___flneg,sprintf@fval
  7858  001EEA  C002  F0EA         	movff	?___flneg+1,sprintf@fval+1
  7859  001EEE  C003  F0EB         	movff	?___flneg+2,sprintf@fval+2
  7860  001EF2  C004  F0EC         	movff	?___flneg+3,sprintf@fval+3
  7861  001EF6                     
  7862                           ;doprnt.c: 859: flag |= 0x03;
  7863  001EF6  0E03               	movlw	3
  7864  001EF8  0100               	movlb	0	; () banked
  7865  001EFA  13DD               	iorwf	sprintf@flag& (0+255),f,b
  7866  001EFC                     l4575:
  7867  001EFC  FFFF               	dw	65535	; assembler added errata NOP
  7868                           
  7869                           ; BSR set to: 0
  7870                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  7871  001EFE  0E00               	movlw	0
  7872  001F00  6FE0               	movwf	(sprintf@eexp+1)& (0+255),b
  7873  001F02  0E00               	movlw	0
  7874  001F04  6FDF               	movwf	sprintf@eexp& (0+255),b
  7875  001F06                     
  7876                           ; BSR set to: 0
  7877                           ;doprnt.c: 862: if( fval!=0) {
  7878  001F06  C0E9  F01D         	movff	sprintf@fval,___fleq@ff1
  7879  001F0A  C0EA  F01E         	movff	sprintf@fval+1,___fleq@ff1+1
  7880  001F0E  C0EB  F01F         	movff	sprintf@fval+2,___fleq@ff1+2
  7881  001F12  C0EC  F020         	movff	sprintf@fval+3,___fleq@ff1+3
  7882  001F16  0E00               	movlw	0
  7883  001F18  6E21               	movwf	___fleq@ff2^0,c
  7884  001F1A  0E00               	movlw	0
  7885  001F1C  6E22               	movwf	(___fleq@ff2+1)^0,c
  7886  001F1E  0E00               	movlw	0
  7887  001F20  6E23               	movwf	(___fleq@ff2+2)^0,c
  7888  001F22  0E00               	movlw	0
  7889  001F24  6E24               	movwf	(___fleq@ff2+3)^0,c
  7890  001F26  EC3A  F035         	call	___fleq	;wreg free
  7891  001F2A  B0D8               	btfsc	status,0,c
  7892  001F2C  EF9A  F00F         	goto	u4401
  7893  001F30  EF9D  F00F         	goto	u4400
  7894  001F34                     u4401:
  7895  001F34  FFFF               	dw	65535	; assembler added errata NOP
  7896  001F36  EF39  F010         	goto	l4603
  7897  001F3A                     u4400:
  7898  001F3A  FFFF               	dw	65535	; assembler added errata NOP
  7899  001F3C                     
  7900                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  7901  001F3C  0100               	movlb	0	; () banked
  7902  001F3E  35EB               	rlcf	(sprintf@fval+2)& (0+255),w,b
  7903  001F40  35EC               	rlcf	(sprintf@fval+3)& (0+255),w,b
  7904  001F42  0F82               	addlw	130
  7905  001F44  6FDF               	movwf	sprintf@eexp& (0+255),b
  7906  001F46  6BE0               	clrf	(sprintf@eexp+1)& (0+255),b
  7907  001F48  0EFF               	movlw	255
  7908  001F4A  23E0               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  7909  001F4C                     
  7910                           ; BSR set to: 0
  7911                           ;doprnt.c: 864: eexp--;
  7912  001F4C  07DF               	decf	sprintf@eexp& (0+255),f,b
  7913  001F4E  A0D8               	btfss	status,0,c
  7914  001F50  07E0               	decf	(sprintf@eexp+1)& (0+255),f,b
  7915  001F52                     
  7916                           ; BSR set to: 0
  7917                           ;doprnt.c: 865: eexp *= 3;
  7918  001F52  C0DF  F001         	movff	sprintf@eexp,___wmul@multiplier
  7919  001F56  C0E0  F002         	movff	sprintf@eexp+1,___wmul@multiplier+1
  7920  001F5A  0E00               	movlw	0
  7921  001F5C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7922  001F5E  0E03               	movlw	3
  7923  001F60  6E03               	movwf	___wmul@multiplicand^0,c
  7924  001F62  ECB8  F032         	call	___wmul	;wreg free
  7925  001F66  C001  F0DF         	movff	?___wmul,sprintf@eexp
  7926  001F6A  C002  F0E0         	movff	?___wmul+1,sprintf@eexp+1
  7927  001F6E                     
  7928                           ;doprnt.c: 866: eexp /= 10;
  7929  001F6E  C0DF  F007         	movff	sprintf@eexp,___awdiv@dividend
  7930  001F72  C0E0  F008         	movff	sprintf@eexp+1,___awdiv@dividend+1
  7931  001F76  0E00               	movlw	0
  7932  001F78  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  7933  001F7A  0E0A               	movlw	10
  7934  001F7C  6E09               	movwf	___awdiv@divisor^0,c
  7935  001F7E  EC74  F036         	call	___awdiv	;wreg free
  7936  001F82  C007  F0DF         	movff	?___awdiv,sprintf@eexp
  7937  001F86  C008  F0E0         	movff	?___awdiv+1,sprintf@eexp+1
  7938  001F8A                     
  7939                           ;doprnt.c: 867: if(eexp < 0)
  7940  001F8A  0100               	movlb	0	; () banked
  7941  001F8C  BFE0               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  7942  001F8E  EFCE  F00F         	goto	u4410
  7943  001F92  EFCB  F00F         	goto	u4411
  7944  001F96                     u4411:
  7945  001F96  FFFF               	dw	65535	; assembler added errata NOP
  7946  001F98  EFD2  F00F         	goto	l4591
  7947  001F9C                     u4410:
  7948  001F9C  FFFF               	dw	65535	; assembler added errata NOP
  7949  001F9E                     
  7950                           ; BSR set to: 0
  7951                           ;doprnt.c: 868: eexp--;
  7952  001F9E  07DF               	decf	sprintf@eexp& (0+255),f,b
  7953  001FA0  A0D8               	btfss	status,0,c
  7954  001FA2  07E0               	decf	(sprintf@eexp+1)& (0+255),f,b
  7955  001FA4                     l4591:
  7956  001FA4  FFFF               	dw	65535	; assembler added errata NOP
  7957                           
  7958                           ; BSR set to: 0
  7959                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  7960  001FA6  51DF               	movf	sprintf@eexp& (0+255),w,b
  7961  001FA8  0800               	sublw	0
  7962  001FAA  EC1E  F007         	call	_scale
  7963  001FAE  C04A  F0E1         	movff	?_scale,sprintf@tmpval
  7964  001FB2  C04B  F0E2         	movff	?_scale+1,sprintf@tmpval+1
  7965  001FB6  C04C  F0E3         	movff	?_scale+2,sprintf@tmpval+2
  7966  001FBA  C04D  F0E4         	movff	?_scale+3,sprintf@tmpval+3
  7967  001FBE                     
  7968                           ;doprnt.c: 873: tmpval.integ *= fval;
  7969  001FBE  C0E1  F031         	movff	sprintf@tmpval,___flmul@b
  7970  001FC2  C0E2  F032         	movff	sprintf@tmpval+1,___flmul@b+1
  7971  001FC6  C0E3  F033         	movff	sprintf@tmpval+2,___flmul@b+2
  7972  001FCA  C0E4  F034         	movff	sprintf@tmpval+3,___flmul@b+3
  7973  001FCE  C0E9  F035         	movff	sprintf@fval,___flmul@a
  7974  001FD2  C0EA  F036         	movff	sprintf@fval+1,___flmul@a+1
  7975  001FD6  C0EB  F037         	movff	sprintf@fval+2,___flmul@a+2
  7976  001FDA  C0EC  F038         	movff	sprintf@fval+3,___flmul@a+3
  7977  001FDE  EC66  F009         	call	___flmul	;wreg free
  7978  001FE2  C031  F0E1         	movff	?___flmul,sprintf@tmpval
  7979  001FE6  C032  F0E2         	movff	?___flmul+1,sprintf@tmpval+1
  7980  001FEA  C033  F0E3         	movff	?___flmul+2,sprintf@tmpval+2
  7981  001FEE  C034  F0E4         	movff	?___flmul+3,sprintf@tmpval+3
  7982  001FF2                     
  7983                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  7984  001FF2  C0E1  F001         	movff	sprintf@tmpval,___flge@ff1
  7985  001FF6  C0E2  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  7986  001FFA  C0E3  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  7987  001FFE  C0E4  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  7988  002002  0E00               	movlw	0
  7989  002004  6E05               	movwf	___flge@ff2^0,c
  7990  002006  0E00               	movlw	0
  7991  002008  6E06               	movwf	(___flge@ff2+1)^0,c
  7992  00200A  0E80               	movlw	128
  7993  00200C  6E07               	movwf	(___flge@ff2+2)^0,c
  7994  00200E  0E3F               	movlw	63
  7995  002010  6E08               	movwf	(___flge@ff2+3)^0,c
  7996  002012  EC79  F037         	call	___flge	;wreg free
  7997  002016  B0D8               	btfsc	status,0,c
  7998  002018  EF10  F010         	goto	u4421
  7999  00201C  EF13  F010         	goto	u4420
  8000  002020                     u4421:
  8001  002020  FFFF               	dw	65535	; assembler added errata NOP
  8002  002022  EF1A  F010         	goto	l4599
  8003  002026                     u4420:
  8004  002026  FFFF               	dw	65535	; assembler added errata NOP
  8005  002028                     
  8006                           ;doprnt.c: 875: eexp--;
  8007  002028  0100               	movlb	0	; () banked
  8008  00202A  07DF               	decf	sprintf@eexp& (0+255),f,b
  8009  00202C  A0D8               	btfss	status,0,c
  8010  00202E  07E0               	decf	(sprintf@eexp+1)& (0+255),f,b
  8011  002030  EF39  F010         	goto	l4603
  8012  002034                     l4599:
  8013  002034  FFFF               	dw	65535	; assembler added errata NOP
  8014                           
  8015                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  8016  002036  C0E1  F001         	movff	sprintf@tmpval,___flge@ff1
  8017  00203A  C0E2  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  8018  00203E  C0E3  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  8019  002042  C0E4  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  8020  002046  0E00               	movlw	0
  8021  002048  6E05               	movwf	___flge@ff2^0,c
  8022  00204A  0E00               	movlw	0
  8023  00204C  6E06               	movwf	(___flge@ff2+1)^0,c
  8024  00204E  0E20               	movlw	32
  8025  002050  6E07               	movwf	(___flge@ff2+2)^0,c
  8026  002052  0E41               	movlw	65
  8027  002054  6E08               	movwf	(___flge@ff2+3)^0,c
  8028  002056  EC79  F037         	call	___flge	;wreg free
  8029  00205A  A0D8               	btfss	status,0,c
  8030  00205C  EF32  F010         	goto	u4431
  8031  002060  EF35  F010         	goto	u4430
  8032  002064                     u4431:
  8033  002064  FFFF               	dw	65535	; assembler added errata NOP
  8034  002066  EF39  F010         	goto	l4603
  8035  00206A                     u4430:
  8036  00206A  FFFF               	dw	65535	; assembler added errata NOP
  8037  00206C                     
  8038                           ;doprnt.c: 877: eexp++;
  8039  00206C  0100               	movlb	0	; () banked
  8040  00206E  4BDF               	infsnz	sprintf@eexp& (0+255),f,b
  8041  002070  2BE0               	incf	(sprintf@eexp+1)& (0+255),f,b
  8042  002072                     l4603:
  8043  002072  FFFF               	dw	65535	; assembler added errata NOP
  8044                           
  8045                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  8046  002074  0100               	movlb	0	; () banked
  8047  002076  BFEE               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8048  002078  EF4A  F010         	goto	u4440
  8049  00207C  51EE               	movf	(sprintf@prec+1)& (0+255),w,b
  8050  00207E  E107               	bnz	u4441
  8051  002080  0E0D               	movlw	13
  8052  002082  5DED               	subwf	sprintf@prec& (0+255),w,b
  8053  002084  B0D8               	btfsc	status,0,c
  8054  002086  EF47  F010         	goto	u4441
  8055  00208A  EF4A  F010         	goto	u4440
  8056  00208E                     u4441:
  8057  00208E  FFFF               	dw	65535	; assembler added errata NOP
  8058  002090  EF68  F010         	goto	l4607
  8059  002094                     u4440:
  8060  002094  FFFF               	dw	65535	; assembler added errata NOP
  8061  002096                     
  8062                           ; BSR set to: 0
  8063                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  8064  002096  C0E9  F057         	movff	sprintf@fval,___fladd@b
  8065  00209A  C0EA  F058         	movff	sprintf@fval+1,___fladd@b+1
  8066  00209E  C0EB  F059         	movff	sprintf@fval+2,___fladd@b+2
  8067  0020A2  C0EC  F05A         	movff	sprintf@fval+3,___fladd@b+3
  8068  0020A6  51ED               	movf	sprintf@prec& (0+255),w,b
  8069  0020A8  EC5C  F03D         	call	_fround
  8070  0020AC  C04A  F05B         	movff	?_fround,___fladd@a
  8071  0020B0  C04B  F05C         	movff	?_fround+1,___fladd@a+1
  8072  0020B4  C04C  F05D         	movff	?_fround+2,___fladd@a+2
  8073  0020B8  C04D  F05E         	movff	?_fround+3,___fladd@a+3
  8074  0020BC  ECB8  F00B         	call	___fladd	;wreg free
  8075  0020C0  C057  F0E9         	movff	?___fladd,sprintf@fval
  8076  0020C4  C058  F0EA         	movff	?___fladd+1,sprintf@fval+1
  8077  0020C8  C059  F0EB         	movff	?___fladd+2,sprintf@fval+2
  8078  0020CC  C05A  F0EC         	movff	?___fladd+3,sprintf@fval+3
  8079  0020D0                     l4607:
  8080  0020D0  FFFF               	dw	65535	; assembler added errata NOP
  8081                           
  8082                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  8083  0020D2  0100               	movlb	0	; () banked
  8084  0020D4  BFE0               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  8085  0020D6  EF79  F010         	goto	u4450
  8086  0020DA  51E0               	movf	(sprintf@eexp+1)& (0+255),w,b
  8087  0020DC  E107               	bnz	u4451
  8088  0020DE  0E0A               	movlw	10
  8089  0020E0  5DDF               	subwf	sprintf@eexp& (0+255),w,b
  8090  0020E2  B0D8               	btfsc	status,0,c
  8091  0020E4  EF76  F010         	goto	u4451
  8092  0020E8  EF79  F010         	goto	u4450
  8093  0020EC                     u4451:
  8094  0020EC  FFFF               	dw	65535	; assembler added errata NOP
  8095  0020EE  EFBC  F010         	goto	l4615
  8096  0020F2                     u4450:
  8097  0020F2  FFFF               	dw	65535	; assembler added errata NOP
  8098  0020F4                     
  8099                           ; BSR set to: 0
  8100  0020F4  C0E9  F01D         	movff	sprintf@fval,___fleq@ff1
  8101  0020F8  C0EA  F01E         	movff	sprintf@fval+1,___fleq@ff1+1
  8102  0020FC  C0EB  F01F         	movff	sprintf@fval+2,___fleq@ff1+2
  8103  002100  C0EC  F020         	movff	sprintf@fval+3,___fleq@ff1+3
  8104  002104  0E00               	movlw	0
  8105  002106  6E21               	movwf	___fleq@ff2^0,c
  8106  002108  0E00               	movlw	0
  8107  00210A  6E22               	movwf	(___fleq@ff2+1)^0,c
  8108  00210C  0E00               	movlw	0
  8109  00210E  6E23               	movwf	(___fleq@ff2+2)^0,c
  8110  002110  0E00               	movlw	0
  8111  002112  6E24               	movwf	(___fleq@ff2+3)^0,c
  8112  002114  EC3A  F035         	call	___fleq	;wreg free
  8113  002118  B0D8               	btfsc	status,0,c
  8114  00211A  EF91  F010         	goto	u4461
  8115  00211E  EF94  F010         	goto	u4460
  8116  002122                     u4461:
  8117  002122  FFFF               	dw	65535	; assembler added errata NOP
  8118  002124  EF16  F011         	goto	l4629
  8119  002128                     u4460:
  8120  002128  FFFF               	dw	65535	; assembler added errata NOP
  8121  00212A  C0E9  F053         	movff	sprintf@fval,___fltol@f1
  8122  00212E  C0EA  F054         	movff	sprintf@fval+1,___fltol@f1+1
  8123  002132  C0EB  F055         	movff	sprintf@fval+2,___fltol@f1+2
  8124  002136  C0EC  F056         	movff	sprintf@fval+3,___fltol@f1+3
  8125  00213A  EC0D  F038         	call	___fltol	;wreg free
  8126  00213E  5053               	movf	?___fltol^0,w,c
  8127  002140  1054               	iorwf	(?___fltol+1)^0,w,c
  8128  002142  1055               	iorwf	(?___fltol+2)^0,w,c
  8129  002144  1056               	iorwf	(?___fltol+3)^0,w,c
  8130  002146  A4D8               	btfss	status,2,c
  8131  002148  EFA8  F010         	goto	u4471
  8132  00214C  EFAB  F010         	goto	u4470
  8133  002150                     u4471:
  8134  002150  FFFF               	dw	65535	; assembler added errata NOP
  8135  002152  EF16  F011         	goto	l4629
  8136  002156                     u4470:
  8137  002156  FFFF               	dw	65535	; assembler added errata NOP
  8138  002158  0100               	movlb	0	; () banked
  8139  00215A  BFE0               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  8140  00215C  EFB9  F010         	goto	u4481
  8141  002160  51E0               	movf	(sprintf@eexp+1)& (0+255),w,b
  8142  002162  E10A               	bnz	u4480
  8143  002164  0E02               	movlw	2
  8144  002166  5DDF               	subwf	sprintf@eexp& (0+255),w,b
  8145  002168  A0D8               	btfss	status,0,c
  8146  00216A  EFB9  F010         	goto	u4481
  8147  00216E  EFBC  F010         	goto	u4480
  8148  002172                     u4481:
  8149  002172  FFFF               	dw	65535	; assembler added errata NOP
  8150  002174  EF16  F011         	goto	l4629
  8151  002178                     u4480:
  8152  002178                     l4615:
  8153  002178  FFFF               	dw	65535	; assembler added errata NOP
  8154                           
  8155                           ; BSR set to: 0
  8156                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  8157  00217A  C0E1  F001         	movff	sprintf@tmpval,___flge@ff1
  8158  00217E  C0E2  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  8159  002182  C0E3  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  8160  002186  C0E4  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  8161  00218A  0E5F               	movlw	95
  8162  00218C  6E05               	movwf	___flge@ff2^0,c
  8163  00218E  0E70               	movlw	112
  8164  002190  6E06               	movwf	(___flge@ff2+1)^0,c
  8165  002192  0E89               	movlw	137
  8166  002194  6E07               	movwf	(___flge@ff2+2)^0,c
  8167  002196  0E40               	movlw	64
  8168  002198  6E08               	movwf	(___flge@ff2+3)^0,c
  8169  00219A  EC79  F037         	call	___flge	;wreg free
  8170  00219E  B0D8               	btfsc	status,0,c
  8171  0021A0  EFD4  F010         	goto	u4491
  8172  0021A4  EFD7  F010         	goto	u4490
  8173  0021A8                     u4491:
  8174  0021A8  FFFF               	dw	65535	; assembler added errata NOP
  8175  0021AA  EFDF  F010         	goto	l4619
  8176  0021AE                     u4490:
  8177  0021AE  FFFF               	dw	65535	; assembler added errata NOP
  8178  0021B0                     
  8179                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  8180  0021B0  0100               	movlb	0	; () banked
  8181  0021B2  0EF7               	movlw	247
  8182  0021B4  27DF               	addwf	sprintf@eexp& (0+255),f,b
  8183  0021B6  0EFF               	movlw	255
  8184  0021B8  23E0               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  8185                           
  8186                           ;doprnt.c: 1148: }else{
  8187  0021BA  EFE5  F010         	goto	l4621
  8188  0021BE                     l4619:
  8189  0021BE  FFFF               	dw	65535	; assembler added errata NOP
  8190                           
  8191                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  8192  0021C0  0100               	movlb	0	; () banked
  8193  0021C2  0EF8               	movlw	248
  8194  0021C4  27DF               	addwf	sprintf@eexp& (0+255),f,b
  8195  0021C6  0EFF               	movlw	255
  8196  0021C8  23E0               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  8197  0021CA                     l4621:
  8198  0021CA  FFFF               	dw	65535	; assembler added errata NOP
  8199                           
  8200                           ; BSR set to: 0
  8201                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  8202  0021CC  51DF               	movf	sprintf@eexp& (0+255),w,b
  8203  0021CE  EC1E  F007         	call	_scale
  8204  0021D2  C04A  F0E1         	movff	?_scale,sprintf@tmpval
  8205  0021D6  C04B  F0E2         	movff	?_scale+1,sprintf@tmpval+1
  8206  0021DA  C04C  F0E3         	movff	?_scale+2,sprintf@tmpval+2
  8207  0021DE  C04D  F0E4         	movff	?_scale+3,sprintf@tmpval+3
  8208  0021E2  C0E9  F001         	movff	sprintf@fval,__div_to_l_@f1
  8209  0021E6  C0EA  F002         	movff	sprintf@fval+1,__div_to_l_@f1+1
  8210  0021EA  C0EB  F003         	movff	sprintf@fval+2,__div_to_l_@f1+2
  8211  0021EE  C0EC  F004         	movff	sprintf@fval+3,__div_to_l_@f1+3
  8212  0021F2  C0E1  F005         	movff	sprintf@tmpval,__div_to_l_@f2
  8213  0021F6  C0E2  F006         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  8214  0021FA  C0E3  F007         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  8215  0021FE  C0E4  F008         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  8216  002202  EC04  F03A         	call	__div_to_l_	;wreg free
  8217  002206  C001  F0E5         	movff	?__div_to_l_,sprintf@val
  8218  00220A  C002  F0E6         	movff	?__div_to_l_+1,sprintf@val+1
  8219  00220E  C003  F0E7         	movff	?__div_to_l_+2,sprintf@val+2
  8220  002212  C004  F0E8         	movff	?__div_to_l_+3,sprintf@val+3
  8221  002216                     
  8222                           ;doprnt.c: 1155: fval = 0.0;
  8223  002216  0E00               	movlw	0
  8224  002218  0100               	movlb	0	; () banked
  8225  00221A  6FE9               	movwf	sprintf@fval& (0+255),b
  8226  00221C  0E00               	movlw	0
  8227  00221E  6FEA               	movwf	(sprintf@fval+1)& (0+255),b
  8228  002220  0E00               	movlw	0
  8229  002222  6FEB               	movwf	(sprintf@fval+2)& (0+255),b
  8230  002224  0E00               	movlw	0
  8231  002226  6FEC               	movwf	(sprintf@fval+3)& (0+255),b
  8232                           
  8233                           ;doprnt.c: 1156: } else {
  8234  002228  EF53  F011         	goto	l4633
  8235  00222C                     l4629:
  8236  00222C  FFFF               	dw	65535	; assembler added errata NOP
  8237                           
  8238                           ;doprnt.c: 1157: val = (unsigned long)fval;
  8239  00222E  C0E9  F053         	movff	sprintf@fval,___fltol@f1
  8240  002232  C0EA  F054         	movff	sprintf@fval+1,___fltol@f1+1
  8241  002236  C0EB  F055         	movff	sprintf@fval+2,___fltol@f1+2
  8242  00223A  C0EC  F056         	movff	sprintf@fval+3,___fltol@f1+3
  8243  00223E  EC0D  F038         	call	___fltol	;wreg free
  8244  002242  C053  F0E5         	movff	?___fltol,sprintf@val
  8245  002246  C054  F0E6         	movff	?___fltol+1,sprintf@val+1
  8246  00224A  C055  F0E7         	movff	?___fltol+2,sprintf@val+2
  8247  00224E  C056  F0E8         	movff	?___fltol+3,sprintf@val+3
  8248                           
  8249                           ;doprnt.c: 1158: fval -= (double)val;
  8250  002252  C0E9  F067         	movff	sprintf@fval,___flsub@b
  8251  002256  C0EA  F068         	movff	sprintf@fval+1,___flsub@b+1
  8252  00225A  C0EB  F069         	movff	sprintf@fval+2,___flsub@b+2
  8253  00225E  C0EC  F06A         	movff	sprintf@fval+3,___flsub@b+3
  8254  002262  C0E5  F00F         	movff	sprintf@val,___xxtofl@val
  8255  002266  C0E6  F010         	movff	sprintf@val+1,___xxtofl@val+1
  8256  00226A  C0E7  F011         	movff	sprintf@val+2,___xxtofl@val+2
  8257  00226E  C0E8  F012         	movff	sprintf@val+3,___xxtofl@val+3
  8258  002272  0E00               	movlw	0
  8259  002274  EC60  F03C         	call	___xxtofl
  8260  002278  C00F  F06B         	movff	?___xxtofl,___flsub@a
  8261  00227C  C010  F06C         	movff	?___xxtofl+1,___flsub@a+1
  8262  002280  C011  F06D         	movff	?___xxtofl+2,___flsub@a+2
  8263  002284  C012  F06E         	movff	?___xxtofl+3,___flsub@a+3
  8264  002288  EC6B  F033         	call	___flsub	;wreg free
  8265  00228C  C067  F0E9         	movff	?___flsub,sprintf@fval
  8266  002290  C068  F0EA         	movff	?___flsub+1,sprintf@fval+1
  8267  002294  C069  F0EB         	movff	?___flsub+2,sprintf@fval+2
  8268  002298  C06A  F0EC         	movff	?___flsub+3,sprintf@fval+3
  8269  00229C                     
  8270                           ;doprnt.c: 1159: eexp = 0;
  8271  00229C  0E00               	movlw	0
  8272  00229E  0100               	movlb	0	; () banked
  8273  0022A0  6FE0               	movwf	(sprintf@eexp+1)& (0+255),b
  8274  0022A2  0E00               	movlw	0
  8275  0022A4  6FDF               	movwf	sprintf@eexp& (0+255),b
  8276  0022A6                     l4633:
  8277  0022A6  FFFF               	dw	65535	; assembler added errata NOP
  8278                           
  8279                           ; BSR set to: 0
  8280                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  8281  0022A8  0E01               	movlw	1
  8282  0022AA  6FEF               	movwf	sprintf@c& (0+255),b
  8283  0022AC                     l4639:
  8284  0022AC  FFFF               	dw	65535	; assembler added errata NOP
  8285                           
  8286                           ; BSR set to: 0
  8287                           ;doprnt.c: 1163: if(val < dpowers[c])
  8288  0022AE  51EF               	movf	sprintf@c& (0+255),w,b
  8289  0022B0  0D04               	mullw	4
  8290  0022B2  0E2D               	movlw	low _dpowers
  8291  0022B4  24F3               	addwf	243,w,c
  8292  0022B6  6EF6               	movwf	tblptrl,c
  8293  0022B8  0E7E               	movlw	high _dpowers
  8294  0022BA  20F4               	addwfc	244,w,c
  8295  0022BC  6EF7               	movwf	tblptrh,c
  8296  0022BE                     	if	0	;There are less than 3 active tblptr bytes
  8297  0022BE                     	endif
  8298  0022BE  0009               	tblrd		*+
  8299  0022C0  FFFF               	dw	65535	; errata NOP
  8300  0022C2  50F5               	movf	tablat,w,c
  8301  0022C4  5DE5               	subwf	sprintf@val& (0+255),w,b
  8302  0022C6  0009               	tblrd		*+
  8303  0022C8  FFFF               	dw	65535	; errata NOP
  8304  0022CA  50F5               	movf	tablat,w,c
  8305  0022CC  59E6               	subwfb	(sprintf@val+1)& (0+255),w,b
  8306  0022CE  0009               	tblrd		*+
  8307  0022D0  FFFF               	dw	65535	; errata NOP
  8308  0022D2  50F5               	movf	tablat,w,c
  8309  0022D4  59E7               	subwfb	(sprintf@val+2)& (0+255),w,b
  8310  0022D6  0009               	tblrd		*+
  8311  0022D8  FFFF               	dw	65535	; errata NOP
  8312  0022DA  50F5               	movf	tablat,w,c
  8313  0022DC  59E8               	subwfb	(sprintf@val+3)& (0+255),w,b
  8314  0022DE  B0D8               	btfsc	status,0,c
  8315  0022E0  EF74  F011         	goto	u4501
  8316  0022E4  EF77  F011         	goto	u4500
  8317  0022E8                     u4501:
  8318  0022E8  FFFF               	dw	65535	; assembler added errata NOP
  8319  0022EA  EF7A  F011         	goto	l4643
  8320  0022EE                     u4500:
  8321  0022EE  FFFF               	dw	65535	; assembler added errata NOP
  8322  0022F0  EF86  F011         	goto	l4647
  8323  0022F4                     l4643:
  8324  0022F4  FFFF               	dw	65535	; assembler added errata NOP
  8325                           
  8326                           ; BSR set to: 0
  8327  0022F6  2BEF               	incf	sprintf@c& (0+255),f,b
  8328  0022F8                     
  8329                           ; BSR set to: 0
  8330  0022F8  0E0A               	movlw	10
  8331  0022FA  19EF               	xorwf	sprintf@c& (0+255),w,b
  8332  0022FC  A4D8               	btfss	status,2,c
  8333  0022FE  EF83  F011         	goto	u4511
  8334  002302  EF86  F011         	goto	u4510
  8335  002306                     u4511:
  8336  002306  FFFF               	dw	65535	; assembler added errata NOP
  8337  002308  EF56  F011         	goto	l4639
  8338  00230C                     u4510:
  8339  00230C                     l4647:
  8340  00230C  FFFF               	dw	65535	; assembler added errata NOP
  8341                           
  8342                           ; BSR set to: 0
  8343                           ;doprnt.c: 1201: {;doprnt.c: 1214: if(flag & 0x03)
  8344  00230E  0E03               	movlw	3
  8345  002310  15DD               	andwf	sprintf@flag& (0+255),w,b
  8346  002312  6E6F               	movwf	??_sprintf^0,c
  8347  002314  0E00               	movlw	0
  8348  002316  15DE               	andwf	(sprintf@flag+1)& (0+255),w,b
  8349  002318  6E70               	movwf	(??_sprintf+1)^0,c
  8350  00231A  506F               	movf	??_sprintf^0,w,c
  8351  00231C  1070               	iorwf	(??_sprintf+1)^0,w,c
  8352  00231E  B4D8               	btfsc	status,2,c
  8353  002320  EF94  F011         	goto	u4521
  8354  002324  EF97  F011         	goto	u4520
  8355  002328                     u4521:
  8356  002328  FFFF               	dw	65535	; assembler added errata NOP
  8357  00232A  EFF4  F011         	goto	l4665
  8358  00232E                     u4520:
  8359  00232E  FFFF               	dw	65535	; assembler added errata NOP
  8360  002330                     
  8361                           ; BSR set to: 0
  8362                           ;doprnt.c: 1216: ((*sp++ = ('-')),(++ccnt));
  8363  002330  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  8364  002334  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  8365  002338  0E2D               	movlw	45
  8366  00233A  6EDF               	movwf	indf2,c
  8367  00233C                     l4651:
  8368  00233C  FFFF               	dw	65535	; assembler added errata NOP
  8369                           
  8370                           ; BSR set to: 0
  8371  00233E  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  8372  002340  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  8373  002342                     
  8374                           ; BSR set to: 0
  8375  002342  4BDB               	infsnz	sprintf@ccnt& (0+255),f,b
  8376  002344  2BDC               	incf	(sprintf@ccnt+1)& (0+255),f,b
  8377  002346  EFF4  F011         	goto	l4665
  8378  00234A                     l4655:
  8379  00234A  FFFF               	dw	65535	; assembler added errata NOP
  8380                           
  8381                           ; BSR set to: 0
  8382                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  8383  00234C  C0E5  F001         	movff	sprintf@val,___lldiv@dividend
  8384  002350  C0E6  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  8385  002354  C0E7  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  8386  002358  C0E8  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  8387  00235C  51EF               	movf	sprintf@c& (0+255),w,b
  8388  00235E  0D04               	mullw	4
  8389  002360  0E2D               	movlw	low _dpowers
  8390  002362  24F3               	addwf	243,w,c
  8391  002364  6EF6               	movwf	tblptrl,c
  8392  002366  0E7E               	movlw	high _dpowers
  8393  002368  20F4               	addwfc	244,w,c
  8394  00236A  6EF7               	movwf	tblptrh,c
  8395  00236C                     	if	0	;There are less than 3 active tblptr bytes
  8396  00236C                     	endif
  8397  00236C  0009               	tblrd		*+
  8398  00236E  FFFF               	dw	65535	; errata NOP
  8399  002370  CFF5 F005          	movff	tablat,___lldiv@divisor
  8400  002374  0009               	tblrd		*+
  8401  002376  FFFF               	dw	65535	; errata NOP
  8402  002378  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  8403  00237C  0009               	tblrd		*+
  8404  00237E  FFFF               	dw	65535	; errata NOP
  8405  002380  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  8406  002384  000A               	tblrd		*-
  8407  002386  FFFF               	dw	65535	; errata NOP
  8408  002388  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  8409  00238C  ECDB  F034         	call	___lldiv	;wreg free
  8410  002390  C001  F0E1         	movff	?___lldiv,sprintf@tmpval
  8411  002394  C002  F0E2         	movff	?___lldiv+1,sprintf@tmpval+1
  8412  002398  C003  F0E3         	movff	?___lldiv+2,sprintf@tmpval+2
  8413  00239C  C004  F0E4         	movff	?___lldiv+3,sprintf@tmpval+3
  8414  0023A0                     
  8415                           ;doprnt.c: 1228: tmpval.vd %= 10;
  8416  0023A0  C0E1  F00E         	movff	sprintf@tmpval,___llmod@dividend
  8417  0023A4  C0E2  F00F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8418  0023A8  C0E3  F010         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8419  0023AC  C0E4  F011         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8420  0023B0  0E0A               	movlw	10
  8421  0023B2  6E12               	movwf	___llmod@divisor^0,c
  8422  0023B4  0E00               	movlw	0
  8423  0023B6  6E13               	movwf	(___llmod@divisor+1)^0,c
  8424  0023B8  0E00               	movlw	0
  8425  0023BA  6E14               	movwf	(___llmod@divisor+2)^0,c
  8426  0023BC  0E00               	movlw	0
  8427  0023BE  6E15               	movwf	(___llmod@divisor+3)^0,c
  8428  0023C0  EC8A  F034         	call	___llmod	;wreg free
  8429  0023C4  C00E  F0E1         	movff	?___llmod,sprintf@tmpval
  8430  0023C8  C00F  F0E2         	movff	?___llmod+1,sprintf@tmpval+1
  8431  0023CC  C010  F0E3         	movff	?___llmod+2,sprintf@tmpval+2
  8432  0023D0  C011  F0E4         	movff	?___llmod+3,sprintf@tmpval+3
  8433  0023D4                     
  8434                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)),(++ccnt));
  8435  0023D4  0100               	movlb	0	; () banked
  8436  0023D6  51E1               	movf	sprintf@tmpval& (0+255),w,b
  8437  0023D8  0F30               	addlw	48
  8438  0023DA  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  8439  0023DE  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  8440  0023E2  6EDF               	movwf	indf2,c
  8441  0023E4  EF9E  F011         	goto	l4651
  8442  0023E8                     l4665:
  8443  0023E8  FFFF               	dw	65535	; assembler added errata NOP
  8444                           
  8445                           ; BSR set to: 0
  8446  0023EA  07EF               	decf	sprintf@c& (0+255),f,b
  8447  0023EC  29EF               	incf	sprintf@c& (0+255),w,b
  8448  0023EE  A4D8               	btfss	status,2,c
  8449  0023F0  EFFC  F011         	goto	u4531
  8450  0023F4  EFFF  F011         	goto	u4530
  8451  0023F8                     u4531:
  8452  0023F8  FFFF               	dw	65535	; assembler added errata NOP
  8453  0023FA  EFA5  F011         	goto	l4655
  8454  0023FE                     u4530:
  8455  0023FE  FFFF               	dw	65535	; assembler added errata NOP
  8456  002400  EF10  F012         	goto	l4675
  8457  002404                     l4667:
  8458  002404  FFFF               	dw	65535	; assembler added errata NOP
  8459                           
  8460                           ; BSR set to: 0
  8461                           ;doprnt.c: 1234: ((*sp++ = ('0')),(++ccnt));
  8462  002406  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  8463  00240A  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  8464  00240E  0E30               	movlw	48
  8465  002410  6EDF               	movwf	indf2,c
  8466  002412                     
  8467                           ; BSR set to: 0
  8468  002412  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  8469  002414  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  8470  002416                     
  8471                           ; BSR set to: 0
  8472  002416  4BDB               	infsnz	sprintf@ccnt& (0+255),f,b
  8473  002418  2BDC               	incf	(sprintf@ccnt+1)& (0+255),f,b
  8474  00241A                     
  8475                           ; BSR set to: 0
  8476                           ;doprnt.c: 1235: eexp--;
  8477  00241A  07DF               	decf	sprintf@eexp& (0+255),f,b
  8478  00241C  A0D8               	btfss	status,0,c
  8479  00241E  07E0               	decf	(sprintf@eexp+1)& (0+255),f,b
  8480  002420                     l4675:
  8481  002420  FFFF               	dw	65535	; assembler added errata NOP
  8482                           
  8483                           ; BSR set to: 0
  8484  002422  BFE0               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  8485  002424  EF1F  F012         	goto	u4540
  8486  002428  51E0               	movf	(sprintf@eexp+1)& (0+255),w,b
  8487  00242A  E106               	bnz	u4541
  8488  00242C  05DF               	decf	sprintf@eexp& (0+255),w,b
  8489  00242E  B0D8               	btfsc	status,0,c
  8490  002430  EF1C  F012         	goto	u4541
  8491  002434  EF1F  F012         	goto	u4540
  8492  002438                     u4541:
  8493  002438  FFFF               	dw	65535	; assembler added errata NOP
  8494  00243A  EF02  F012         	goto	l4667
  8495  00243E                     u4540:
  8496  00243E  FFFF               	dw	65535	; assembler added errata NOP
  8497  002440                     
  8498                           ; BSR set to: 0
  8499                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  8500  002440  BFEE               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8501  002442  EF2C  F012         	goto	u4551
  8502  002446  51EE               	movf	(sprintf@prec+1)& (0+255),w,b
  8503  002448  E10A               	bnz	u4550
  8504  00244A  0E09               	movlw	9
  8505  00244C  5DED               	subwf	sprintf@prec& (0+255),w,b
  8506  00244E  A0D8               	btfss	status,0,c
  8507  002450  EF2C  F012         	goto	u4551
  8508  002454  EF2F  F012         	goto	u4550
  8509  002458                     u4551:
  8510  002458  FFFF               	dw	65535	; assembler added errata NOP
  8511  00245A  EF34  F012         	goto	l283
  8512  00245E                     u4550:
  8513  00245E  FFFF               	dw	65535	; assembler added errata NOP
  8514  002460                     
  8515                           ; BSR set to: 0
  8516                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  8517  002460  0E08               	movlw	8
  8518  002462  6FEF               	movwf	sprintf@c& (0+255),b
  8519  002464  EF37  F012         	goto	l4681
  8520  002468                     l283:
  8521  002468  FFFF               	dw	65535	; assembler added errata NOP
  8522                           
  8523                           ; BSR set to: 0
  8524                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  8525  00246A  C0ED  F0EF         	movff	sprintf@prec,sprintf@c
  8526  00246E                     l4681:
  8527  00246E  FFFF               	dw	65535	; assembler added errata NOP
  8528                           
  8529                           ; BSR set to: 0
  8530                           ;doprnt.c: 1241: prec -= (int)c;
  8531  002470  51EF               	movf	sprintf@c& (0+255),w,b
  8532  002472  5FED               	subwf	sprintf@prec& (0+255),f,b
  8533  002474  0E00               	movlw	0
  8534  002476  5BEE               	subwfb	(sprintf@prec+1)& (0+255),f,b
  8535  002478                     
  8536                           ; BSR set to: 0
  8537                           ;doprnt.c: 1245: if(c)
  8538  002478  51EF               	movf	sprintf@c& (0+255),w,b
  8539  00247A  B4D8               	btfsc	status,2,c
  8540  00247C  EF42  F012         	goto	u4561
  8541  002480  EF45  F012         	goto	u4560
  8542  002484                     u4561:
  8543  002484  FFFF               	dw	65535	; assembler added errata NOP
  8544  002486  EF50  F012         	goto	l4691
  8545  00248A                     u4560:
  8546  00248A  FFFF               	dw	65535	; assembler added errata NOP
  8547  00248C                     
  8548                           ; BSR set to: 0
  8549                           ;doprnt.c: 1247: ((*sp++ = ('.')),(++ccnt));
  8550  00248C  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  8551  002490  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  8552  002494  0E2E               	movlw	46
  8553  002496  6EDF               	movwf	indf2,c
  8554  002498                     
  8555                           ; BSR set to: 0
  8556  002498  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  8557  00249A  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  8558  00249C                     
  8559                           ; BSR set to: 0
  8560  00249C  4BDB               	infsnz	sprintf@ccnt& (0+255),f,b
  8561  00249E  2BDC               	incf	(sprintf@ccnt+1)& (0+255),f,b
  8562  0024A0                     l4691:
  8563  0024A0  FFFF               	dw	65535	; assembler added errata NOP
  8564                           
  8565                           ; BSR set to: 0
  8566                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  8567  0024A2  51EF               	movf	sprintf@c& (0+255),w,b
  8568  0024A4  EC1E  F007         	call	_scale
  8569  0024A8  C04A  F0D5         	movff	?_scale,_sprintf$981
  8570  0024AC  C04B  F0D6         	movff	?_scale+1,_sprintf$981+1
  8571  0024B0  C04C  F0D7         	movff	?_scale+2,_sprintf$981+2
  8572  0024B4  C04D  F0D8         	movff	?_scale+3,_sprintf$981+3
  8573  0024B8                     
  8574                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  8575  0024B8  C0E9  F035         	movff	sprintf@fval,___flmul@a
  8576  0024BC  C0EA  F036         	movff	sprintf@fval+1,___flmul@a+1
  8577  0024C0  C0EB  F037         	movff	sprintf@fval+2,___flmul@a+2
  8578  0024C4  C0EC  F038         	movff	sprintf@fval+3,___flmul@a+3
  8579  0024C8  C0D5  F031         	movff	_sprintf$981,___flmul@b
  8580  0024CC  C0D6  F032         	movff	_sprintf$981+1,___flmul@b+1
  8581  0024D0  C0D7  F033         	movff	_sprintf$981+2,___flmul@b+2
  8582  0024D4  C0D8  F034         	movff	_sprintf$981+3,___flmul@b+3
  8583  0024D8  EC66  F009         	call	___flmul	;wreg free
  8584  0024DC  C031  F053         	movff	?___flmul,___fltol@f1
  8585  0024E0  C032  F054         	movff	?___flmul+1,___fltol@f1+1
  8586  0024E4  C033  F055         	movff	?___flmul+2,___fltol@f1+2
  8587  0024E8  C034  F056         	movff	?___flmul+3,___fltol@f1+3
  8588  0024EC  EC0D  F038         	call	___fltol	;wreg free
  8589  0024F0  C053  F0E5         	movff	?___fltol,sprintf@val
  8590  0024F4  C054  F0E6         	movff	?___fltol+1,sprintf@val+1
  8591  0024F8  C055  F0E7         	movff	?___fltol+2,sprintf@val+2
  8592  0024FC  C056  F0E8         	movff	?___fltol+3,sprintf@val+3
  8593                           
  8594                           ;doprnt.c: 1254: while(c--) {
  8595  002500  EFFD  F012         	goto	l4707
  8596  002504                     l4695:
  8597  002504  FFFF               	dw	65535	; assembler added errata NOP
  8598                           
  8599                           ; BSR set to: 0
  8600                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  8601  002506  C0E5  F001         	movff	sprintf@val,___lldiv@dividend
  8602  00250A  C0E6  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  8603  00250E  C0E7  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  8604  002512  C0E8  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  8605  002516  51EF               	movf	sprintf@c& (0+255),w,b
  8606  002518  0D04               	mullw	4
  8607  00251A  0E2D               	movlw	low _dpowers
  8608  00251C  24F3               	addwf	243,w,c
  8609  00251E  6EF6               	movwf	tblptrl,c
  8610  002520  0E7E               	movlw	high _dpowers
  8611  002522  20F4               	addwfc	244,w,c
  8612  002524  6EF7               	movwf	tblptrh,c
  8613  002526                     	if	0	;There are less than 3 active tblptr bytes
  8614  002526                     	endif
  8615  002526  0009               	tblrd		*+
  8616  002528  FFFF               	dw	65535	; errata NOP
  8617  00252A  CFF5 F005          	movff	tablat,___lldiv@divisor
  8618  00252E  0009               	tblrd		*+
  8619  002530  FFFF               	dw	65535	; errata NOP
  8620  002532  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  8621  002536  0009               	tblrd		*+
  8622  002538  FFFF               	dw	65535	; errata NOP
  8623  00253A  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  8624  00253E  000A               	tblrd		*-
  8625  002540  FFFF               	dw	65535	; errata NOP
  8626  002542  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  8627  002546  ECDB  F034         	call	___lldiv	;wreg free
  8628  00254A  C001  F0E1         	movff	?___lldiv,sprintf@tmpval
  8629  00254E  C002  F0E2         	movff	?___lldiv+1,sprintf@tmpval+1
  8630  002552  C003  F0E3         	movff	?___lldiv+2,sprintf@tmpval+2
  8631  002556  C004  F0E4         	movff	?___lldiv+3,sprintf@tmpval+3
  8632  00255A                     
  8633                           ;doprnt.c: 1256: tmpval.vd %= 10;
  8634  00255A  C0E1  F00E         	movff	sprintf@tmpval,___llmod@dividend
  8635  00255E  C0E2  F00F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8636  002562  C0E3  F010         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8637  002566  C0E4  F011         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8638  00256A  0E0A               	movlw	10
  8639  00256C  6E12               	movwf	___llmod@divisor^0,c
  8640  00256E  0E00               	movlw	0
  8641  002570  6E13               	movwf	(___llmod@divisor+1)^0,c
  8642  002572  0E00               	movlw	0
  8643  002574  6E14               	movwf	(___llmod@divisor+2)^0,c
  8644  002576  0E00               	movlw	0
  8645  002578  6E15               	movwf	(___llmod@divisor+3)^0,c
  8646  00257A  EC8A  F034         	call	___llmod	;wreg free
  8647  00257E  C00E  F0E1         	movff	?___llmod,sprintf@tmpval
  8648  002582  C00F  F0E2         	movff	?___llmod+1,sprintf@tmpval+1
  8649  002586  C010  F0E3         	movff	?___llmod+2,sprintf@tmpval+2
  8650  00258A  C011  F0E4         	movff	?___llmod+3,sprintf@tmpval+3
  8651  00258E                     
  8652                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)),(++ccnt));
  8653  00258E  0100               	movlb	0	; () banked
  8654  002590  51E1               	movf	sprintf@tmpval& (0+255),w,b
  8655  002592  0F30               	addlw	48
  8656  002594  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  8657  002598  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  8658  00259C  6EDF               	movwf	indf2,c
  8659  00259E                     
  8660                           ; BSR set to: 0
  8661  00259E  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  8662  0025A0  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  8663  0025A2                     
  8664                           ; BSR set to: 0
  8665  0025A2  4BDB               	infsnz	sprintf@ccnt& (0+255),f,b
  8666  0025A4  2BDC               	incf	(sprintf@ccnt+1)& (0+255),f,b
  8667  0025A6                     
  8668                           ; BSR set to: 0
  8669                           ;doprnt.c: 1258: val %= dpowers[c];
  8670  0025A6  C0E5  F00E         	movff	sprintf@val,___llmod@dividend
  8671  0025AA  C0E6  F00F         	movff	sprintf@val+1,___llmod@dividend+1
  8672  0025AE  C0E7  F010         	movff	sprintf@val+2,___llmod@dividend+2
  8673  0025B2  C0E8  F011         	movff	sprintf@val+3,___llmod@dividend+3
  8674  0025B6  51EF               	movf	sprintf@c& (0+255),w,b
  8675  0025B8  0D04               	mullw	4
  8676  0025BA  0E2D               	movlw	low _dpowers
  8677  0025BC  24F3               	addwf	243,w,c
  8678  0025BE  6EF6               	movwf	tblptrl,c
  8679  0025C0  0E7E               	movlw	high _dpowers
  8680  0025C2  20F4               	addwfc	244,w,c
  8681  0025C4  6EF7               	movwf	tblptrh,c
  8682  0025C6                     	if	0	;There are less than 3 active tblptr bytes
  8683  0025C6                     	endif
  8684  0025C6  0009               	tblrd		*+
  8685  0025C8  FFFF               	dw	65535	; errata NOP
  8686  0025CA  CFF5 F012          	movff	tablat,___llmod@divisor
  8687  0025CE  0009               	tblrd		*+
  8688  0025D0  FFFF               	dw	65535	; errata NOP
  8689  0025D2  CFF5 F013          	movff	tablat,___llmod@divisor+1
  8690  0025D6  0009               	tblrd		*+
  8691  0025D8  FFFF               	dw	65535	; errata NOP
  8692  0025DA  CFF5 F014          	movff	tablat,___llmod@divisor+2
  8693  0025DE  000A               	tblrd		*-
  8694  0025E0  FFFF               	dw	65535	; errata NOP
  8695  0025E2  CFF5 F015          	movff	tablat,___llmod@divisor+3
  8696  0025E6  EC8A  F034         	call	___llmod	;wreg free
  8697  0025EA  C00E  F0E5         	movff	?___llmod,sprintf@val
  8698  0025EE  C00F  F0E6         	movff	?___llmod+1,sprintf@val+1
  8699  0025F2  C010  F0E7         	movff	?___llmod+2,sprintf@val+2
  8700  0025F6  C011  F0E8         	movff	?___llmod+3,sprintf@val+3
  8701  0025FA                     l4707:
  8702  0025FA  FFFF               	dw	65535	; assembler added errata NOP
  8703  0025FC  0100               	movlb	0	; () banked
  8704  0025FE  07EF               	decf	sprintf@c& (0+255),f,b
  8705  002600  29EF               	incf	sprintf@c& (0+255),w,b
  8706  002602  A4D8               	btfss	status,2,c
  8707  002604  EF06  F013         	goto	u4571
  8708  002608  EF09  F013         	goto	u4570
  8709  00260C                     u4571:
  8710  00260C  FFFF               	dw	65535	; assembler added errata NOP
  8711  00260E  EF82  F012         	goto	l4695
  8712  002612                     u4570:
  8713  002612  FFFF               	dw	65535	; assembler added errata NOP
  8714  002614  EF1A  F013         	goto	l4717
  8715  002618                     l4709:
  8716  002618  FFFF               	dw	65535	; assembler added errata NOP
  8717                           
  8718                           ; BSR set to: 0
  8719                           ;doprnt.c: 1262: ((*sp++ = ('0')),(++ccnt));
  8720  00261A  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  8721  00261E  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  8722  002622  0E30               	movlw	48
  8723  002624  6EDF               	movwf	indf2,c
  8724  002626                     
  8725                           ; BSR set to: 0
  8726  002626  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  8727  002628  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  8728  00262A                     
  8729                           ; BSR set to: 0
  8730  00262A  4BDB               	infsnz	sprintf@ccnt& (0+255),f,b
  8731  00262C  2BDC               	incf	(sprintf@ccnt+1)& (0+255),f,b
  8732  00262E                     
  8733                           ; BSR set to: 0
  8734                           ;doprnt.c: 1263: prec--;
  8735  00262E  07ED               	decf	sprintf@prec& (0+255),f,b
  8736  002630  A0D8               	btfss	status,0,c
  8737  002632  07EE               	decf	(sprintf@prec+1)& (0+255),f,b
  8738  002634                     l4717:
  8739  002634  FFFF               	dw	65535	; assembler added errata NOP
  8740                           
  8741                           ; BSR set to: 0
  8742  002636  51ED               	movf	sprintf@prec& (0+255),w,b
  8743  002638  11EE               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8744  00263A  A4D8               	btfss	status,2,c
  8745  00263C  EF22  F013         	goto	u4581
  8746  002640  EF25  F013         	goto	u4580
  8747  002644                     u4581:
  8748  002644  FFFF               	dw	65535	; assembler added errata NOP
  8749  002646  EF0C  F013         	goto	l4709
  8750  00264A                     u4580:
  8751  00264A  FFFF               	dw	65535	; assembler added errata NOP
  8752  00264C  EF41  F014         	goto	l4775
  8753  002650                     l4719:
  8754  002650  FFFF               	dw	65535	; assembler added errata NOP
  8755                           
  8756                           ; BSR set to: 0
  8757                           ;doprnt.c: 1272: };doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_
      +                          arg((*(int **)ap), (int)0));
  8758  002652  C0D9  FFD9         	movff	sprintf@ap,fsr2l
  8759  002656  C0DA  FFDA         	movff	sprintf@ap+1,fsr2h
  8760  00265A  CFDE F0E5          	movff	postinc2,sprintf@val
  8761  00265E  CFDD F0E6          	movff	postdec2,sprintf@val+1
  8762  002662  0E00               	movlw	0
  8763  002664  BFE6               	btfsc	(sprintf@val+1)& (0+255),7,b
  8764  002666  0EFF               	movlw	-1
  8765  002668  6FE7               	movwf	(sprintf@val+2)& (0+255),b
  8766  00266A  6FE8               	movwf	(sprintf@val+3)& (0+255),b
  8767  00266C                     
  8768                           ; BSR set to: 0
  8769  00266C  0E02               	movlw	2
  8770  00266E  27D9               	addwf	sprintf@ap& (0+255),f,b
  8771  002670  0E00               	movlw	0
  8772  002672  23DA               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8773  002674                     
  8774                           ; BSR set to: 0
  8775                           ;doprnt.c: 1287: if((long)val < 0) {
  8776  002674  BFE8               	btfsc	(sprintf@val+3)& (0+255),7,b
  8777  002676  EF42  F013         	goto	u4590
  8778  00267A  EF3F  F013         	goto	u4591
  8779  00267E                     u4591:
  8780  00267E  FFFF               	dw	65535	; assembler added errata NOP
  8781  002680  EF4D  F013         	goto	l4729
  8782  002684                     u4590:
  8783  002684  FFFF               	dw	65535	; assembler added errata NOP
  8784  002686                     
  8785                           ; BSR set to: 0
  8786                           ;doprnt.c: 1288: flag |= 0x03;
  8787  002686  0E03               	movlw	3
  8788  002688  13DD               	iorwf	sprintf@flag& (0+255),f,b
  8789  00268A                     
  8790                           ; BSR set to: 0
  8791                           ;doprnt.c: 1289: val = -val;
  8792  00268A  1FE8               	comf	(sprintf@val+3)& (0+255),f,b
  8793  00268C  1FE7               	comf	(sprintf@val+2)& (0+255),f,b
  8794  00268E  1FE6               	comf	(sprintf@val+1)& (0+255),f,b
  8795  002690  6DE5               	negf	sprintf@val& (0+255),b
  8796  002692  0E00               	movlw	0
  8797  002694  23E6               	addwfc	(sprintf@val+1)& (0+255),f,b
  8798  002696  23E7               	addwfc	(sprintf@val+2)& (0+255),f,b
  8799  002698  23E8               	addwfc	(sprintf@val+3)& (0+255),f,b
  8800  00269A                     l4729:
  8801  00269A  FFFF               	dw	65535	; assembler added errata NOP
  8802                           
  8803                           ; BSR set to: 0
  8804                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1316: if(prec == 0 && val == 0)
  8805  00269C  51ED               	movf	sprintf@prec& (0+255),w,b
  8806  00269E  11EE               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8807  0026A0  A4D8               	btfss	status,2,c
  8808  0026A2  EF55  F013         	goto	u4601
  8809  0026A6  EF58  F013         	goto	u4600
  8810  0026AA                     u4601:
  8811  0026AA  FFFF               	dw	65535	; assembler added errata NOP
  8812  0026AC  EF68  F013         	goto	l4735
  8813  0026B0                     u4600:
  8814  0026B0  FFFF               	dw	65535	; assembler added errata NOP
  8815  0026B2                     
  8816                           ; BSR set to: 0
  8817  0026B2  51E5               	movf	sprintf@val& (0+255),w,b
  8818  0026B4  11E6               	iorwf	(sprintf@val+1)& (0+255),w,b
  8819  0026B6  11E7               	iorwf	(sprintf@val+2)& (0+255),w,b
  8820  0026B8  11E8               	iorwf	(sprintf@val+3)& (0+255),w,b
  8821  0026BA  A4D8               	btfss	status,2,c
  8822  0026BC  EF62  F013         	goto	u4611
  8823  0026C0  EF65  F013         	goto	u4610
  8824  0026C4                     u4611:
  8825  0026C4  FFFF               	dw	65535	; assembler added errata NOP
  8826  0026C6  EF68  F013         	goto	l4735
  8827  0026CA                     u4610:
  8828  0026CA  FFFF               	dw	65535	; assembler added errata NOP
  8829  0026CC                     
  8830                           ; BSR set to: 0
  8831                           ;doprnt.c: 1317: prec++;
  8832  0026CC  4BED               	infsnz	sprintf@prec& (0+255),f,b
  8833  0026CE  2BEE               	incf	(sprintf@prec+1)& (0+255),f,b
  8834  0026D0                     l4735:
  8835  0026D0  FFFF               	dw	65535	; assembler added errata NOP
  8836                           
  8837                           ; BSR set to: 0
  8838                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8839  0026D2  0E01               	movlw	1
  8840  0026D4  6FEF               	movwf	sprintf@c& (0+255),b
  8841  0026D6                     l4741:
  8842  0026D6  FFFF               	dw	65535	; assembler added errata NOP
  8843                           
  8844                           ; BSR set to: 0
  8845                           ;doprnt.c: 1332: if(val < dpowers[c])
  8846  0026D8  51EF               	movf	sprintf@c& (0+255),w,b
  8847  0026DA  0D04               	mullw	4
  8848  0026DC  0E2D               	movlw	low _dpowers
  8849  0026DE  24F3               	addwf	243,w,c
  8850  0026E0  6EF6               	movwf	tblptrl,c
  8851  0026E2  0E7E               	movlw	high _dpowers
  8852  0026E4  20F4               	addwfc	244,w,c
  8853  0026E6  6EF7               	movwf	tblptrh,c
  8854  0026E8                     	if	0	;There are less than 3 active tblptr bytes
  8855  0026E8                     	endif
  8856  0026E8  0009               	tblrd		*+
  8857  0026EA  FFFF               	dw	65535	; errata NOP
  8858  0026EC  50F5               	movf	tablat,w,c
  8859  0026EE  5DE5               	subwf	sprintf@val& (0+255),w,b
  8860  0026F0  0009               	tblrd		*+
  8861  0026F2  FFFF               	dw	65535	; errata NOP
  8862  0026F4  50F5               	movf	tablat,w,c
  8863  0026F6  59E6               	subwfb	(sprintf@val+1)& (0+255),w,b
  8864  0026F8  0009               	tblrd		*+
  8865  0026FA  FFFF               	dw	65535	; errata NOP
  8866  0026FC  50F5               	movf	tablat,w,c
  8867  0026FE  59E7               	subwfb	(sprintf@val+2)& (0+255),w,b
  8868  002700  0009               	tblrd		*+
  8869  002702  FFFF               	dw	65535	; errata NOP
  8870  002704  50F5               	movf	tablat,w,c
  8871  002706  59E8               	subwfb	(sprintf@val+3)& (0+255),w,b
  8872  002708  B0D8               	btfsc	status,0,c
  8873  00270A  EF89  F013         	goto	u4621
  8874  00270E  EF8C  F013         	goto	u4620
  8875  002712                     u4621:
  8876  002712  FFFF               	dw	65535	; assembler added errata NOP
  8877  002714  EF8F  F013         	goto	l4745
  8878  002718                     u4620:
  8879  002718  FFFF               	dw	65535	; assembler added errata NOP
  8880  00271A  EF9B  F013         	goto	l4749
  8881  00271E                     l4745:
  8882  00271E  FFFF               	dw	65535	; assembler added errata NOP
  8883                           
  8884                           ; BSR set to: 0
  8885  002720  2BEF               	incf	sprintf@c& (0+255),f,b
  8886  002722                     
  8887                           ; BSR set to: 0
  8888  002722  0E0A               	movlw	10
  8889  002724  19EF               	xorwf	sprintf@c& (0+255),w,b
  8890  002726  A4D8               	btfss	status,2,c
  8891  002728  EF98  F013         	goto	u4631
  8892  00272C  EF9B  F013         	goto	u4630
  8893  002730                     u4631:
  8894  002730  FFFF               	dw	65535	; assembler added errata NOP
  8895  002732  EF6B  F013         	goto	l4741
  8896  002736                     u4630:
  8897  002736                     l4749:
  8898  002736  FFFF               	dw	65535	; assembler added errata NOP
  8899                           
  8900                           ; BSR set to: 0
  8901                           ;doprnt.c: 1365: if(c < prec)
  8902  002738  51EF               	movf	sprintf@c& (0+255),w,b
  8903  00273A  6E6F               	movwf	??_sprintf^0,c
  8904  00273C  6A70               	clrf	(??_sprintf+1)^0,c
  8905  00273E  51ED               	movf	sprintf@prec& (0+255),w,b
  8906  002740  5C6F               	subwf	??_sprintf^0,w,c
  8907  002742  5070               	movf	(??_sprintf+1)^0,w,c
  8908  002744  0A80               	xorlw	128
  8909  002746  6E71               	movwf	(??_sprintf+2)^0,c
  8910  002748  51EE               	movf	(sprintf@prec+1)& (0+255),w,b
  8911  00274A  0A80               	xorlw	128
  8912  00274C  5871               	subwfb	(??_sprintf+2)^0,w,c
  8913  00274E  B0D8               	btfsc	status,0,c
  8914  002750  EFAC  F013         	goto	u4641
  8915  002754  EFAF  F013         	goto	u4640
  8916  002758                     u4641:
  8917  002758  FFFF               	dw	65535	; assembler added errata NOP
  8918  00275A  EFB2  F013         	goto	l4753
  8919  00275E                     u4640:
  8920  00275E  FFFF               	dw	65535	; assembler added errata NOP
  8921  002760                     
  8922                           ; BSR set to: 0
  8923  002760  EFCA  F013         	goto	l4757
  8924  002764                     l4753:
  8925  002764  FFFF               	dw	65535	; assembler added errata NOP
  8926                           
  8927                           ; BSR set to: 0
  8928                           ;doprnt.c: 1367: else if(prec < c)
  8929  002766  51EF               	movf	sprintf@c& (0+255),w,b
  8930  002768  6E6F               	movwf	??_sprintf^0,c
  8931  00276A  6A70               	clrf	(??_sprintf+1)^0,c
  8932  00276C  506F               	movf	??_sprintf^0,w,c
  8933  00276E  5DED               	subwf	sprintf@prec& (0+255),w,b
  8934  002770  51EE               	movf	(sprintf@prec+1)& (0+255),w,b
  8935  002772  0A80               	xorlw	128
  8936  002774  6E71               	movwf	(??_sprintf+2)^0,c
  8937  002776  5070               	movf	(??_sprintf+1)^0,w,c
  8938  002778  0A80               	xorlw	128
  8939  00277A  5871               	subwfb	(??_sprintf+2)^0,w,c
  8940  00277C  B0D8               	btfsc	status,0,c
  8941  00277E  EFC3  F013         	goto	u4651
  8942  002782  EFC6  F013         	goto	u4650
  8943  002786                     u4651:
  8944  002786  FFFF               	dw	65535	; assembler added errata NOP
  8945  002788  EFCA  F013         	goto	l4757
  8946  00278C                     u4650:
  8947  00278C  FFFF               	dw	65535	; assembler added errata NOP
  8948  00278E                     
  8949                           ; BSR set to: 0
  8950                           ;doprnt.c: 1368: prec = c;
  8951  00278E  C0EF  F0ED         	movff	sprintf@c,sprintf@prec
  8952  002792  6BEE               	clrf	(sprintf@prec+1)& (0+255),b
  8953  002794                     l4757:
  8954  002794  FFFF               	dw	65535	; assembler added errata NOP
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  8958  002796  0E03               	movlw	3
  8959  002798  15DD               	andwf	sprintf@flag& (0+255),w,b
  8960  00279A  6E6F               	movwf	??_sprintf^0,c
  8961  00279C  0E00               	movlw	0
  8962  00279E  15DE               	andwf	(sprintf@flag+1)& (0+255),w,b
  8963  0027A0  6E70               	movwf	(??_sprintf+1)^0,c
  8964  0027A2  506F               	movf	??_sprintf^0,w,c
  8965  0027A4  1070               	iorwf	(??_sprintf+1)^0,w,c
  8966  0027A6  B4D8               	btfsc	status,2,c
  8967  0027A8  EFD8  F013         	goto	u4661
  8968  0027AC  EFDB  F013         	goto	u4660
  8969  0027B0                     u4661:
  8970  0027B0  FFFF               	dw	65535	; assembler added errata NOP
  8971  0027B2  EF32  F014         	goto	l4773
  8972  0027B6                     u4660:
  8973  0027B6  FFFF               	dw	65535	; assembler added errata NOP
  8974  0027B8                     
  8975                           ; BSR set to: 0
  8976                           ;doprnt.c: 1465: ((*sp++ = ('-')),(++ccnt));
  8977  0027B8  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  8978  0027BC  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  8979  0027C0  0E2D               	movlw	45
  8980  0027C2  6EDF               	movwf	indf2,c
  8981  0027C4                     l4761:
  8982  0027C4  FFFF               	dw	65535	; assembler added errata NOP
  8983                           
  8984                           ; BSR set to: 0
  8985  0027C6  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  8986  0027C8  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  8987  0027CA                     
  8988                           ; BSR set to: 0
  8989  0027CA  4BDB               	infsnz	sprintf@ccnt& (0+255),f,b
  8990  0027CC  2BDC               	incf	(sprintf@ccnt+1)& (0+255),f,b
  8991  0027CE  EF32  F014         	goto	l4773
  8992  0027D2                     l4765:
  8993  0027D2  FFFF               	dw	65535	; assembler added errata NOP
  8994                           
  8995                           ; BSR set to: 0
  8996                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  8997  0027D4  C0ED  F06F         	movff	sprintf@prec,??_sprintf
  8998  0027D8  C0EE  F070         	movff	sprintf@prec+1,??_sprintf+1
  8999  0027DC  90D8               	bcf	status,0,c
  9000  0027DE  366F               	rlcf	??_sprintf^0,f,c
  9001  0027E0  3670               	rlcf	(??_sprintf+1)^0,f,c
  9002  0027E2  90D8               	bcf	status,0,c
  9003  0027E4  366F               	rlcf	??_sprintf^0,f,c
  9004  0027E6  3670               	rlcf	(??_sprintf+1)^0,f,c
  9005  0027E8  0E2D               	movlw	low _dpowers
  9006  0027EA  246F               	addwf	??_sprintf^0,w,c
  9007  0027EC  6EF6               	movwf	tblptrl,c
  9008  0027EE  0E7E               	movlw	high _dpowers
  9009  0027F0  2070               	addwfc	(??_sprintf+1)^0,w,c
  9010  0027F2  6EF7               	movwf	tblptrh,c
  9011  0027F4                     	if	0	;There are less than 3 active tblptr bytes
  9012  0027F4                     	endif
  9013  0027F4  0009               	tblrd		*+
  9014  0027F6  FFFF               	dw	65535	; errata NOP
  9015  0027F8  CFF5 F005          	movff	tablat,___lldiv@divisor
  9016  0027FC  0009               	tblrd		*+
  9017  0027FE  FFFF               	dw	65535	; errata NOP
  9018  002800  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  9019  002804  0009               	tblrd		*+
  9020  002806  FFFF               	dw	65535	; errata NOP
  9021  002808  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  9022  00280C  000A               	tblrd		*-
  9023  00280E  FFFF               	dw	65535	; errata NOP
  9024  002810  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  9025  002814  C0E5  F001         	movff	sprintf@val,___lldiv@dividend
  9026  002818  C0E6  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  9027  00281C  C0E7  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  9028  002820  C0E8  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  9029  002824  ECDB  F034         	call	___lldiv	;wreg free
  9030  002828  C001  F00E         	movff	?___lldiv,___llmod@dividend
  9031  00282C  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  9032  002830  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  9033  002834  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  9034  002838  0E0A               	movlw	10
  9035  00283A  6E12               	movwf	___llmod@divisor^0,c
  9036  00283C  0E00               	movlw	0
  9037  00283E  6E13               	movwf	(___llmod@divisor+1)^0,c
  9038  002840  0E00               	movlw	0
  9039  002842  6E14               	movwf	(___llmod@divisor+2)^0,c
  9040  002844  0E00               	movlw	0
  9041  002846  6E15               	movwf	(___llmod@divisor+3)^0,c
  9042  002848  EC8A  F034         	call	___llmod	;wreg free
  9043  00284C  500E               	movf	?___llmod^0,w,c
  9044  00284E  0F30               	addlw	48
  9045  002850  0100               	movlb	0	; () banked
  9046  002852  6FEF               	movwf	sprintf@c& (0+255),b
  9047  002854                     
  9048                           ; BSR set to: 0
  9049                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)),(++ccnt));
  9050  002854  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  9051  002858  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  9052  00285C  C0EF  FFDF         	movff	sprintf@c,indf2
  9053  002860  EFE2  F013         	goto	l4761
  9054  002864                     l4773:
  9055  002864  FFFF               	dw	65535	; assembler added errata NOP
  9056                           
  9057                           ; BSR set to: 0
  9058  002866  07ED               	decf	sprintf@prec& (0+255),f,b
  9059  002868  A0D8               	btfss	status,0,c
  9060  00286A  07EE               	decf	(sprintf@prec+1)& (0+255),f,b
  9061  00286C  29ED               	incf	sprintf@prec& (0+255),w,b
  9062  00286E  E106               	bnz	u4671
  9063  002870  29EE               	incf	(sprintf@prec+1)& (0+255),w,b
  9064  002872  A4D8               	btfss	status,2,c
  9065  002874  EF3E  F014         	goto	u4671
  9066  002878  EF41  F014         	goto	u4670
  9067  00287C                     u4671:
  9068  00287C  FFFF               	dw	65535	; assembler added errata NOP
  9069  00287E  EFE9  F013         	goto	l4765
  9070  002882                     u4670:
  9071  002882                     l4775:
  9072  002882  FFFF               	dw	65535	; assembler added errata NOP
  9073                           
  9074                           ; BSR set to: 0
  9075  002884  C0C3  FFF6         	movff	sprintf@f,tblptrl
  9076  002888  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  9077  00288C  4BC3               	infsnz	sprintf@f& (0+255),f,b
  9078  00288E  2BC4               	incf	(sprintf@f+1)& (0+255),f,b
  9079  002890                     	if	0	;tblptru may be non-zero
  9080  002890                     	endif
  9081  002890                     	if	0	;tblptru may be non-zero
  9082  002890                     	endif
  9083  002890  0008               	tblrd		*
  9084  002892  FFFF               	dw	65535	; errata NOP
  9085  002894  CFF5 F0EF          	movff	tablat,sprintf@c
  9086  002898  51EF               	movf	sprintf@c& (0+255),w,b
  9087  00289A  A4D8               	btfss	status,2,c
  9088  00289C  EF52  F014         	goto	u4681
  9089  0028A0  EF55  F014         	goto	u4680
  9090  0028A4                     u4681:
  9091  0028A4  FFFF               	dw	65535	; assembler added errata NOP
  9092  0028A6  EF98  F00E         	goto	l4525
  9093  0028AA                     u4680:
  9094  0028AA                     l4777:
  9095  0028AA  FFFF               	dw	65535	; assembler added errata NOP
  9096                           
  9097                           ; BSR set to: 0
  9098                           ;doprnt.c: 1564: *sp = 0;
  9099  0028AC  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  9100  0028B0  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  9101  0028B4  0E00               	movlw	0
  9102  0028B6  6EDF               	movwf	indf2,c
  9103  0028B8                     
  9104                           ; BSR set to: 0
  9105                           ;doprnt.c: 1566: return ccnt;
  9106  0028B8  C0DB  F0C1         	movff	sprintf@ccnt,?_sprintf
  9107  0028BC  C0DC  F0C2         	movff	sprintf@ccnt+1,?_sprintf+1
  9108  0028C0                     
  9109                           ; BSR set to: 0
  9110  0028C0  0012               	return		;funcret
  9111  0028C2  FFFF               	dw	65535	; errata NOP
  9112  0028C4                     __end_of_sprintf:
  9113                           	opt callstack 0
  9114                           
  9115 ;; *************** function _scale *****************
  9116 ;; Defined at:
  9117 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  9118 ;; Parameters:    Size  Location     Type
  9119 ;;  scl             1    wreg     char 
  9120 ;; Auto vars:     Size  Location     Type
  9121 ;;  scl             1   81[COMRAM] char 
  9122 ;; Return value:  Size  Location     Type
  9123 ;;                  4   73[COMRAM] char 
  9124 ;; Registers used:
  9125 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9126 ;; Tracked objects:
  9127 ;;		On entry : 0/0
  9128 ;;		On exit  : 0/0
  9129 ;;		Unchanged: 0/0
  9130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9131 ;;      Params:         4       0       0       0       0       0       0
  9132 ;;      Locals:         5       0       0       0       0       0       0
  9133 ;;      Temps:          0       0       0       0       0       0       0
  9134 ;;      Totals:         9       0       0       0       0       0       0
  9135 ;;Total ram usage:        9 bytes
  9136 ;; Hardware stack levels used:    1
  9137 ;; Hardware stack levels required when called:    1
  9138 ;; This function calls:
  9139 ;;		___awdiv
  9140 ;;		___awmod
  9141 ;;		___flmul
  9142 ;; This function is called by:
  9143 ;;		_sprintf
  9144 ;; This function uses a non-reentrant model
  9145 ;;
  9146                           
  9147                           	psect	text13
  9148  000E3C                     __ptext13:
  9149                           	opt callstack 0
  9150  000E3C                     _scale:
  9151                           	opt callstack 0
  9152  000E3C  FFFF               	dw	65535	; assembler added errata NOP
  9153                           
  9154                           ; BSR set to: 0
  9155                           ;incstack = 0
  9156                           ;scale@scl stored from wreg
  9157  000E3E  6E52               	movwf	scale@scl^0,c
  9158  000E40                     
  9159                           ;doprnt.c: 436: if(scl < 0) {
  9160  000E40  BE52               	btfsc	scale@scl^0,7,c
  9161  000E42  EF28  F007         	goto	u3710
  9162  000E46  EF25  F007         	goto	u3711
  9163  000E4A                     u3711:
  9164  000E4A  FFFF               	dw	65535	; assembler added errata NOP
  9165  000E4C  EF47  F008         	goto	l4105
  9166  000E50                     u3710:
  9167  000E50  FFFF               	dw	65535	; assembler added errata NOP
  9168  000E52                     
  9169                           ;doprnt.c: 437: scl = -scl;
  9170  000E52  6C52               	negf	scale@scl^0,c
  9171                           
  9172                           ;doprnt.c: 438: if(scl>=110)
  9173  000E54  5052               	movf	scale@scl^0,w,c
  9174  000E56  0A80               	xorlw	128
  9175  000E58  0F12               	addlw	-238
  9176  000E5A  A0D8               	btfss	status,0,c
  9177  000E5C  EF32  F007         	goto	u3721
  9178  000E60  EF35  F007         	goto	u3720
  9179  000E64                     u3721:
  9180  000E64  FFFF               	dw	65535	; assembler added errata NOP
  9181  000E66  EFCB  F007         	goto	l4095
  9182  000E6A                     u3720:
  9183  000E6A  FFFF               	dw	65535	; assembler added errata NOP
  9184  000E6C                     
  9185                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  9186  000E6C  0E00               	movlw	0
  9187  000E6E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  9188  000E70  0E0A               	movlw	10
  9189  000E72  6E09               	movwf	___awdiv@divisor^0,c
  9190  000E74  0E00               	movlw	0
  9191  000E76  6E04               	movwf	(___awmod@divisor+1)^0,c
  9192  000E78  0E64               	movlw	100
  9193  000E7A  6E03               	movwf	___awmod@divisor^0,c
  9194  000E7C  5052               	movf	scale@scl^0,w,c
  9195  000E7E  6E01               	movwf	___awmod@dividend^0,c
  9196  000E80  6A02               	clrf	(___awmod@dividend+1)^0,c
  9197  000E82  BE01               	btfsc	___awmod@dividend^0,7,c
  9198  000E84  0602               	decf	(___awmod@dividend+1)^0,f,c
  9199  000E86  EC06  F036         	call	___awmod	;wreg free
  9200  000E8A  C001  F007         	movff	?___awmod,___awdiv@dividend
  9201  000E8E  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  9202  000E92  EC74  F036         	call	___awdiv	;wreg free
  9203  000E96  0E09               	movlw	9
  9204  000E98  2607               	addwf	?___awdiv^0,f,c
  9205  000E9A  5007               	movf	?___awdiv^0,w,c
  9206  000E9C  0D04               	mullw	4
  9207  000E9E  0ED1               	movlw	low __npowers_
  9208  000EA0  24F3               	addwf	243,w,c
  9209  000EA2  6EF6               	movwf	tblptrl,c
  9210  000EA4  0E7D               	movlw	high __npowers_
  9211  000EA6  20F4               	addwfc	244,w,c
  9212  000EA8  6EF7               	movwf	tblptrh,c
  9213  000EAA                     	if	0	;There are less than 3 active tblptr bytes
  9214  000EAA                     	endif
  9215  000EAA  0009               	tblrd		*+
  9216  000EAC  FFFF               	dw	65535	; errata NOP
  9217  000EAE  CFF5 F035          	movff	tablat,___flmul@a
  9218  000EB2  0009               	tblrd		*+
  9219  000EB4  FFFF               	dw	65535	; errata NOP
  9220  000EB6  CFF5 F036          	movff	tablat,___flmul@a+1
  9221  000EBA  0009               	tblrd		*+
  9222  000EBC  FFFF               	dw	65535	; errata NOP
  9223  000EBE  CFF5 F037          	movff	tablat,___flmul@a+2
  9224  000EC2  000A               	tblrd		*-
  9225  000EC4  FFFF               	dw	65535	; errata NOP
  9226  000EC6  CFF5 F038          	movff	tablat,___flmul@a+3
  9227  000ECA  0E00               	movlw	0
  9228  000ECC  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  9229  000ECE  0E64               	movlw	100
  9230  000ED0  6E09               	movwf	___awdiv@divisor^0,c
  9231  000ED2  5052               	movf	scale@scl^0,w,c
  9232  000ED4  6E07               	movwf	___awdiv@dividend^0,c
  9233  000ED6  6A08               	clrf	(___awdiv@dividend+1)^0,c
  9234  000ED8  BE07               	btfsc	___awdiv@dividend^0,7,c
  9235  000EDA  0608               	decf	(___awdiv@dividend+1)^0,f,c
  9236  000EDC  EC74  F036         	call	___awdiv	;wreg free
  9237  000EE0  0E12               	movlw	18
  9238  000EE2  2607               	addwf	?___awdiv^0,f,c
  9239  000EE4  5007               	movf	?___awdiv^0,w,c
  9240  000EE6  0D04               	mullw	4
  9241  000EE8  0ED1               	movlw	low __npowers_
  9242  000EEA  24F3               	addwf	243,w,c
  9243  000EEC  6EF6               	movwf	tblptrl,c
  9244  000EEE  0E7D               	movlw	high __npowers_
  9245  000EF0  20F4               	addwfc	244,w,c
  9246  000EF2  6EF7               	movwf	tblptrh,c
  9247  000EF4                     	if	0	;There are less than 3 active tblptr bytes
  9248  000EF4                     	endif
  9249  000EF4  0009               	tblrd		*+
  9250  000EF6  FFFF               	dw	65535	; errata NOP
  9251  000EF8  CFF5 F031          	movff	tablat,___flmul@b
  9252  000EFC  0009               	tblrd		*+
  9253  000EFE  FFFF               	dw	65535	; errata NOP
  9254  000F00  CFF5 F032          	movff	tablat,___flmul@b+1
  9255  000F04  0009               	tblrd		*+
  9256  000F06  FFFF               	dw	65535	; errata NOP
  9257  000F08  CFF5 F033          	movff	tablat,___flmul@b+2
  9258  000F0C  000A               	tblrd		*-
  9259  000F0E  FFFF               	dw	65535	; errata NOP
  9260  000F10  CFF5 F034          	movff	tablat,___flmul@b+3
  9261  000F14  EC66  F009         	call	___flmul	;wreg free
  9262  000F18  C031  F04E         	movff	?___flmul,_scale$980
  9263  000F1C  C032  F04F         	movff	?___flmul+1,_scale$980+1
  9264  000F20  C033  F050         	movff	?___flmul+2,_scale$980+2
  9265  000F24  C034  F051         	movff	?___flmul+3,_scale$980+3
  9266                           
  9267                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  9268  000F28  C04E  F031         	movff	_scale$980,___flmul@b
  9269  000F2C  C04F  F032         	movff	_scale$980+1,___flmul@b+1
  9270  000F30  C050  F033         	movff	_scale$980+2,___flmul@b+2
  9271  000F34  C051  F034         	movff	_scale$980+3,___flmul@b+3
  9272  000F38  0E00               	movlw	0
  9273  000F3A  6E04               	movwf	(___awmod@divisor+1)^0,c
  9274  000F3C  0E0A               	movlw	10
  9275  000F3E  6E03               	movwf	___awmod@divisor^0,c
  9276  000F40  5052               	movf	scale@scl^0,w,c
  9277  000F42  6E01               	movwf	___awmod@dividend^0,c
  9278  000F44  6A02               	clrf	(___awmod@dividend+1)^0,c
  9279  000F46  BE01               	btfsc	___awmod@dividend^0,7,c
  9280  000F48  0602               	decf	(___awmod@dividend+1)^0,f,c
  9281  000F4A  EC06  F036         	call	___awmod	;wreg free
  9282  000F4E  5001               	movf	?___awmod^0,w,c
  9283  000F50  0D04               	mullw	4
  9284  000F52  0ED1               	movlw	low __npowers_
  9285  000F54  24F3               	addwf	243,w,c
  9286  000F56  6EF6               	movwf	tblptrl,c
  9287  000F58  0E7D               	movlw	high __npowers_
  9288  000F5A  20F4               	addwfc	244,w,c
  9289  000F5C  6EF7               	movwf	tblptrh,c
  9290  000F5E                     	if	0	;There are less than 3 active tblptr bytes
  9291  000F5E                     	endif
  9292  000F5E  0009               	tblrd		*+
  9293  000F60  FFFF               	dw	65535	; errata NOP
  9294  000F62  CFF5 F035          	movff	tablat,___flmul@a
  9295  000F66  0009               	tblrd		*+
  9296  000F68  FFFF               	dw	65535	; errata NOP
  9297  000F6A  CFF5 F036          	movff	tablat,___flmul@a+1
  9298  000F6E  0009               	tblrd		*+
  9299  000F70  FFFF               	dw	65535	; errata NOP
  9300  000F72  CFF5 F037          	movff	tablat,___flmul@a+2
  9301  000F76  000A               	tblrd		*-
  9302  000F78  FFFF               	dw	65535	; errata NOP
  9303  000F7A  CFF5 F038          	movff	tablat,___flmul@a+3
  9304  000F7E  EC66  F009         	call	___flmul	;wreg free
  9305  000F82  C031  F04A         	movff	?___flmul,?_scale
  9306  000F86  C032  F04B         	movff	?___flmul+1,?_scale+1
  9307  000F8A  C033  F04C         	movff	?___flmul+2,?_scale+2
  9308  000F8E  C034  F04D         	movff	?___flmul+3,?_scale+3
  9309  000F92  EF63  F009         	goto	l230
  9310  000F96                     l4095:
  9311  000F96  FFFF               	dw	65535	; assembler added errata NOP
  9312                           
  9313                           ;doprnt.c: 440: else if(scl > 10)
  9314  000F98  5052               	movf	scale@scl^0,w,c
  9315  000F9A  0A80               	xorlw	128
  9316  000F9C  0F75               	addlw	-139
  9317  000F9E  A0D8               	btfss	status,0,c
  9318  000FA0  EFD4  F007         	goto	u3731
  9319  000FA4  EFD7  F007         	goto	u3730
  9320  000FA8                     u3731:
  9321  000FA8  FFFF               	dw	65535	; assembler added errata NOP
  9322  000FAA  EF2C  F008         	goto	l4101
  9323  000FAE                     u3730:
  9324  000FAE  FFFF               	dw	65535	; assembler added errata NOP
  9325  000FB0                     
  9326                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  9327  000FB0  0E00               	movlw	0
  9328  000FB2  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  9329  000FB4  0E0A               	movlw	10
  9330  000FB6  6E09               	movwf	___awdiv@divisor^0,c
  9331  000FB8  5052               	movf	scale@scl^0,w,c
  9332  000FBA  6E07               	movwf	___awdiv@dividend^0,c
  9333  000FBC  6A08               	clrf	(___awdiv@dividend+1)^0,c
  9334  000FBE  BE07               	btfsc	___awdiv@dividend^0,7,c
  9335  000FC0  0608               	decf	(___awdiv@dividend+1)^0,f,c
  9336  000FC2  EC74  F036         	call	___awdiv	;wreg free
  9337  000FC6  0E09               	movlw	9
  9338  000FC8  2607               	addwf	?___awdiv^0,f,c
  9339  000FCA  5007               	movf	?___awdiv^0,w,c
  9340  000FCC  0D04               	mullw	4
  9341  000FCE  0ED1               	movlw	low __npowers_
  9342  000FD0  24F3               	addwf	243,w,c
  9343  000FD2  6EF6               	movwf	tblptrl,c
  9344  000FD4  0E7D               	movlw	high __npowers_
  9345  000FD6  20F4               	addwfc	244,w,c
  9346  000FD8  6EF7               	movwf	tblptrh,c
  9347  000FDA                     	if	0	;There are less than 3 active tblptr bytes
  9348  000FDA                     	endif
  9349  000FDA  0009               	tblrd		*+
  9350  000FDC  FFFF               	dw	65535	; errata NOP
  9351  000FDE  CFF5 F031          	movff	tablat,___flmul@b
  9352  000FE2  0009               	tblrd		*+
  9353  000FE4  FFFF               	dw	65535	; errata NOP
  9354  000FE6  CFF5 F032          	movff	tablat,___flmul@b+1
  9355  000FEA  0009               	tblrd		*+
  9356  000FEC  FFFF               	dw	65535	; errata NOP
  9357  000FEE  CFF5 F033          	movff	tablat,___flmul@b+2
  9358  000FF2  000A               	tblrd		*-
  9359  000FF4  FFFF               	dw	65535	; errata NOP
  9360  000FF6  CFF5 F034          	movff	tablat,___flmul@b+3
  9361  000FFA  0E00               	movlw	0
  9362  000FFC  6E04               	movwf	(___awmod@divisor+1)^0,c
  9363  000FFE  0E0A               	movlw	10
  9364  001000  6E03               	movwf	___awmod@divisor^0,c
  9365  001002  5052               	movf	scale@scl^0,w,c
  9366  001004  6E01               	movwf	___awmod@dividend^0,c
  9367  001006  6A02               	clrf	(___awmod@dividend+1)^0,c
  9368  001008  BE01               	btfsc	___awmod@dividend^0,7,c
  9369  00100A  0602               	decf	(___awmod@dividend+1)^0,f,c
  9370  00100C  EC06  F036         	call	___awmod	;wreg free
  9371  001010  5001               	movf	?___awmod^0,w,c
  9372  001012  0D04               	mullw	4
  9373  001014  0ED1               	movlw	low __npowers_
  9374  001016  24F3               	addwf	243,w,c
  9375  001018  6EF6               	movwf	tblptrl,c
  9376  00101A  0E7D               	movlw	high __npowers_
  9377  00101C  20F4               	addwfc	244,w,c
  9378  00101E  6EF7               	movwf	tblptrh,c
  9379  001020                     	if	0	;There are less than 3 active tblptr bytes
  9380  001020                     	endif
  9381  001020  0009               	tblrd		*+
  9382  001022  FFFF               	dw	65535	; errata NOP
  9383  001024  CFF5 F035          	movff	tablat,___flmul@a
  9384  001028  0009               	tblrd		*+
  9385  00102A  FFFF               	dw	65535	; errata NOP
  9386  00102C  CFF5 F036          	movff	tablat,___flmul@a+1
  9387  001030  0009               	tblrd		*+
  9388  001032  FFFF               	dw	65535	; errata NOP
  9389  001034  CFF5 F037          	movff	tablat,___flmul@a+2
  9390  001038  000A               	tblrd		*-
  9391  00103A  FFFF               	dw	65535	; errata NOP
  9392  00103C  CFF5 F038          	movff	tablat,___flmul@a+3
  9393  001040  EC66  F009         	call	___flmul	;wreg free
  9394  001044  C031  F04A         	movff	?___flmul,?_scale
  9395  001048  C032  F04B         	movff	?___flmul+1,?_scale+1
  9396  00104C  C033  F04C         	movff	?___flmul+2,?_scale+2
  9397  001050  C034  F04D         	movff	?___flmul+3,?_scale+3
  9398  001054  EF63  F009         	goto	l230
  9399  001058                     l4101:
  9400  001058  FFFF               	dw	65535	; assembler added errata NOP
  9401                           
  9402                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  9403  00105A  5052               	movf	scale@scl^0,w,c
  9404  00105C  0D04               	mullw	4
  9405  00105E  0ED1               	movlw	low __npowers_
  9406  001060  24F3               	addwf	243,w,c
  9407  001062  6EF6               	movwf	tblptrl,c
  9408  001064  0E7D               	movlw	high __npowers_
  9409  001066  20F4               	addwfc	244,w,c
  9410  001068  6EF7               	movwf	tblptrh,c
  9411  00106A                     	if	0	;There are less than 3 active tblptr bytes
  9412  00106A                     	endif
  9413  00106A  0009               	tblrd		*+
  9414  00106C  FFFF               	dw	65535	; errata NOP
  9415  00106E  CFF5 F04A          	movff	tablat,?_scale
  9416  001072  0009               	tblrd		*+
  9417  001074  FFFF               	dw	65535	; errata NOP
  9418  001076  CFF5 F04B          	movff	tablat,?_scale+1
  9419  00107A  0009               	tblrd		*+
  9420  00107C  FFFF               	dw	65535	; errata NOP
  9421  00107E  CFF5 F04C          	movff	tablat,?_scale+2
  9422  001082  000A               	tblrd		*-
  9423  001084  FFFF               	dw	65535	; errata NOP
  9424  001086  CFF5 F04D          	movff	tablat,?_scale+3
  9425  00108A  EF63  F009         	goto	l230
  9426  00108E                     l4105:
  9427  00108E  FFFF               	dw	65535	; assembler added errata NOP
  9428                           
  9429                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  9430  001090  5052               	movf	scale@scl^0,w,c
  9431  001092  0A80               	xorlw	128
  9432  001094  0F12               	addlw	-238
  9433  001096  A0D8               	btfss	status,0,c
  9434  001098  EF50  F008         	goto	u3741
  9435  00109C  EF53  F008         	goto	u3740
  9436  0010A0                     u3741:
  9437  0010A0  FFFF               	dw	65535	; assembler added errata NOP
  9438  0010A2  EFE9  F008         	goto	l4113
  9439  0010A6                     u3740:
  9440  0010A6  FFFF               	dw	65535	; assembler added errata NOP
  9441  0010A8                     
  9442                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  9443  0010A8  0E00               	movlw	0
  9444  0010AA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  9445  0010AC  0E0A               	movlw	10
  9446  0010AE  6E09               	movwf	___awdiv@divisor^0,c
  9447  0010B0  0E00               	movlw	0
  9448  0010B2  6E04               	movwf	(___awmod@divisor+1)^0,c
  9449  0010B4  0E64               	movlw	100
  9450  0010B6  6E03               	movwf	___awmod@divisor^0,c
  9451  0010B8  5052               	movf	scale@scl^0,w,c
  9452  0010BA  6E01               	movwf	___awmod@dividend^0,c
  9453  0010BC  6A02               	clrf	(___awmod@dividend+1)^0,c
  9454  0010BE  BE01               	btfsc	___awmod@dividend^0,7,c
  9455  0010C0  0602               	decf	(___awmod@dividend+1)^0,f,c
  9456  0010C2  EC06  F036         	call	___awmod	;wreg free
  9457  0010C6  C001  F007         	movff	?___awmod,___awdiv@dividend
  9458  0010CA  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  9459  0010CE  EC74  F036         	call	___awdiv	;wreg free
  9460  0010D2  0E09               	movlw	9
  9461  0010D4  2607               	addwf	?___awdiv^0,f,c
  9462  0010D6  5007               	movf	?___awdiv^0,w,c
  9463  0010D8  0D04               	mullw	4
  9464  0010DA  0E9D               	movlw	low __powers_
  9465  0010DC  24F3               	addwf	243,w,c
  9466  0010DE  6EF6               	movwf	tblptrl,c
  9467  0010E0  0E7D               	movlw	high __powers_
  9468  0010E2  20F4               	addwfc	244,w,c
  9469  0010E4  6EF7               	movwf	tblptrh,c
  9470  0010E6                     	if	0	;There are less than 3 active tblptr bytes
  9471  0010E6                     	endif
  9472  0010E6  0009               	tblrd		*+
  9473  0010E8  FFFF               	dw	65535	; errata NOP
  9474  0010EA  CFF5 F035          	movff	tablat,___flmul@a
  9475  0010EE  0009               	tblrd		*+
  9476  0010F0  FFFF               	dw	65535	; errata NOP
  9477  0010F2  CFF5 F036          	movff	tablat,___flmul@a+1
  9478  0010F6  0009               	tblrd		*+
  9479  0010F8  FFFF               	dw	65535	; errata NOP
  9480  0010FA  CFF5 F037          	movff	tablat,___flmul@a+2
  9481  0010FE  000A               	tblrd		*-
  9482  001100  FFFF               	dw	65535	; errata NOP
  9483  001102  CFF5 F038          	movff	tablat,___flmul@a+3
  9484  001106  0E00               	movlw	0
  9485  001108  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  9486  00110A  0E64               	movlw	100
  9487  00110C  6E09               	movwf	___awdiv@divisor^0,c
  9488  00110E  5052               	movf	scale@scl^0,w,c
  9489  001110  6E07               	movwf	___awdiv@dividend^0,c
  9490  001112  6A08               	clrf	(___awdiv@dividend+1)^0,c
  9491  001114  BE07               	btfsc	___awdiv@dividend^0,7,c
  9492  001116  0608               	decf	(___awdiv@dividend+1)^0,f,c
  9493  001118  EC74  F036         	call	___awdiv	;wreg free
  9494  00111C  0E12               	movlw	18
  9495  00111E  2607               	addwf	?___awdiv^0,f,c
  9496  001120  5007               	movf	?___awdiv^0,w,c
  9497  001122  0D04               	mullw	4
  9498  001124  0E9D               	movlw	low __powers_
  9499  001126  24F3               	addwf	243,w,c
  9500  001128  6EF6               	movwf	tblptrl,c
  9501  00112A  0E7D               	movlw	high __powers_
  9502  00112C  20F4               	addwfc	244,w,c
  9503  00112E  6EF7               	movwf	tblptrh,c
  9504  001130                     	if	0	;There are less than 3 active tblptr bytes
  9505  001130                     	endif
  9506  001130  0009               	tblrd		*+
  9507  001132  FFFF               	dw	65535	; errata NOP
  9508  001134  CFF5 F031          	movff	tablat,___flmul@b
  9509  001138  0009               	tblrd		*+
  9510  00113A  FFFF               	dw	65535	; errata NOP
  9511  00113C  CFF5 F032          	movff	tablat,___flmul@b+1
  9512  001140  0009               	tblrd		*+
  9513  001142  FFFF               	dw	65535	; errata NOP
  9514  001144  CFF5 F033          	movff	tablat,___flmul@b+2
  9515  001148  000A               	tblrd		*-
  9516  00114A  FFFF               	dw	65535	; errata NOP
  9517  00114C  CFF5 F034          	movff	tablat,___flmul@b+3
  9518  001150  EC66  F009         	call	___flmul	;wreg free
  9519  001154  C031  F04E         	movff	?___flmul,_scale$980
  9520  001158  C032  F04F         	movff	?___flmul+1,_scale$980+1
  9521  00115C  C033  F050         	movff	?___flmul+2,_scale$980+2
  9522  001160  C034  F051         	movff	?___flmul+3,_scale$980+3
  9523                           
  9524                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  9525  001164  C04E  F031         	movff	_scale$980,___flmul@b
  9526  001168  C04F  F032         	movff	_scale$980+1,___flmul@b+1
  9527  00116C  C050  F033         	movff	_scale$980+2,___flmul@b+2
  9528  001170  C051  F034         	movff	_scale$980+3,___flmul@b+3
  9529  001174  0E00               	movlw	0
  9530  001176  6E04               	movwf	(___awmod@divisor+1)^0,c
  9531  001178  0E0A               	movlw	10
  9532  00117A  6E03               	movwf	___awmod@divisor^0,c
  9533  00117C  5052               	movf	scale@scl^0,w,c
  9534  00117E  6E01               	movwf	___awmod@dividend^0,c
  9535  001180  6A02               	clrf	(___awmod@dividend+1)^0,c
  9536  001182  BE01               	btfsc	___awmod@dividend^0,7,c
  9537  001184  0602               	decf	(___awmod@dividend+1)^0,f,c
  9538  001186  EC06  F036         	call	___awmod	;wreg free
  9539  00118A  5001               	movf	?___awmod^0,w,c
  9540  00118C  0D04               	mullw	4
  9541  00118E  0E9D               	movlw	low __powers_
  9542  001190  24F3               	addwf	243,w,c
  9543  001192  6EF6               	movwf	tblptrl,c
  9544  001194  0E7D               	movlw	high __powers_
  9545  001196  20F4               	addwfc	244,w,c
  9546  001198  6EF7               	movwf	tblptrh,c
  9547  00119A                     	if	0	;There are less than 3 active tblptr bytes
  9548  00119A                     	endif
  9549  00119A  0009               	tblrd		*+
  9550  00119C  FFFF               	dw	65535	; errata NOP
  9551  00119E  CFF5 F035          	movff	tablat,___flmul@a
  9552  0011A2  0009               	tblrd		*+
  9553  0011A4  FFFF               	dw	65535	; errata NOP
  9554  0011A6  CFF5 F036          	movff	tablat,___flmul@a+1
  9555  0011AA  0009               	tblrd		*+
  9556  0011AC  FFFF               	dw	65535	; errata NOP
  9557  0011AE  CFF5 F037          	movff	tablat,___flmul@a+2
  9558  0011B2  000A               	tblrd		*-
  9559  0011B4  FFFF               	dw	65535	; errata NOP
  9560  0011B6  CFF5 F038          	movff	tablat,___flmul@a+3
  9561  0011BA  EC66  F009         	call	___flmul	;wreg free
  9562  0011BE  C031  F04A         	movff	?___flmul,?_scale
  9563  0011C2  C032  F04B         	movff	?___flmul+1,?_scale+1
  9564  0011C6  C033  F04C         	movff	?___flmul+2,?_scale+2
  9565  0011CA  C034  F04D         	movff	?___flmul+3,?_scale+3
  9566  0011CE  EF63  F009         	goto	l230
  9567  0011D2                     l4113:
  9568  0011D2  FFFF               	dw	65535	; assembler added errata NOP
  9569                           
  9570                           ;doprnt.c: 446: else if(scl > 10)
  9571  0011D4  5052               	movf	scale@scl^0,w,c
  9572  0011D6  0A80               	xorlw	128
  9573  0011D8  0F75               	addlw	-139
  9574  0011DA  A0D8               	btfss	status,0,c
  9575  0011DC  EFF2  F008         	goto	u3751
  9576  0011E0  EFF5  F008         	goto	u3750
  9577  0011E4                     u3751:
  9578  0011E4  FFFF               	dw	65535	; assembler added errata NOP
  9579  0011E6  EF4A  F009         	goto	l4119
  9580  0011EA                     u3750:
  9581  0011EA  FFFF               	dw	65535	; assembler added errata NOP
  9582  0011EC                     
  9583                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  9584  0011EC  0E00               	movlw	0
  9585  0011EE  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  9586  0011F0  0E0A               	movlw	10
  9587  0011F2  6E09               	movwf	___awdiv@divisor^0,c
  9588  0011F4  5052               	movf	scale@scl^0,w,c
  9589  0011F6  6E07               	movwf	___awdiv@dividend^0,c
  9590  0011F8  6A08               	clrf	(___awdiv@dividend+1)^0,c
  9591  0011FA  BE07               	btfsc	___awdiv@dividend^0,7,c
  9592  0011FC  0608               	decf	(___awdiv@dividend+1)^0,f,c
  9593  0011FE  EC74  F036         	call	___awdiv	;wreg free
  9594  001202  0E09               	movlw	9
  9595  001204  2607               	addwf	?___awdiv^0,f,c
  9596  001206  5007               	movf	?___awdiv^0,w,c
  9597  001208  0D04               	mullw	4
  9598  00120A  0E9D               	movlw	low __powers_
  9599  00120C  24F3               	addwf	243,w,c
  9600  00120E  6EF6               	movwf	tblptrl,c
  9601  001210  0E7D               	movlw	high __powers_
  9602  001212  20F4               	addwfc	244,w,c
  9603  001214  6EF7               	movwf	tblptrh,c
  9604  001216                     	if	0	;There are less than 3 active tblptr bytes
  9605  001216                     	endif
  9606  001216  0009               	tblrd		*+
  9607  001218  FFFF               	dw	65535	; errata NOP
  9608  00121A  CFF5 F031          	movff	tablat,___flmul@b
  9609  00121E  0009               	tblrd		*+
  9610  001220  FFFF               	dw	65535	; errata NOP
  9611  001222  CFF5 F032          	movff	tablat,___flmul@b+1
  9612  001226  0009               	tblrd		*+
  9613  001228  FFFF               	dw	65535	; errata NOP
  9614  00122A  CFF5 F033          	movff	tablat,___flmul@b+2
  9615  00122E  000A               	tblrd		*-
  9616  001230  FFFF               	dw	65535	; errata NOP
  9617  001232  CFF5 F034          	movff	tablat,___flmul@b+3
  9618  001236  0E00               	movlw	0
  9619  001238  6E04               	movwf	(___awmod@divisor+1)^0,c
  9620  00123A  0E0A               	movlw	10
  9621  00123C  6E03               	movwf	___awmod@divisor^0,c
  9622  00123E  5052               	movf	scale@scl^0,w,c
  9623  001240  6E01               	movwf	___awmod@dividend^0,c
  9624  001242  6A02               	clrf	(___awmod@dividend+1)^0,c
  9625  001244  BE01               	btfsc	___awmod@dividend^0,7,c
  9626  001246  0602               	decf	(___awmod@dividend+1)^0,f,c
  9627  001248  EC06  F036         	call	___awmod	;wreg free
  9628  00124C  5001               	movf	?___awmod^0,w,c
  9629  00124E  0D04               	mullw	4
  9630  001250  0E9D               	movlw	low __powers_
  9631  001252  24F3               	addwf	243,w,c
  9632  001254  6EF6               	movwf	tblptrl,c
  9633  001256  0E7D               	movlw	high __powers_
  9634  001258  20F4               	addwfc	244,w,c
  9635  00125A  6EF7               	movwf	tblptrh,c
  9636  00125C                     	if	0	;There are less than 3 active tblptr bytes
  9637  00125C                     	endif
  9638  00125C  0009               	tblrd		*+
  9639  00125E  FFFF               	dw	65535	; errata NOP
  9640  001260  CFF5 F035          	movff	tablat,___flmul@a
  9641  001264  0009               	tblrd		*+
  9642  001266  FFFF               	dw	65535	; errata NOP
  9643  001268  CFF5 F036          	movff	tablat,___flmul@a+1
  9644  00126C  0009               	tblrd		*+
  9645  00126E  FFFF               	dw	65535	; errata NOP
  9646  001270  CFF5 F037          	movff	tablat,___flmul@a+2
  9647  001274  000A               	tblrd		*-
  9648  001276  FFFF               	dw	65535	; errata NOP
  9649  001278  CFF5 F038          	movff	tablat,___flmul@a+3
  9650  00127C  EC66  F009         	call	___flmul	;wreg free
  9651  001280  C031  F04A         	movff	?___flmul,?_scale
  9652  001284  C032  F04B         	movff	?___flmul+1,?_scale+1
  9653  001288  C033  F04C         	movff	?___flmul+2,?_scale+2
  9654  00128C  C034  F04D         	movff	?___flmul+3,?_scale+3
  9655  001290  EF63  F009         	goto	l230
  9656  001294                     l4119:
  9657  001294  FFFF               	dw	65535	; assembler added errata NOP
  9658                           
  9659                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  9660  001296  5052               	movf	scale@scl^0,w,c
  9661  001298  0D04               	mullw	4
  9662  00129A  0E9D               	movlw	low __powers_
  9663  00129C  24F3               	addwf	243,w,c
  9664  00129E  6EF6               	movwf	tblptrl,c
  9665  0012A0  0E7D               	movlw	high __powers_
  9666  0012A2  20F4               	addwfc	244,w,c
  9667  0012A4  6EF7               	movwf	tblptrh,c
  9668  0012A6                     	if	0	;There are less than 3 active tblptr bytes
  9669  0012A6                     	endif
  9670  0012A6  0009               	tblrd		*+
  9671  0012A8  FFFF               	dw	65535	; errata NOP
  9672  0012AA  CFF5 F04A          	movff	tablat,?_scale
  9673  0012AE  0009               	tblrd		*+
  9674  0012B0  FFFF               	dw	65535	; errata NOP
  9675  0012B2  CFF5 F04B          	movff	tablat,?_scale+1
  9676  0012B6  0009               	tblrd		*+
  9677  0012B8  FFFF               	dw	65535	; errata NOP
  9678  0012BA  CFF5 F04C          	movff	tablat,?_scale+2
  9679  0012BE  000A               	tblrd		*-
  9680  0012C0  FFFF               	dw	65535	; errata NOP
  9681  0012C2  CFF5 F04D          	movff	tablat,?_scale+3
  9682  0012C6                     l230:
  9683  0012C6  FFFF               	dw	65535	; assembler added errata NOP
  9684  0012C8  0012               	return		;funcret
  9685  0012CA  FFFF               	dw	65535	; errata NOP
  9686  0012CC                     __end_of_scale:
  9687                           	opt callstack 0
  9688                           
  9689 ;; *************** function ___awmod *****************
  9690 ;; Defined at:
  9691 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  9692 ;; Parameters:    Size  Location     Type
  9693 ;;  dividend        2    0[COMRAM] int 
  9694 ;;  divisor         2    2[COMRAM] int 
  9695 ;; Auto vars:     Size  Location     Type
  9696 ;;  sign            1    5[COMRAM] unsigned char 
  9697 ;;  counter         1    4[COMRAM] unsigned char 
  9698 ;; Return value:  Size  Location     Type
  9699 ;;                  2    0[COMRAM] int 
  9700 ;; Registers used:
  9701 ;;		wreg, status,2, status,0
  9702 ;; Tracked objects:
  9703 ;;		On entry : 0/0
  9704 ;;		On exit  : 0/0
  9705 ;;		Unchanged: 0/0
  9706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9707 ;;      Params:         4       0       0       0       0       0       0
  9708 ;;      Locals:         2       0       0       0       0       0       0
  9709 ;;      Temps:          0       0       0       0       0       0       0
  9710 ;;      Totals:         6       0       0       0       0       0       0
  9711 ;;Total ram usage:        6 bytes
  9712 ;; Hardware stack levels used:    1
  9713 ;; This function calls:
  9714 ;;		Nothing
  9715 ;; This function is called by:
  9716 ;;		_scale
  9717 ;; This function uses a non-reentrant model
  9718 ;;
  9719                           
  9720                           	psect	text14
  9721  006C0C                     __ptext14:
  9722                           	opt callstack 0
  9723  006C0C                     ___awmod:
  9724                           	opt callstack 0
  9725  006C0C  FFFF               	dw	65535	; assembler added errata NOP
  9726  006C0E  0E00               	movlw	0
  9727  006C10  6E06               	movwf	___awmod@sign^0,c
  9728  006C12  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  9729  006C14  EF11  F036         	goto	u3330
  9730  006C18  EF0E  F036         	goto	u3331
  9731  006C1C                     u3331:
  9732  006C1C  FFFF               	dw	65535	; assembler added errata NOP
  9733  006C1E  EF18  F036         	goto	l3861
  9734  006C22                     u3330:
  9735  006C22  FFFF               	dw	65535	; assembler added errata NOP
  9736  006C24  6C01               	negf	___awmod@dividend^0,c
  9737  006C26  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9738  006C28  B0D8               	btfsc	status,0,c
  9739  006C2A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9740  006C2C  0E01               	movlw	1
  9741  006C2E  6E06               	movwf	___awmod@sign^0,c
  9742  006C30                     l3861:
  9743  006C30  FFFF               	dw	65535	; assembler added errata NOP
  9744  006C32  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  9745  006C34  EF21  F036         	goto	u3340
  9746  006C38  EF1E  F036         	goto	u3341
  9747  006C3C                     u3341:
  9748  006C3C  FFFF               	dw	65535	; assembler added errata NOP
  9749  006C3E  EF26  F036         	goto	l3865
  9750  006C42                     u3340:
  9751  006C42  FFFF               	dw	65535	; assembler added errata NOP
  9752  006C44  6C03               	negf	___awmod@divisor^0,c
  9753  006C46  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9754  006C48  B0D8               	btfsc	status,0,c
  9755  006C4A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9756  006C4C                     l3865:
  9757  006C4C  FFFF               	dw	65535	; assembler added errata NOP
  9758  006C4E  5003               	movf	___awmod@divisor^0,w,c
  9759  006C50  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9760  006C52  B4D8               	btfsc	status,2,c
  9761  006C54  EF2E  F036         	goto	u3351
  9762  006C58  EF31  F036         	goto	u3350
  9763  006C5C                     u3351:
  9764  006C5C  FFFF               	dw	65535	; assembler added errata NOP
  9765  006C5E  EF5E  F036         	goto	l3881
  9766  006C62                     u3350:
  9767  006C62  FFFF               	dw	65535	; assembler added errata NOP
  9768  006C64  0E01               	movlw	1
  9769  006C66  6E05               	movwf	___awmod@counter^0,c
  9770  006C68  EF3B  F036         	goto	l3871
  9771  006C6C                     l3869:
  9772  006C6C  FFFF               	dw	65535	; assembler added errata NOP
  9773  006C6E  90D8               	bcf	status,0,c
  9774  006C70  3603               	rlcf	___awmod@divisor^0,f,c
  9775  006C72  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9776  006C74  2A05               	incf	___awmod@counter^0,f,c
  9777  006C76                     l3871:
  9778  006C76  FFFF               	dw	65535	; assembler added errata NOP
  9779  006C78  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9780  006C7A  EF41  F036         	goto	u3361
  9781  006C7E  EF44  F036         	goto	u3360
  9782  006C82                     u3361:
  9783  006C82  FFFF               	dw	65535	; assembler added errata NOP
  9784  006C84  EF36  F036         	goto	l3869
  9785  006C88                     u3360:
  9786  006C88  FFFF               	dw	65535	; assembler added errata NOP
  9787  006C8A                     l3873:
  9788  006C8A  FFFF               	dw	65535	; assembler added errata NOP
  9789  006C8C  5003               	movf	___awmod@divisor^0,w,c
  9790  006C8E  5C01               	subwf	___awmod@dividend^0,w,c
  9791  006C90  5004               	movf	(___awmod@divisor+1)^0,w,c
  9792  006C92  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9793  006C94  A0D8               	btfss	status,0,c
  9794  006C96  EF4F  F036         	goto	u3371
  9795  006C9A  EF52  F036         	goto	u3370
  9796  006C9E                     u3371:
  9797  006C9E  FFFF               	dw	65535	; assembler added errata NOP
  9798  006CA0  EF57  F036         	goto	l3877
  9799  006CA4                     u3370:
  9800  006CA4  FFFF               	dw	65535	; assembler added errata NOP
  9801  006CA6  5003               	movf	___awmod@divisor^0,w,c
  9802  006CA8  5E01               	subwf	___awmod@dividend^0,f,c
  9803  006CAA  5004               	movf	(___awmod@divisor+1)^0,w,c
  9804  006CAC  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9805  006CAE                     l3877:
  9806  006CAE  FFFF               	dw	65535	; assembler added errata NOP
  9807  006CB0  90D8               	bcf	status,0,c
  9808  006CB2  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9809  006CB4  3203               	rrcf	___awmod@divisor^0,f,c
  9810  006CB6  2E05               	decfsz	___awmod@counter^0,f,c
  9811  006CB8  EF45  F036         	goto	l3873
  9812  006CBC                     l3881:
  9813  006CBC  FFFF               	dw	65535	; assembler added errata NOP
  9814  006CBE  5006               	movf	___awmod@sign^0,w,c
  9815  006CC0  B4D8               	btfsc	status,2,c
  9816  006CC2  EF65  F036         	goto	u3381
  9817  006CC6  EF68  F036         	goto	u3380
  9818  006CCA                     u3381:
  9819  006CCA  FFFF               	dw	65535	; assembler added errata NOP
  9820  006CCC  EF6D  F036         	goto	l3885
  9821  006CD0                     u3380:
  9822  006CD0  FFFF               	dw	65535	; assembler added errata NOP
  9823  006CD2  6C01               	negf	___awmod@dividend^0,c
  9824  006CD4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9825  006CD6  B0D8               	btfsc	status,0,c
  9826  006CD8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9827  006CDA                     l3885:
  9828  006CDA  FFFF               	dw	65535	; assembler added errata NOP
  9829  006CDC  C001  F001         	movff	___awmod@dividend,?___awmod
  9830  006CE0  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9831  006CE4  0012               	return		;funcret
  9832  006CE6  FFFF               	dw	65535	; errata NOP
  9833  006CE8                     __end_of___awmod:
  9834                           	opt callstack 0
  9835                           
  9836 ;; *************** function ___awdiv *****************
  9837 ;; Defined at:
  9838 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  9839 ;; Parameters:    Size  Location     Type
  9840 ;;  dividend        2    6[COMRAM] int 
  9841 ;;  divisor         2    8[COMRAM] int 
  9842 ;; Auto vars:     Size  Location     Type
  9843 ;;  quotient        2   12[COMRAM] int 
  9844 ;;  sign            1   11[COMRAM] unsigned char 
  9845 ;;  counter         1   10[COMRAM] unsigned char 
  9846 ;; Return value:  Size  Location     Type
  9847 ;;                  2    6[COMRAM] int 
  9848 ;; Registers used:
  9849 ;;		wreg, status,2, status,0
  9850 ;; Tracked objects:
  9851 ;;		On entry : 0/0
  9852 ;;		On exit  : 0/0
  9853 ;;		Unchanged: 0/0
  9854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9855 ;;      Params:         4       0       0       0       0       0       0
  9856 ;;      Locals:         4       0       0       0       0       0       0
  9857 ;;      Temps:          0       0       0       0       0       0       0
  9858 ;;      Totals:         8       0       0       0       0       0       0
  9859 ;;Total ram usage:        8 bytes
  9860 ;; Hardware stack levels used:    1
  9861 ;; This function calls:
  9862 ;;		Nothing
  9863 ;; This function is called by:
  9864 ;;		_main
  9865 ;;		_scale
  9866 ;;		_sprintf
  9867 ;; This function uses a non-reentrant model
  9868 ;;
  9869                           
  9870                           	psect	text15
  9871  006CE8                     __ptext15:
  9872                           	opt callstack 0
  9873  006CE8                     ___awdiv:
  9874                           	opt callstack 0
  9875  006CE8  FFFF               	dw	65535	; assembler added errata NOP
  9876  006CEA  0E00               	movlw	0
  9877  006CEC  6E0C               	movwf	___awdiv@sign^0,c
  9878  006CEE  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  9879  006CF0  EF7F  F036         	goto	u3270
  9880  006CF4  EF7C  F036         	goto	u3271
  9881  006CF8                     u3271:
  9882  006CF8  FFFF               	dw	65535	; assembler added errata NOP
  9883  006CFA  EF86  F036         	goto	l3817
  9884  006CFE                     u3270:
  9885  006CFE  FFFF               	dw	65535	; assembler added errata NOP
  9886  006D00  6C09               	negf	___awdiv@divisor^0,c
  9887  006D02  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  9888  006D04  B0D8               	btfsc	status,0,c
  9889  006D06  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  9890  006D08  0E01               	movlw	1
  9891  006D0A  6E0C               	movwf	___awdiv@sign^0,c
  9892  006D0C                     l3817:
  9893  006D0C  FFFF               	dw	65535	; assembler added errata NOP
  9894  006D0E  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  9895  006D10  EF8F  F036         	goto	u3280
  9896  006D14  EF8C  F036         	goto	u3281
  9897  006D18                     u3281:
  9898  006D18  FFFF               	dw	65535	; assembler added errata NOP
  9899  006D1A  EF96  F036         	goto	l3823
  9900  006D1E                     u3280:
  9901  006D1E  FFFF               	dw	65535	; assembler added errata NOP
  9902  006D20  6C07               	negf	___awdiv@dividend^0,c
  9903  006D22  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  9904  006D24  B0D8               	btfsc	status,0,c
  9905  006D26  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  9906  006D28  0E01               	movlw	1
  9907  006D2A  1A0C               	xorwf	___awdiv@sign^0,f,c
  9908  006D2C                     l3823:
  9909  006D2C  FFFF               	dw	65535	; assembler added errata NOP
  9910  006D2E  0E00               	movlw	0
  9911  006D30  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  9912  006D32  0E00               	movlw	0
  9913  006D34  6E0D               	movwf	___awdiv@quotient^0,c
  9914  006D36  5009               	movf	___awdiv@divisor^0,w,c
  9915  006D38  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  9916  006D3A  B4D8               	btfsc	status,2,c
  9917  006D3C  EFA2  F036         	goto	u3291
  9918  006D40  EFA5  F036         	goto	u3290
  9919  006D44                     u3291:
  9920  006D44  FFFF               	dw	65535	; assembler added errata NOP
  9921  006D46  EFD6  F036         	goto	l3845
  9922  006D4A                     u3290:
  9923  006D4A  FFFF               	dw	65535	; assembler added errata NOP
  9924  006D4C  0E01               	movlw	1
  9925  006D4E  6E0B               	movwf	___awdiv@counter^0,c
  9926  006D50  EFAF  F036         	goto	l3831
  9927  006D54                     l3829:
  9928  006D54  FFFF               	dw	65535	; assembler added errata NOP
  9929  006D56  90D8               	bcf	status,0,c
  9930  006D58  3609               	rlcf	___awdiv@divisor^0,f,c
  9931  006D5A  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  9932  006D5C  2A0B               	incf	___awdiv@counter^0,f,c
  9933  006D5E                     l3831:
  9934  006D5E  FFFF               	dw	65535	; assembler added errata NOP
  9935  006D60  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  9936  006D62  EFB5  F036         	goto	u3301
  9937  006D66  EFB8  F036         	goto	u3300
  9938  006D6A                     u3301:
  9939  006D6A  FFFF               	dw	65535	; assembler added errata NOP
  9940  006D6C  EFAA  F036         	goto	l3829
  9941  006D70                     u3300:
  9942  006D70  FFFF               	dw	65535	; assembler added errata NOP
  9943  006D72                     l3833:
  9944  006D72  FFFF               	dw	65535	; assembler added errata NOP
  9945  006D74  90D8               	bcf	status,0,c
  9946  006D76  360D               	rlcf	___awdiv@quotient^0,f,c
  9947  006D78  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  9948  006D7A  5009               	movf	___awdiv@divisor^0,w,c
  9949  006D7C  5C07               	subwf	___awdiv@dividend^0,w,c
  9950  006D7E  500A               	movf	(___awdiv@divisor+1)^0,w,c
  9951  006D80  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  9952  006D82  A0D8               	btfss	status,0,c
  9953  006D84  EFC6  F036         	goto	u3311
  9954  006D88  EFC9  F036         	goto	u3310
  9955  006D8C                     u3311:
  9956  006D8C  FFFF               	dw	65535	; assembler added errata NOP
  9957  006D8E  EFCF  F036         	goto	l3841
  9958  006D92                     u3310:
  9959  006D92  FFFF               	dw	65535	; assembler added errata NOP
  9960  006D94  5009               	movf	___awdiv@divisor^0,w,c
  9961  006D96  5E07               	subwf	___awdiv@dividend^0,f,c
  9962  006D98  500A               	movf	(___awdiv@divisor+1)^0,w,c
  9963  006D9A  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  9964  006D9C  800D               	bsf	___awdiv@quotient^0,0,c
  9965  006D9E                     l3841:
  9966  006D9E  FFFF               	dw	65535	; assembler added errata NOP
  9967  006DA0  90D8               	bcf	status,0,c
  9968  006DA2  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  9969  006DA4  3209               	rrcf	___awdiv@divisor^0,f,c
  9970  006DA6  2E0B               	decfsz	___awdiv@counter^0,f,c
  9971  006DA8  EFB9  F036         	goto	l3833
  9972  006DAC                     l3845:
  9973  006DAC  FFFF               	dw	65535	; assembler added errata NOP
  9974  006DAE  500C               	movf	___awdiv@sign^0,w,c
  9975  006DB0  B4D8               	btfsc	status,2,c
  9976  006DB2  EFDD  F036         	goto	u3321
  9977  006DB6  EFE0  F036         	goto	u3320
  9978  006DBA                     u3321:
  9979  006DBA  FFFF               	dw	65535	; assembler added errata NOP
  9980  006DBC  EFE5  F036         	goto	l3849
  9981  006DC0                     u3320:
  9982  006DC0  FFFF               	dw	65535	; assembler added errata NOP
  9983  006DC2  6C0D               	negf	___awdiv@quotient^0,c
  9984  006DC4  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  9985  006DC6  B0D8               	btfsc	status,0,c
  9986  006DC8  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  9987  006DCA                     l3849:
  9988  006DCA  FFFF               	dw	65535	; assembler added errata NOP
  9989  006DCC  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  9990  006DD0  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  9991  006DD4  0012               	return		;funcret
  9992  006DD6  FFFF               	dw	65535	; errata NOP
  9993  006DD8                     __end_of___awdiv:
  9994                           	opt callstack 0
  9995                           
  9996 ;; *************** function _isdigit *****************
  9997 ;; Defined at:
  9998 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  9999 ;; Parameters:    Size  Location     Type
 10000 ;;  c               1    wreg     unsigned char 
 10001 ;; Auto vars:     Size  Location     Type
 10002 ;;  c               1    2[COMRAM] unsigned char 
 10003 ;; Return value:  Size  Location     Type
 10004 ;;		None               void
 10005 ;; Registers used:
 10006 ;;		wreg, status,2, status,0
 10007 ;; Tracked objects:
 10008 ;;		On entry : 0/0
 10009 ;;		On exit  : 0/0
 10010 ;;		Unchanged: 0/0
 10011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10012 ;;      Params:         0       0       0       0       0       0       0
 10013 ;;      Locals:         2       0       0       0       0       0       0
 10014 ;;      Temps:          1       0       0       0       0       0       0
 10015 ;;      Totals:         3       0       0       0       0       0       0
 10016 ;;Total ram usage:        3 bytes
 10017 ;; Hardware stack levels used:    1
 10018 ;; This function calls:
 10019 ;;		Nothing
 10020 ;; This function is called by:
 10021 ;;		_sprintf
 10022 ;; This function uses a non-reentrant model
 10023 ;;
 10024                           
 10025                           	psect	text16
 10026  006612                     __ptext16:
 10027                           	opt callstack 0
 10028  006612                     _isdigit:
 10029                           	opt callstack 0
 10030  006612  FFFF               	dw	65535	; assembler added errata NOP
 10031                           
 10032                           ;incstack = 0
 10033                           ;isdigit@c stored from wreg
 10034  006614  6E03               	movwf	isdigit@c^0,c
 10035  006616  0E00               	movlw	0
 10036  006618  6E02               	movwf	_isdigit$703^0,c
 10037  00661A  0E3A               	movlw	58
 10038  00661C  6003               	cpfslt	isdigit@c^0,c
 10039  00661E  EF13  F033         	goto	u3761
 10040  006622  EF16  F033         	goto	u3760
 10041  006626                     u3761:
 10042  006626  FFFF               	dw	65535	; assembler added errata NOP
 10043  006628  EF23  F033         	goto	l4131
 10044  00662C                     u3760:
 10045  00662C  FFFF               	dw	65535	; assembler added errata NOP
 10046  00662E  0E2F               	movlw	47
 10047  006630  6403               	cpfsgt	isdigit@c^0,c
 10048  006632  EF1D  F033         	goto	u3771
 10049  006636  EF20  F033         	goto	u3770
 10050  00663A                     u3771:
 10051  00663A  FFFF               	dw	65535	; assembler added errata NOP
 10052  00663C  EF23  F033         	goto	l4131
 10053  006640                     u3770:
 10054  006640  FFFF               	dw	65535	; assembler added errata NOP
 10055  006642  0E01               	movlw	1
 10056  006644  6E02               	movwf	_isdigit$703^0,c
 10057  006646                     l4131:
 10058  006646  FFFF               	dw	65535	; assembler added errata NOP
 10059  006648  C002  F001         	movff	_isdigit$703,??_isdigit
 10060  00664C  3001               	rrcf	??_isdigit^0,w,c
 10061  00664E  0012               	return		;funcret
 10062  006650  FFFF               	dw	65535	; errata NOP
 10063  006652                     __end_of_isdigit:
 10064                           	opt callstack 0
 10065                           
 10066 ;; *************** function _fround *****************
 10067 ;; Defined at:
 10068 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
 10069 ;; Parameters:    Size  Location     Type
 10070 ;;  prec            1    wreg     unsigned char 
 10071 ;; Auto vars:     Size  Location     Type
 10072 ;;  prec            1   85[COMRAM] unsigned char 
 10073 ;; Return value:  Size  Location     Type
 10074 ;;                  4   73[COMRAM] unsigned char 
 10075 ;; Registers used:
 10076 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10077 ;; Tracked objects:
 10078 ;;		On entry : 0/0
 10079 ;;		On exit  : 0/0
 10080 ;;		Unchanged: 0/0
 10081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10082 ;;      Params:         4       0       0       0       0       0       0
 10083 ;;      Locals:         9       0       0       0       0       0       0
 10084 ;;      Temps:          0       0       0       0       0       0       0
 10085 ;;      Totals:        13       0       0       0       0       0       0
 10086 ;;Total ram usage:       13 bytes
 10087 ;; Hardware stack levels used:    1
 10088 ;; Hardware stack levels required when called:    1
 10089 ;; This function calls:
 10090 ;;		___flmul
 10091 ;;		___lwdiv
 10092 ;;		___lwmod
 10093 ;; This function is called by:
 10094 ;;		_sprintf
 10095 ;; This function uses a non-reentrant model
 10096 ;;
 10097                           
 10098                           	psect	text17
 10099  007AB8                     __ptext17:
 10100                           	opt callstack 0
 10101  007AB8                     _fround:
 10102                           	opt callstack 0
 10103  007AB8  FFFF               	dw	65535	; assembler added errata NOP
 10104                           
 10105                           ;incstack = 0
 10106                           ;fround@prec stored from wreg
 10107  007ABA  6E56               	movwf	fround@prec^0,c
 10108  007ABC                     
 10109                           ;doprnt.c: 421: if(prec>=110)
 10110  007ABC  0E6D               	movlw	109
 10111  007ABE  6456               	cpfsgt	fround@prec^0,c
 10112  007AC0  EF64  F03D         	goto	u3691
 10113  007AC4  EF67  F03D         	goto	u3690
 10114  007AC8                     u3691:
 10115  007AC8  FFFF               	dw	65535	; assembler added errata NOP
 10116  007ACA  EF21  F03E         	goto	l4075
 10117  007ACE                     u3690:
 10118  007ACE  FFFF               	dw	65535	; assembler added errata NOP
 10119  007AD0                     
 10120                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 10121  007AD0  0E00               	movlw	0
 10122  007AD2  6E35               	movwf	___flmul@a^0,c
 10123  007AD4  0E00               	movlw	0
 10124  007AD6  6E36               	movwf	(___flmul@a+1)^0,c
 10125  007AD8  0E00               	movlw	0
 10126  007ADA  6E37               	movwf	(___flmul@a+2)^0,c
 10127  007ADC  0E3F               	movlw	63
 10128  007ADE  6E38               	movwf	(___flmul@a+3)^0,c
 10129  007AE0  0E00               	movlw	0
 10130  007AE2  6E09               	movwf	(___lwdiv@divisor+1)^0,c
 10131  007AE4  0E64               	movlw	100
 10132  007AE6  6E08               	movwf	___lwdiv@divisor^0,c
 10133  007AE8  C056  F006         	movff	fround@prec,___lwdiv@dividend
 10134  007AEC  6A07               	clrf	(___lwdiv@dividend+1)^0,c
 10135  007AEE  EC43  F034         	call	___lwdiv	;wreg free
 10136  007AF2  90D8               	bcf	status,0,c
 10137  007AF4  3606               	rlcf	?___lwdiv^0,f,c
 10138  007AF6  3607               	rlcf	(?___lwdiv+1)^0,f,c
 10139  007AF8  90D8               	bcf	status,0,c
 10140  007AFA  3606               	rlcf	?___lwdiv^0,f,c
 10141  007AFC  3607               	rlcf	(?___lwdiv+1)^0,f,c
 10142  007AFE  0E48               	movlw	72
 10143  007B00  2606               	addwf	?___lwdiv^0,f,c
 10144  007B02  0E00               	movlw	0
 10145  007B04  2207               	addwfc	(?___lwdiv+1)^0,f,c
 10146  007B06  0ED1               	movlw	low __npowers_
 10147  007B08  2406               	addwf	?___lwdiv^0,w,c
 10148  007B0A  6EF6               	movwf	tblptrl,c
 10149  007B0C  0E7D               	movlw	high __npowers_
 10150  007B0E  2007               	addwfc	(?___lwdiv+1)^0,w,c
 10151  007B10  6EF7               	movwf	tblptrh,c
 10152  007B12                     	if	0	;There are less than 3 active tblptr bytes
 10153  007B12                     	endif
 10154  007B12  0009               	tblrd		*+
 10155  007B14  FFFF               	dw	65535	; errata NOP
 10156  007B16  CFF5 F031          	movff	tablat,___flmul@b
 10157  007B1A  0009               	tblrd		*+
 10158  007B1C  FFFF               	dw	65535	; errata NOP
 10159  007B1E  CFF5 F032          	movff	tablat,___flmul@b+1
 10160  007B22  0009               	tblrd		*+
 10161  007B24  FFFF               	dw	65535	; errata NOP
 10162  007B26  CFF5 F033          	movff	tablat,___flmul@b+2
 10163  007B2A  000A               	tblrd		*-
 10164  007B2C  FFFF               	dw	65535	; errata NOP
 10165  007B2E  CFF5 F034          	movff	tablat,___flmul@b+3
 10166  007B32  EC66  F009         	call	___flmul	;wreg free
 10167  007B36  C031  F052         	movff	?___flmul,_fround$978
 10168  007B3A  C032  F053         	movff	?___flmul+1,_fround$978+1
 10169  007B3E  C033  F054         	movff	?___flmul+2,_fround$978+2
 10170  007B42  C034  F055         	movff	?___flmul+3,_fround$978+3
 10171                           
 10172                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 10173  007B46  0E00               	movlw	0
 10174  007B48  6E09               	movwf	(___lwdiv@divisor+1)^0,c
 10175  007B4A  0E0A               	movlw	10
 10176  007B4C  6E08               	movwf	___lwdiv@divisor^0,c
 10177  007B4E  0E00               	movlw	0
 10178  007B50  6E04               	movwf	(___lwmod@divisor+1)^0,c
 10179  007B52  0E64               	movlw	100
 10180  007B54  6E03               	movwf	___lwmod@divisor^0,c
 10181  007B56  C056  F001         	movff	fround@prec,___lwmod@dividend
 10182  007B5A  6A02               	clrf	(___lwmod@dividend+1)^0,c
 10183  007B5C  EC04  F034         	call	___lwmod	;wreg free
 10184  007B60  C001  F006         	movff	?___lwmod,___lwdiv@dividend
 10185  007B64  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
 10186  007B68  EC43  F034         	call	___lwdiv	;wreg free
 10187  007B6C  90D8               	bcf	status,0,c
 10188  007B6E  3606               	rlcf	?___lwdiv^0,f,c
 10189  007B70  3607               	rlcf	(?___lwdiv+1)^0,f,c
 10190  007B72  90D8               	bcf	status,0,c
 10191  007B74  3606               	rlcf	?___lwdiv^0,f,c
 10192  007B76  3607               	rlcf	(?___lwdiv+1)^0,f,c
 10193  007B78  0E24               	movlw	36
 10194  007B7A  2606               	addwf	?___lwdiv^0,f,c
 10195  007B7C  0E00               	movlw	0
 10196  007B7E  2207               	addwfc	(?___lwdiv+1)^0,f,c
 10197  007B80  0ED1               	movlw	low __npowers_
 10198  007B82  2406               	addwf	?___lwdiv^0,w,c
 10199  007B84  6EF6               	movwf	tblptrl,c
 10200  007B86  0E7D               	movlw	high __npowers_
 10201  007B88  2007               	addwfc	(?___lwdiv+1)^0,w,c
 10202  007B8A  6EF7               	movwf	tblptrh,c
 10203  007B8C                     	if	0	;There are less than 3 active tblptr bytes
 10204  007B8C                     	endif
 10205  007B8C  0009               	tblrd		*+
 10206  007B8E  FFFF               	dw	65535	; errata NOP
 10207  007B90  CFF5 F035          	movff	tablat,___flmul@a
 10208  007B94  0009               	tblrd		*+
 10209  007B96  FFFF               	dw	65535	; errata NOP
 10210  007B98  CFF5 F036          	movff	tablat,___flmul@a+1
 10211  007B9C  0009               	tblrd		*+
 10212  007B9E  FFFF               	dw	65535	; errata NOP
 10213  007BA0  CFF5 F037          	movff	tablat,___flmul@a+2
 10214  007BA4  000A               	tblrd		*-
 10215  007BA6  FFFF               	dw	65535	; errata NOP
 10216  007BA8  CFF5 F038          	movff	tablat,___flmul@a+3
 10217  007BAC  C052  F031         	movff	_fround$978,___flmul@b
 10218  007BB0  C053  F032         	movff	_fround$978+1,___flmul@b+1
 10219  007BB4  C054  F033         	movff	_fround$978+2,___flmul@b+2
 10220  007BB8  C055  F034         	movff	_fround$978+3,___flmul@b+3
 10221  007BBC  EC66  F009         	call	___flmul	;wreg free
 10222  007BC0  C031  F04E         	movff	?___flmul,_fround$979
 10223  007BC4  C032  F04F         	movff	?___flmul+1,_fround$979+1
 10224  007BC8  C033  F050         	movff	?___flmul+2,_fround$979+2
 10225  007BCC  C034  F051         	movff	?___flmul+3,_fround$979+3
 10226                           
 10227                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 10228  007BD0  C04E  F031         	movff	_fround$979,___flmul@b
 10229  007BD4  C04F  F032         	movff	_fround$979+1,___flmul@b+1
 10230  007BD8  C050  F033         	movff	_fround$979+2,___flmul@b+2
 10231  007BDC  C051  F034         	movff	_fround$979+3,___flmul@b+3
 10232  007BE0  0E00               	movlw	0
 10233  007BE2  6E04               	movwf	(___lwmod@divisor+1)^0,c
 10234  007BE4  0E0A               	movlw	10
 10235  007BE6  6E03               	movwf	___lwmod@divisor^0,c
 10236  007BE8  C056  F001         	movff	fround@prec,___lwmod@dividend
 10237  007BEC  6A02               	clrf	(___lwmod@dividend+1)^0,c
 10238  007BEE  EC04  F034         	call	___lwmod	;wreg free
 10239  007BF2  90D8               	bcf	status,0,c
 10240  007BF4  3601               	rlcf	?___lwmod^0,f,c
 10241  007BF6  3602               	rlcf	(?___lwmod+1)^0,f,c
 10242  007BF8  90D8               	bcf	status,0,c
 10243  007BFA  3601               	rlcf	?___lwmod^0,f,c
 10244  007BFC  3602               	rlcf	(?___lwmod+1)^0,f,c
 10245  007BFE  0ED1               	movlw	low __npowers_
 10246  007C00  2401               	addwf	?___lwmod^0,w,c
 10247  007C02  6EF6               	movwf	tblptrl,c
 10248  007C04  0E7D               	movlw	high __npowers_
 10249  007C06  2002               	addwfc	(?___lwmod+1)^0,w,c
 10250  007C08  6EF7               	movwf	tblptrh,c
 10251  007C0A                     	if	0	;There are less than 3 active tblptr bytes
 10252  007C0A                     	endif
 10253  007C0A  0009               	tblrd		*+
 10254  007C0C  FFFF               	dw	65535	; errata NOP
 10255  007C0E  CFF5 F035          	movff	tablat,___flmul@a
 10256  007C12  0009               	tblrd		*+
 10257  007C14  FFFF               	dw	65535	; errata NOP
 10258  007C16  CFF5 F036          	movff	tablat,___flmul@a+1
 10259  007C1A  0009               	tblrd		*+
 10260  007C1C  FFFF               	dw	65535	; errata NOP
 10261  007C1E  CFF5 F037          	movff	tablat,___flmul@a+2
 10262  007C22  000A               	tblrd		*-
 10263  007C24  FFFF               	dw	65535	; errata NOP
 10264  007C26  CFF5 F038          	movff	tablat,___flmul@a+3
 10265  007C2A  EC66  F009         	call	___flmul	;wreg free
 10266  007C2E  C031  F04A         	movff	?___flmul,?_fround
 10267  007C32  C032  F04B         	movff	?___flmul+1,?_fround+1
 10268  007C36  C033  F04C         	movff	?___flmul+2,?_fround+2
 10269  007C3A  C034  F04D         	movff	?___flmul+3,?_fround+3
 10270  007C3E  EFCB  F03E         	goto	l223
 10271  007C42                     l4075:
 10272  007C42  FFFF               	dw	65535	; assembler added errata NOP
 10273                           
 10274                           ;doprnt.c: 423: else if(prec > 10)
 10275  007C44  0E0A               	movlw	10
 10276  007C46  6456               	cpfsgt	fround@prec^0,c
 10277  007C48  EF28  F03E         	goto	u3701
 10278  007C4C  EF2B  F03E         	goto	u3700
 10279  007C50                     u3701:
 10280  007C50  FFFF               	dw	65535	; assembler added errata NOP
 10281  007C52  EFA0  F03E         	goto	l4081
 10282  007C56                     u3700:
 10283  007C56  FFFF               	dw	65535	; assembler added errata NOP
 10284  007C58                     
 10285                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 10286  007C58  0E00               	movlw	0
 10287  007C5A  6E35               	movwf	___flmul@a^0,c
 10288  007C5C  0E00               	movlw	0
 10289  007C5E  6E36               	movwf	(___flmul@a+1)^0,c
 10290  007C60  0E00               	movlw	0
 10291  007C62  6E37               	movwf	(___flmul@a+2)^0,c
 10292  007C64  0E3F               	movlw	63
 10293  007C66  6E38               	movwf	(___flmul@a+3)^0,c
 10294  007C68  0E00               	movlw	0
 10295  007C6A  6E09               	movwf	(___lwdiv@divisor+1)^0,c
 10296  007C6C  0E0A               	movlw	10
 10297  007C6E  6E08               	movwf	___lwdiv@divisor^0,c
 10298  007C70  C056  F006         	movff	fround@prec,___lwdiv@dividend
 10299  007C74  6A07               	clrf	(___lwdiv@dividend+1)^0,c
 10300  007C76  EC43  F034         	call	___lwdiv	;wreg free
 10301  007C7A  90D8               	bcf	status,0,c
 10302  007C7C  3606               	rlcf	?___lwdiv^0,f,c
 10303  007C7E  3607               	rlcf	(?___lwdiv+1)^0,f,c
 10304  007C80  90D8               	bcf	status,0,c
 10305  007C82  3606               	rlcf	?___lwdiv^0,f,c
 10306  007C84  3607               	rlcf	(?___lwdiv+1)^0,f,c
 10307  007C86  0E24               	movlw	36
 10308  007C88  2606               	addwf	?___lwdiv^0,f,c
 10309  007C8A  0E00               	movlw	0
 10310  007C8C  2207               	addwfc	(?___lwdiv+1)^0,f,c
 10311  007C8E  0ED1               	movlw	low __npowers_
 10312  007C90  2406               	addwf	?___lwdiv^0,w,c
 10313  007C92  6EF6               	movwf	tblptrl,c
 10314  007C94  0E7D               	movlw	high __npowers_
 10315  007C96  2007               	addwfc	(?___lwdiv+1)^0,w,c
 10316  007C98  6EF7               	movwf	tblptrh,c
 10317  007C9A                     	if	0	;There are less than 3 active tblptr bytes
 10318  007C9A                     	endif
 10319  007C9A  0009               	tblrd		*+
 10320  007C9C  FFFF               	dw	65535	; errata NOP
 10321  007C9E  CFF5 F031          	movff	tablat,___flmul@b
 10322  007CA2  0009               	tblrd		*+
 10323  007CA4  FFFF               	dw	65535	; errata NOP
 10324  007CA6  CFF5 F032          	movff	tablat,___flmul@b+1
 10325  007CAA  0009               	tblrd		*+
 10326  007CAC  FFFF               	dw	65535	; errata NOP
 10327  007CAE  CFF5 F033          	movff	tablat,___flmul@b+2
 10328  007CB2  000A               	tblrd		*-
 10329  007CB4  FFFF               	dw	65535	; errata NOP
 10330  007CB6  CFF5 F034          	movff	tablat,___flmul@b+3
 10331  007CBA  EC66  F009         	call	___flmul	;wreg free
 10332  007CBE  C031  F052         	movff	?___flmul,_fround$978
 10333  007CC2  C032  F053         	movff	?___flmul+1,_fround$978+1
 10334  007CC6  C033  F054         	movff	?___flmul+2,_fround$978+2
 10335  007CCA  C034  F055         	movff	?___flmul+3,_fround$978+3
 10336                           
 10337                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 10338  007CCE  C052  F031         	movff	_fround$978,___flmul@b
 10339  007CD2  C053  F032         	movff	_fround$978+1,___flmul@b+1
 10340  007CD6  C054  F033         	movff	_fround$978+2,___flmul@b+2
 10341  007CDA  C055  F034         	movff	_fround$978+3,___flmul@b+3
 10342  007CDE  0E00               	movlw	0
 10343  007CE0  6E04               	movwf	(___lwmod@divisor+1)^0,c
 10344  007CE2  0E0A               	movlw	10
 10345  007CE4  6E03               	movwf	___lwmod@divisor^0,c
 10346  007CE6  C056  F001         	movff	fround@prec,___lwmod@dividend
 10347  007CEA  6A02               	clrf	(___lwmod@dividend+1)^0,c
 10348  007CEC  EC04  F034         	call	___lwmod	;wreg free
 10349  007CF0  90D8               	bcf	status,0,c
 10350  007CF2  3601               	rlcf	?___lwmod^0,f,c
 10351  007CF4  3602               	rlcf	(?___lwmod+1)^0,f,c
 10352  007CF6  90D8               	bcf	status,0,c
 10353  007CF8  3601               	rlcf	?___lwmod^0,f,c
 10354  007CFA  3602               	rlcf	(?___lwmod+1)^0,f,c
 10355  007CFC  0ED1               	movlw	low __npowers_
 10356  007CFE  2401               	addwf	?___lwmod^0,w,c
 10357  007D00  6EF6               	movwf	tblptrl,c
 10358  007D02  0E7D               	movlw	high __npowers_
 10359  007D04  2002               	addwfc	(?___lwmod+1)^0,w,c
 10360  007D06  6EF7               	movwf	tblptrh,c
 10361  007D08                     	if	0	;There are less than 3 active tblptr bytes
 10362  007D08                     	endif
 10363  007D08  0009               	tblrd		*+
 10364  007D0A  FFFF               	dw	65535	; errata NOP
 10365  007D0C  CFF5 F035          	movff	tablat,___flmul@a
 10366  007D10  0009               	tblrd		*+
 10367  007D12  FFFF               	dw	65535	; errata NOP
 10368  007D14  CFF5 F036          	movff	tablat,___flmul@a+1
 10369  007D18  0009               	tblrd		*+
 10370  007D1A  FFFF               	dw	65535	; errata NOP
 10371  007D1C  CFF5 F037          	movff	tablat,___flmul@a+2
 10372  007D20  000A               	tblrd		*-
 10373  007D22  FFFF               	dw	65535	; errata NOP
 10374  007D24  CFF5 F038          	movff	tablat,___flmul@a+3
 10375  007D28  EC66  F009         	call	___flmul	;wreg free
 10376  007D2C  C031  F04A         	movff	?___flmul,?_fround
 10377  007D30  C032  F04B         	movff	?___flmul+1,?_fround+1
 10378  007D34  C033  F04C         	movff	?___flmul+2,?_fround+2
 10379  007D38  C034  F04D         	movff	?___flmul+3,?_fround+3
 10380  007D3C  EFCB  F03E         	goto	l223
 10381  007D40                     l4081:
 10382  007D40  FFFF               	dw	65535	; assembler added errata NOP
 10383                           
 10384                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
 10385  007D42  5056               	movf	fround@prec^0,w,c
 10386  007D44  0D04               	mullw	4
 10387  007D46  0ED1               	movlw	low __npowers_
 10388  007D48  24F3               	addwf	243,w,c
 10389  007D4A  6EF6               	movwf	tblptrl,c
 10390  007D4C  0E7D               	movlw	high __npowers_
 10391  007D4E  20F4               	addwfc	244,w,c
 10392  007D50  6EF7               	movwf	tblptrh,c
 10393  007D52                     	if	0	;There are less than 3 active tblptr bytes
 10394  007D52                     	endif
 10395  007D52  0009               	tblrd		*+
 10396  007D54  FFFF               	dw	65535	; errata NOP
 10397  007D56  CFF5 F031          	movff	tablat,___flmul@b
 10398  007D5A  0009               	tblrd		*+
 10399  007D5C  FFFF               	dw	65535	; errata NOP
 10400  007D5E  CFF5 F032          	movff	tablat,___flmul@b+1
 10401  007D62  0009               	tblrd		*+
 10402  007D64  FFFF               	dw	65535	; errata NOP
 10403  007D66  CFF5 F033          	movff	tablat,___flmul@b+2
 10404  007D6A  000A               	tblrd		*-
 10405  007D6C  FFFF               	dw	65535	; errata NOP
 10406  007D6E  CFF5 F034          	movff	tablat,___flmul@b+3
 10407  007D72  0E00               	movlw	0
 10408  007D74  6E35               	movwf	___flmul@a^0,c
 10409  007D76  0E00               	movlw	0
 10410  007D78  6E36               	movwf	(___flmul@a+1)^0,c
 10411  007D7A  0E00               	movlw	0
 10412  007D7C  6E37               	movwf	(___flmul@a+2)^0,c
 10413  007D7E  0E3F               	movlw	63
 10414  007D80  6E38               	movwf	(___flmul@a+3)^0,c
 10415  007D82  EC66  F009         	call	___flmul	;wreg free
 10416  007D86  C031  F04A         	movff	?___flmul,?_fround
 10417  007D8A  C032  F04B         	movff	?___flmul+1,?_fround+1
 10418  007D8E  C033  F04C         	movff	?___flmul+2,?_fround+2
 10419  007D92  C034  F04D         	movff	?___flmul+3,?_fround+3
 10420  007D96                     l223:
 10421  007D96  FFFF               	dw	65535	; assembler added errata NOP
 10422  007D98  0012               	return		;funcret
 10423  007D9A  FFFF               	dw	65535	; errata NOP
 10424  007D9C                     __end_of_fround:
 10425                           	opt callstack 0
 10426                           
 10427 ;; *************** function ___lwmod *****************
 10428 ;; Defined at:
 10429 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
 10430 ;; Parameters:    Size  Location     Type
 10431 ;;  dividend        2    0[COMRAM] unsigned int 
 10432 ;;  divisor         2    2[COMRAM] unsigned int 
 10433 ;; Auto vars:     Size  Location     Type
 10434 ;;  counter         1    4[COMRAM] unsigned char 
 10435 ;; Return value:  Size  Location     Type
 10436 ;;                  2    0[COMRAM] unsigned int 
 10437 ;; Registers used:
 10438 ;;		wreg, status,2, status,0
 10439 ;; Tracked objects:
 10440 ;;		On entry : 0/0
 10441 ;;		On exit  : 0/0
 10442 ;;		Unchanged: 0/0
 10443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10444 ;;      Params:         4       0       0       0       0       0       0
 10445 ;;      Locals:         1       0       0       0       0       0       0
 10446 ;;      Temps:          0       0       0       0       0       0       0
 10447 ;;      Totals:         5       0       0       0       0       0       0
 10448 ;;Total ram usage:        5 bytes
 10449 ;; Hardware stack levels used:    1
 10450 ;; This function calls:
 10451 ;;		Nothing
 10452 ;; This function is called by:
 10453 ;;		_fround
 10454 ;; This function uses a non-reentrant model
 10455 ;;
 10456                           
 10457                           	psect	text18
 10458  006808                     __ptext18:
 10459                           	opt callstack 0
 10460  006808                     ___lwmod:
 10461                           	opt callstack 0
 10462  006808  FFFF               	dw	65535	; assembler added errata NOP
 10463  00680A  5003               	movf	___lwmod@divisor^0,w,c
 10464  00680C  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
 10465  00680E  B4D8               	btfsc	status,2,c
 10466  006810  EF0C  F034         	goto	u3541
 10467  006814  EF0F  F034         	goto	u3540
 10468  006818                     u3541:
 10469  006818  FFFF               	dw	65535	; assembler added errata NOP
 10470  00681A  EF3C  F034         	goto	l831
 10471  00681E                     u3540:
 10472  00681E  FFFF               	dw	65535	; assembler added errata NOP
 10473  006820  0E01               	movlw	1
 10474  006822  6E05               	movwf	___lwmod@counter^0,c
 10475  006824  EF19  F034         	goto	l3983
 10476  006828                     l3981:
 10477  006828  FFFF               	dw	65535	; assembler added errata NOP
 10478  00682A  90D8               	bcf	status,0,c
 10479  00682C  3603               	rlcf	___lwmod@divisor^0,f,c
 10480  00682E  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
 10481  006830  2A05               	incf	___lwmod@counter^0,f,c
 10482  006832                     l3983:
 10483  006832  FFFF               	dw	65535	; assembler added errata NOP
 10484  006834  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
 10485  006836  EF1F  F034         	goto	u3551
 10486  00683A  EF22  F034         	goto	u3550
 10487  00683E                     u3551:
 10488  00683E  FFFF               	dw	65535	; assembler added errata NOP
 10489  006840  EF14  F034         	goto	l3981
 10490  006844                     u3550:
 10491  006844  FFFF               	dw	65535	; assembler added errata NOP
 10492  006846                     l3985:
 10493  006846  FFFF               	dw	65535	; assembler added errata NOP
 10494  006848  5003               	movf	___lwmod@divisor^0,w,c
 10495  00684A  5C01               	subwf	___lwmod@dividend^0,w,c
 10496  00684C  5004               	movf	(___lwmod@divisor+1)^0,w,c
 10497  00684E  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
 10498  006850  A0D8               	btfss	status,0,c
 10499  006852  EF2D  F034         	goto	u3561
 10500  006856  EF30  F034         	goto	u3560
 10501  00685A                     u3561:
 10502  00685A  FFFF               	dw	65535	; assembler added errata NOP
 10503  00685C  EF35  F034         	goto	l3989
 10504  006860                     u3560:
 10505  006860  FFFF               	dw	65535	; assembler added errata NOP
 10506  006862  5003               	movf	___lwmod@divisor^0,w,c
 10507  006864  5E01               	subwf	___lwmod@dividend^0,f,c
 10508  006866  5004               	movf	(___lwmod@divisor+1)^0,w,c
 10509  006868  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
 10510  00686A                     l3989:
 10511  00686A  FFFF               	dw	65535	; assembler added errata NOP
 10512  00686C  90D8               	bcf	status,0,c
 10513  00686E  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
 10514  006870  3203               	rrcf	___lwmod@divisor^0,f,c
 10515  006872  2E05               	decfsz	___lwmod@counter^0,f,c
 10516  006874  EF23  F034         	goto	l3985
 10517  006878                     l831:
 10518  006878  FFFF               	dw	65535	; assembler added errata NOP
 10519  00687A  C001  F001         	movff	___lwmod@dividend,?___lwmod
 10520  00687E  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 10521  006882  0012               	return		;funcret
 10522  006884  FFFF               	dw	65535	; errata NOP
 10523  006886                     __end_of___lwmod:
 10524                           	opt callstack 0
 10525                           
 10526 ;; *************** function ___lwdiv *****************
 10527 ;; Defined at:
 10528 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
 10529 ;; Parameters:    Size  Location     Type
 10530 ;;  dividend        2    5[COMRAM] unsigned int 
 10531 ;;  divisor         2    7[COMRAM] unsigned int 
 10532 ;; Auto vars:     Size  Location     Type
 10533 ;;  quotient        2    9[COMRAM] unsigned int 
 10534 ;;  counter         1   11[COMRAM] unsigned char 
 10535 ;; Return value:  Size  Location     Type
 10536 ;;                  2    5[COMRAM] unsigned int 
 10537 ;; Registers used:
 10538 ;;		wreg, status,2, status,0
 10539 ;; Tracked objects:
 10540 ;;		On entry : 0/0
 10541 ;;		On exit  : 0/0
 10542 ;;		Unchanged: 0/0
 10543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10544 ;;      Params:         4       0       0       0       0       0       0
 10545 ;;      Locals:         3       0       0       0       0       0       0
 10546 ;;      Temps:          0       0       0       0       0       0       0
 10547 ;;      Totals:         7       0       0       0       0       0       0
 10548 ;;Total ram usage:        7 bytes
 10549 ;; Hardware stack levels used:    1
 10550 ;; This function calls:
 10551 ;;		Nothing
 10552 ;; This function is called by:
 10553 ;;		_fround
 10554 ;; This function uses a non-reentrant model
 10555 ;;
 10556                           
 10557                           	psect	text19
 10558  006886                     __ptext19:
 10559                           	opt callstack 0
 10560  006886                     ___lwdiv:
 10561                           	opt callstack 0
 10562  006886  FFFF               	dw	65535	; assembler added errata NOP
 10563  006888  0E00               	movlw	0
 10564  00688A  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
 10565  00688C  0E00               	movlw	0
 10566  00688E  6E0A               	movwf	___lwdiv@quotient^0,c
 10567  006890  5008               	movf	___lwdiv@divisor^0,w,c
 10568  006892  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
 10569  006894  B4D8               	btfsc	status,2,c
 10570  006896  EF4F  F034         	goto	u3511
 10571  00689A  EF52  F034         	goto	u3510
 10572  00689E                     u3511:
 10573  00689E  FFFF               	dw	65535	; assembler added errata NOP
 10574  0068A0  EF83  F034         	goto	l821
 10575  0068A4                     u3510:
 10576  0068A4  FFFF               	dw	65535	; assembler added errata NOP
 10577  0068A6  0E01               	movlw	1
 10578  0068A8  6E0C               	movwf	___lwdiv@counter^0,c
 10579  0068AA  EF5C  F034         	goto	l3963
 10580  0068AE                     l3961:
 10581  0068AE  FFFF               	dw	65535	; assembler added errata NOP
 10582  0068B0  90D8               	bcf	status,0,c
 10583  0068B2  3608               	rlcf	___lwdiv@divisor^0,f,c
 10584  0068B4  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
 10585  0068B6  2A0C               	incf	___lwdiv@counter^0,f,c
 10586  0068B8                     l3963:
 10587  0068B8  FFFF               	dw	65535	; assembler added errata NOP
 10588  0068BA  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
 10589  0068BC  EF62  F034         	goto	u3521
 10590  0068C0  EF65  F034         	goto	u3520
 10591  0068C4                     u3521:
 10592  0068C4  FFFF               	dw	65535	; assembler added errata NOP
 10593  0068C6  EF57  F034         	goto	l3961
 10594  0068CA                     u3520:
 10595  0068CA  FFFF               	dw	65535	; assembler added errata NOP
 10596  0068CC                     l3965:
 10597  0068CC  FFFF               	dw	65535	; assembler added errata NOP
 10598  0068CE  90D8               	bcf	status,0,c
 10599  0068D0  360A               	rlcf	___lwdiv@quotient^0,f,c
 10600  0068D2  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
 10601  0068D4  5008               	movf	___lwdiv@divisor^0,w,c
 10602  0068D6  5C06               	subwf	___lwdiv@dividend^0,w,c
 10603  0068D8  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 10604  0068DA  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
 10605  0068DC  A0D8               	btfss	status,0,c
 10606  0068DE  EF73  F034         	goto	u3531
 10607  0068E2  EF76  F034         	goto	u3530
 10608  0068E6                     u3531:
 10609  0068E6  FFFF               	dw	65535	; assembler added errata NOP
 10610  0068E8  EF7C  F034         	goto	l3973
 10611  0068EC                     u3530:
 10612  0068EC  FFFF               	dw	65535	; assembler added errata NOP
 10613  0068EE  5008               	movf	___lwdiv@divisor^0,w,c
 10614  0068F0  5E06               	subwf	___lwdiv@dividend^0,f,c
 10615  0068F2  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 10616  0068F4  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
 10617  0068F6  800A               	bsf	___lwdiv@quotient^0,0,c
 10618  0068F8                     l3973:
 10619  0068F8  FFFF               	dw	65535	; assembler added errata NOP
 10620  0068FA  90D8               	bcf	status,0,c
 10621  0068FC  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
 10622  0068FE  3208               	rrcf	___lwdiv@divisor^0,f,c
 10623  006900  2E0C               	decfsz	___lwdiv@counter^0,f,c
 10624  006902  EF66  F034         	goto	l3965
 10625  006906                     l821:
 10626  006906  FFFF               	dw	65535	; assembler added errata NOP
 10627  006908  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
 10628  00690C  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10629  006910  0012               	return		;funcret
 10630  006912  FFFF               	dw	65535	; errata NOP
 10631  006914                     __end_of___lwdiv:
 10632                           	opt callstack 0
 10633                           
 10634 ;; *************** function ___flmul *****************
 10635 ;; Defined at:
 10636 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
 10637 ;; Parameters:    Size  Location     Type
 10638 ;;  b               4   48[COMRAM] unsigned int 
 10639 ;;  a               4   52[COMRAM] unsigned int 
 10640 ;; Auto vars:     Size  Location     Type
 10641 ;;  prod            4   67[COMRAM] struct .
 10642 ;;  grs             4   61[COMRAM] unsigned long 
 10643 ;;  temp            2   71[COMRAM] struct .
 10644 ;;  bexp            1   66[COMRAM] unsigned char 
 10645 ;;  aexp            1   65[COMRAM] unsigned char 
 10646 ;;  sign            1   60[COMRAM] unsigned char 
 10647 ;; Return value:  Size  Location     Type
 10648 ;;                  4   48[COMRAM] unsigned char 
 10649 ;; Registers used:
 10650 ;;		wreg, status,2, status,0, prodl, prodh
 10651 ;; Tracked objects:
 10652 ;;		On entry : 0/0
 10653 ;;		On exit  : 0/0
 10654 ;;		Unchanged: 0/0
 10655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10656 ;;      Params:         8       0       0       0       0       0       0
 10657 ;;      Locals:        13       0       0       0       0       0       0
 10658 ;;      Temps:          4       0       0       0       0       0       0
 10659 ;;      Totals:        25       0       0       0       0       0       0
 10660 ;;Total ram usage:       25 bytes
 10661 ;; Hardware stack levels used:    1
 10662 ;; This function calls:
 10663 ;;		Nothing
 10664 ;; This function is called by:
 10665 ;;		_fround
 10666 ;;		_scale
 10667 ;;		_sprintf
 10668 ;;		_pow
 10669 ;;		_exp
 10670 ;;		_log
 10671 ;;		_eval_poly
 10672 ;; This function uses a non-reentrant model
 10673 ;;
 10674                           
 10675                           	psect	text20
 10676  0012CC                     __ptext20:
 10677                           	opt callstack 0
 10678  0012CC                     ___flmul:
 10679                           	opt callstack 0
 10680  0012CC  FFFF               	dw	65535	; assembler added errata NOP
 10681  0012CE  5034               	movf	(___flmul@b+3)^0,w,c
 10682  0012D0  0B80               	andlw	128
 10683  0012D2  6E3D               	movwf	___flmul@sign^0,c
 10684  0012D4  5034               	movf	(___flmul@b+3)^0,w,c
 10685  0012D6  2434               	addwf	(___flmul@b+3)^0,w,c
 10686  0012D8  6E43               	movwf	___flmul@bexp^0,c
 10687  0012DA  AE33               	btfss	(___flmul@b+2)^0,7,c
 10688  0012DC  EF72  F009         	goto	u3081
 10689  0012E0  EF75  F009         	goto	u3080
 10690  0012E4                     u3081:
 10691  0012E4  FFFF               	dw	65535	; assembler added errata NOP
 10692  0012E6  EF77  F009         	goto	l3685
 10693  0012EA                     u3080:
 10694  0012EA  FFFF               	dw	65535	; assembler added errata NOP
 10695  0012EC  8043               	bsf	___flmul@bexp^0,0,c
 10696  0012EE                     l3685:
 10697  0012EE  FFFF               	dw	65535	; assembler added errata NOP
 10698  0012F0  5043               	movf	___flmul@bexp^0,w,c
 10699  0012F2  B4D8               	btfsc	status,2,c
 10700  0012F4  EF7E  F009         	goto	u3091
 10701  0012F8  EF81  F009         	goto	u3090
 10702  0012FC                     u3091:
 10703  0012FC  FFFF               	dw	65535	; assembler added errata NOP
 10704  0012FE  EF98  F009         	goto	l3693
 10705  001302                     u3090:
 10706  001302  FFFF               	dw	65535	; assembler added errata NOP
 10707  001304  2843               	incf	___flmul@bexp^0,w,c
 10708  001306  A4D8               	btfss	status,2,c
 10709  001308  EF88  F009         	goto	u3101
 10710  00130C  EF8B  F009         	goto	u3100
 10711  001310                     u3101:
 10712  001310  FFFF               	dw	65535	; assembler added errata NOP
 10713  001312  EF94  F009         	goto	l3691
 10714  001316                     u3100:
 10715  001316  FFFF               	dw	65535	; assembler added errata NOP
 10716  001318  0E00               	movlw	0
 10717  00131A  6E31               	movwf	___flmul@b^0,c
 10718  00131C  0E00               	movlw	0
 10719  00131E  6E32               	movwf	(___flmul@b+1)^0,c
 10720  001320  0E00               	movlw	0
 10721  001322  6E33               	movwf	(___flmul@b+2)^0,c
 10722  001324  0E00               	movlw	0
 10723  001326  6E34               	movwf	(___flmul@b+3)^0,c
 10724  001328                     l3691:
 10725  001328  FFFF               	dw	65535	; assembler added errata NOP
 10726  00132A  8E33               	bsf	(___flmul@b+2)^0,7,c
 10727  00132C  EFA1  F009         	goto	l3695
 10728  001330                     l3693:
 10729  001330  FFFF               	dw	65535	; assembler added errata NOP
 10730  001332  0E00               	movlw	0
 10731  001334  6E31               	movwf	___flmul@b^0,c
 10732  001336  0E00               	movlw	0
 10733  001338  6E32               	movwf	(___flmul@b+1)^0,c
 10734  00133A  0E00               	movlw	0
 10735  00133C  6E33               	movwf	(___flmul@b+2)^0,c
 10736  00133E  0E00               	movlw	0
 10737  001340  6E34               	movwf	(___flmul@b+3)^0,c
 10738  001342                     l3695:
 10739  001342  FFFF               	dw	65535	; assembler added errata NOP
 10740  001344  5038               	movf	(___flmul@a+3)^0,w,c
 10741  001346  0B80               	andlw	128
 10742  001348  1A3D               	xorwf	___flmul@sign^0,f,c
 10743  00134A  5038               	movf	(___flmul@a+3)^0,w,c
 10744  00134C  2438               	addwf	(___flmul@a+3)^0,w,c
 10745  00134E  6E42               	movwf	___flmul@aexp^0,c
 10746  001350  AE37               	btfss	(___flmul@a+2)^0,7,c
 10747  001352  EFAD  F009         	goto	u3111
 10748  001356  EFB0  F009         	goto	u3110
 10749  00135A                     u3111:
 10750  00135A  FFFF               	dw	65535	; assembler added errata NOP
 10751  00135C  EFB2  F009         	goto	l3703
 10752  001360                     u3110:
 10753  001360  FFFF               	dw	65535	; assembler added errata NOP
 10754  001362  8042               	bsf	___flmul@aexp^0,0,c
 10755  001364                     l3703:
 10756  001364  FFFF               	dw	65535	; assembler added errata NOP
 10757  001366  5042               	movf	___flmul@aexp^0,w,c
 10758  001368  B4D8               	btfsc	status,2,c
 10759  00136A  EFB9  F009         	goto	u3121
 10760  00136E  EFBC  F009         	goto	u3120
 10761  001372                     u3121:
 10762  001372  FFFF               	dw	65535	; assembler added errata NOP
 10763  001374  EFD3  F009         	goto	l3711
 10764  001378                     u3120:
 10765  001378  FFFF               	dw	65535	; assembler added errata NOP
 10766  00137A  2842               	incf	___flmul@aexp^0,w,c
 10767  00137C  A4D8               	btfss	status,2,c
 10768  00137E  EFC3  F009         	goto	u3131
 10769  001382  EFC6  F009         	goto	u3130
 10770  001386                     u3131:
 10771  001386  FFFF               	dw	65535	; assembler added errata NOP
 10772  001388  EFCF  F009         	goto	l3709
 10773  00138C                     u3130:
 10774  00138C  FFFF               	dw	65535	; assembler added errata NOP
 10775  00138E  0E00               	movlw	0
 10776  001390  6E35               	movwf	___flmul@a^0,c
 10777  001392  0E00               	movlw	0
 10778  001394  6E36               	movwf	(___flmul@a+1)^0,c
 10779  001396  0E00               	movlw	0
 10780  001398  6E37               	movwf	(___flmul@a+2)^0,c
 10781  00139A  0E00               	movlw	0
 10782  00139C  6E38               	movwf	(___flmul@a+3)^0,c
 10783  00139E                     l3709:
 10784  00139E  FFFF               	dw	65535	; assembler added errata NOP
 10785  0013A0  8E37               	bsf	(___flmul@a+2)^0,7,c
 10786  0013A2  EFDC  F009         	goto	l944
 10787  0013A6                     l3711:
 10788  0013A6  FFFF               	dw	65535	; assembler added errata NOP
 10789  0013A8  0E00               	movlw	0
 10790  0013AA  6E35               	movwf	___flmul@a^0,c
 10791  0013AC  0E00               	movlw	0
 10792  0013AE  6E36               	movwf	(___flmul@a+1)^0,c
 10793  0013B0  0E00               	movlw	0
 10794  0013B2  6E37               	movwf	(___flmul@a+2)^0,c
 10795  0013B4  0E00               	movlw	0
 10796  0013B6  6E38               	movwf	(___flmul@a+3)^0,c
 10797  0013B8                     l944:
 10798  0013B8  FFFF               	dw	65535	; assembler added errata NOP
 10799  0013BA  5042               	movf	___flmul@aexp^0,w,c
 10800  0013BC  B4D8               	btfsc	status,2,c
 10801  0013BE  EFE3  F009         	goto	u3141
 10802  0013C2  EFE6  F009         	goto	u3140
 10803  0013C6                     u3141:
 10804  0013C6  FFFF               	dw	65535	; assembler added errata NOP
 10805  0013C8  EFF0  F009         	goto	l3715
 10806  0013CC                     u3140:
 10807  0013CC  FFFF               	dw	65535	; assembler added errata NOP
 10808  0013CE  5043               	movf	___flmul@bexp^0,w,c
 10809  0013D0  A4D8               	btfss	status,2,c
 10810  0013D2  EFED  F009         	goto	u3151
 10811  0013D6  EFF0  F009         	goto	u3150
 10812  0013DA                     u3151:
 10813  0013DA  FFFF               	dw	65535	; assembler added errata NOP
 10814  0013DC  EFFB  F009         	goto	l3719
 10815  0013E0                     u3150:
 10816  0013E0                     l3715:
 10817  0013E0  FFFF               	dw	65535	; assembler added errata NOP
 10818  0013E2  0E00               	movlw	0
 10819  0013E4  6E31               	movwf	?___flmul^0,c
 10820  0013E6  0E00               	movlw	0
 10821  0013E8  6E32               	movwf	(?___flmul+1)^0,c
 10822  0013EA  0E00               	movlw	0
 10823  0013EC  6E33               	movwf	(?___flmul+2)^0,c
 10824  0013EE  0E00               	movlw	0
 10825  0013F0  6E34               	movwf	(?___flmul+3)^0,c
 10826  0013F2  EFB5  F00B         	goto	l948
 10827  0013F6                     l3719:
 10828  0013F6  FFFF               	dw	65535	; assembler added errata NOP
 10829  0013F8  5037               	movf	(___flmul@a+2)^0,w,c
 10830  0013FA  0231               	mulwf	___flmul@b^0,c
 10831  0013FC  CFF3 F048          	movff	prodl,___flmul@temp
 10832  001400  CFF4 F049          	movff	prodh,___flmul@temp+1
 10833  001404  5048               	movf	___flmul@temp^0,w,c
 10834  001406  6E3E               	movwf	___flmul@grs^0,c
 10835  001408  6A3F               	clrf	(___flmul@grs+1)^0,c
 10836  00140A  6A40               	clrf	(___flmul@grs+2)^0,c
 10837  00140C  6A41               	clrf	(___flmul@grs+3)^0,c
 10838  00140E  5049               	movf	(___flmul@temp+1)^0,w,c
 10839  001410  6E44               	movwf	___flmul@prod^0,c
 10840  001412  6A45               	clrf	(___flmul@prod+1)^0,c
 10841  001414  6A46               	clrf	(___flmul@prod+2)^0,c
 10842  001416  6A47               	clrf	(___flmul@prod+3)^0,c
 10843  001418  5036               	movf	(___flmul@a+1)^0,w,c
 10844  00141A  0232               	mulwf	(___flmul@b+1)^0,c
 10845  00141C  CFF3 F048          	movff	prodl,___flmul@temp
 10846  001420  CFF4 F049          	movff	prodh,___flmul@temp+1
 10847  001424  5048               	movf	___flmul@temp^0,w,c
 10848  001426  263E               	addwf	___flmul@grs^0,f,c
 10849  001428  0E00               	movlw	0
 10850  00142A  223F               	addwfc	(___flmul@grs+1)^0,f,c
 10851  00142C  2240               	addwfc	(___flmul@grs+2)^0,f,c
 10852  00142E  2241               	addwfc	(___flmul@grs+3)^0,f,c
 10853  001430  5049               	movf	(___flmul@temp+1)^0,w,c
 10854  001432  2644               	addwf	___flmul@prod^0,f,c
 10855  001434  0E00               	movlw	0
 10856  001436  2245               	addwfc	(___flmul@prod+1)^0,f,c
 10857  001438  2246               	addwfc	(___flmul@prod+2)^0,f,c
 10858  00143A  2247               	addwfc	(___flmul@prod+3)^0,f,c
 10859  00143C  5035               	movf	___flmul@a^0,w,c
 10860  00143E  0233               	mulwf	(___flmul@b+2)^0,c
 10861  001440  CFF3 F048          	movff	prodl,___flmul@temp
 10862  001444  CFF4 F049          	movff	prodh,___flmul@temp+1
 10863  001448  5048               	movf	___flmul@temp^0,w,c
 10864  00144A  263E               	addwf	___flmul@grs^0,f,c
 10865  00144C  0E00               	movlw	0
 10866  00144E  223F               	addwfc	(___flmul@grs+1)^0,f,c
 10867  001450  2240               	addwfc	(___flmul@grs+2)^0,f,c
 10868  001452  2241               	addwfc	(___flmul@grs+3)^0,f,c
 10869  001454  5049               	movf	(___flmul@temp+1)^0,w,c
 10870  001456  2644               	addwf	___flmul@prod^0,f,c
 10871  001458  0E00               	movlw	0
 10872  00145A  2245               	addwfc	(___flmul@prod+1)^0,f,c
 10873  00145C  2246               	addwfc	(___flmul@prod+2)^0,f,c
 10874  00145E  2247               	addwfc	(___flmul@prod+3)^0,f,c
 10875  001460  C040  F041         	movff	___flmul@grs+2,___flmul@grs+3
 10876  001464  C03F  F040         	movff	___flmul@grs+1,___flmul@grs+2
 10877  001468  C03E  F03F         	movff	___flmul@grs,___flmul@grs+1
 10878  00146C  6A3E               	clrf	___flmul@grs^0,c
 10879  00146E  5035               	movf	___flmul@a^0,w,c
 10880  001470  0232               	mulwf	(___flmul@b+1)^0,c
 10881  001472  CFF3 F048          	movff	prodl,___flmul@temp
 10882  001476  CFF4 F049          	movff	prodh,___flmul@temp+1
 10883  00147A  5048               	movf	___flmul@temp^0,w,c
 10884  00147C  263E               	addwf	___flmul@grs^0,f,c
 10885  00147E  5049               	movf	(___flmul@temp+1)^0,w,c
 10886  001480  223F               	addwfc	(___flmul@grs+1)^0,f,c
 10887  001482  0E00               	movlw	0
 10888  001484  2240               	addwfc	(___flmul@grs+2)^0,f,c
 10889  001486  0E00               	movlw	0
 10890  001488  2241               	addwfc	(___flmul@grs+3)^0,f,c
 10891  00148A  5036               	movf	(___flmul@a+1)^0,w,c
 10892  00148C  0231               	mulwf	___flmul@b^0,c
 10893  00148E  CFF3 F048          	movff	prodl,___flmul@temp
 10894  001492  CFF4 F049          	movff	prodh,___flmul@temp+1
 10895  001496  5048               	movf	___flmul@temp^0,w,c
 10896  001498  263E               	addwf	___flmul@grs^0,f,c
 10897  00149A  5049               	movf	(___flmul@temp+1)^0,w,c
 10898  00149C  223F               	addwfc	(___flmul@grs+1)^0,f,c
 10899  00149E  0E00               	movlw	0
 10900  0014A0  2240               	addwfc	(___flmul@grs+2)^0,f,c
 10901  0014A2  0E00               	movlw	0
 10902  0014A4  2241               	addwfc	(___flmul@grs+3)^0,f,c
 10903  0014A6  C040  F041         	movff	___flmul@grs+2,___flmul@grs+3
 10904  0014AA  C03F  F040         	movff	___flmul@grs+1,___flmul@grs+2
 10905  0014AE  C03E  F03F         	movff	___flmul@grs,___flmul@grs+1
 10906  0014B2  6A3E               	clrf	___flmul@grs^0,c
 10907  0014B4  5035               	movf	___flmul@a^0,w,c
 10908  0014B6  0231               	mulwf	___flmul@b^0,c
 10909  0014B8  CFF3 F048          	movff	prodl,___flmul@temp
 10910  0014BC  CFF4 F049          	movff	prodh,___flmul@temp+1
 10911  0014C0  5048               	movf	___flmul@temp^0,w,c
 10912  0014C2  263E               	addwf	___flmul@grs^0,f,c
 10913  0014C4  5049               	movf	(___flmul@temp+1)^0,w,c
 10914  0014C6  223F               	addwfc	(___flmul@grs+1)^0,f,c
 10915  0014C8  0E00               	movlw	0
 10916  0014CA  2240               	addwfc	(___flmul@grs+2)^0,f,c
 10917  0014CC  0E00               	movlw	0
 10918  0014CE  2241               	addwfc	(___flmul@grs+3)^0,f,c
 10919  0014D0  5037               	movf	(___flmul@a+2)^0,w,c
 10920  0014D2  0232               	mulwf	(___flmul@b+1)^0,c
 10921  0014D4  CFF3 F048          	movff	prodl,___flmul@temp
 10922  0014D8  CFF4 F049          	movff	prodh,___flmul@temp+1
 10923  0014DC  5048               	movf	___flmul@temp^0,w,c
 10924  0014DE  2644               	addwf	___flmul@prod^0,f,c
 10925  0014E0  5049               	movf	(___flmul@temp+1)^0,w,c
 10926  0014E2  2245               	addwfc	(___flmul@prod+1)^0,f,c
 10927  0014E4  0E00               	movlw	0
 10928  0014E6  2246               	addwfc	(___flmul@prod+2)^0,f,c
 10929  0014E8  0E00               	movlw	0
 10930  0014EA  2247               	addwfc	(___flmul@prod+3)^0,f,c
 10931  0014EC  5036               	movf	(___flmul@a+1)^0,w,c
 10932  0014EE  0233               	mulwf	(___flmul@b+2)^0,c
 10933  0014F0  CFF3 F048          	movff	prodl,___flmul@temp
 10934  0014F4  CFF4 F049          	movff	prodh,___flmul@temp+1
 10935  0014F8  5048               	movf	___flmul@temp^0,w,c
 10936  0014FA  2644               	addwf	___flmul@prod^0,f,c
 10937  0014FC  5049               	movf	(___flmul@temp+1)^0,w,c
 10938  0014FE  2245               	addwfc	(___flmul@prod+1)^0,f,c
 10939  001500  0E00               	movlw	0
 10940  001502  2246               	addwfc	(___flmul@prod+2)^0,f,c
 10941  001504  0E00               	movlw	0
 10942  001506  2247               	addwfc	(___flmul@prod+3)^0,f,c
 10943  001508  5037               	movf	(___flmul@a+2)^0,w,c
 10944  00150A  0233               	mulwf	(___flmul@b+2)^0,c
 10945  00150C  CFF3 F048          	movff	prodl,___flmul@temp
 10946  001510  CFF4 F049          	movff	prodh,___flmul@temp+1
 10947  001514  5048               	movf	___flmul@temp^0,w,c
 10948  001516  6E39               	movwf	??___flmul^0,c
 10949  001518  5049               	movf	(___flmul@temp+1)^0,w,c
 10950  00151A  6E3A               	movwf	(??___flmul+1)^0,c
 10951  00151C  6A3B               	clrf	(??___flmul+2)^0,c
 10952  00151E  6A3C               	clrf	(??___flmul+3)^0,c
 10953  001520  C03B  F03C         	movff	??___flmul+2,??___flmul+3
 10954  001524  C03A  F03B         	movff	??___flmul+1,??___flmul+2
 10955  001528  C039  F03A         	movff	??___flmul,??___flmul+1
 10956  00152C  6A39               	clrf	??___flmul^0,c
 10957  00152E  5039               	movf	??___flmul^0,w,c
 10958  001530  2644               	addwf	___flmul@prod^0,f,c
 10959  001532  503A               	movf	(??___flmul+1)^0,w,c
 10960  001534  2245               	addwfc	(___flmul@prod+1)^0,f,c
 10961  001536  503B               	movf	(??___flmul+2)^0,w,c
 10962  001538  2246               	addwfc	(___flmul@prod+2)^0,f,c
 10963  00153A  503C               	movf	(??___flmul+3)^0,w,c
 10964  00153C  2247               	addwfc	(___flmul@prod+3)^0,f,c
 10965  00153E  C03E  F039         	movff	___flmul@grs,??___flmul
 10966  001542  C03F  F03A         	movff	___flmul@grs+1,??___flmul+1
 10967  001546  C040  F03B         	movff	___flmul@grs+2,??___flmul+2
 10968  00154A  C041  F03C         	movff	___flmul@grs+3,??___flmul+3
 10969  00154E  0E19               	movlw	25
 10970  001550  EFB0  F00A         	goto	u3160
 10971  001554                     u3165:
 10972  001554  FFFF               	dw	65535	; assembler added errata NOP
 10973  001556  90D8               	bcf	status,0,c
 10974  001558  323C               	rrcf	(??___flmul+3)^0,f,c
 10975  00155A  323B               	rrcf	(??___flmul+2)^0,f,c
 10976  00155C  323A               	rrcf	(??___flmul+1)^0,f,c
 10977  00155E  3239               	rrcf	??___flmul^0,f,c
 10978  001560                     u3160:
 10979  001560  FFFF               	dw	65535	; assembler added errata NOP
 10980  001562  2EE8               	decfsz	wreg,f,c
 10981  001564  EFAA  F00A         	goto	u3165
 10982  001568  5039               	movf	??___flmul^0,w,c
 10983  00156A  2644               	addwf	___flmul@prod^0,f,c
 10984  00156C  503A               	movf	(??___flmul+1)^0,w,c
 10985  00156E  2245               	addwfc	(___flmul@prod+1)^0,f,c
 10986  001570  503B               	movf	(??___flmul+2)^0,w,c
 10987  001572  2246               	addwfc	(___flmul@prod+2)^0,f,c
 10988  001574  503C               	movf	(??___flmul+3)^0,w,c
 10989  001576  2247               	addwfc	(___flmul@prod+3)^0,f,c
 10990  001578  C040  F041         	movff	___flmul@grs+2,___flmul@grs+3
 10991  00157C  C03F  F040         	movff	___flmul@grs+1,___flmul@grs+2
 10992  001580  C03E  F03F         	movff	___flmul@grs,___flmul@grs+1
 10993  001584  6A3E               	clrf	___flmul@grs^0,c
 10994  001586  5042               	movf	___flmul@aexp^0,w,c
 10995  001588  C043  F039         	movff	___flmul@bexp,??___flmul
 10996  00158C  6A3A               	clrf	(??___flmul+1)^0,c
 10997  00158E  2639               	addwf	??___flmul^0,f,c
 10998  001590  0E00               	movlw	0
 10999  001592  223A               	addwfc	(??___flmul+1)^0,f,c
 11000  001594  0E82               	movlw	130
 11001  001596  2439               	addwf	??___flmul^0,w,c
 11002  001598  6E48               	movwf	___flmul@temp^0,c
 11003  00159A  0EFF               	movlw	255
 11004  00159C  203A               	addwfc	(??___flmul+1)^0,w,c
 11005  00159E  6E49               	movwf	(___flmul@temp+1)^0,c
 11006  0015A0  EFEB  F00A         	goto	l3767
 11007  0015A4                     l3761:
 11008  0015A4  FFFF               	dw	65535	; assembler added errata NOP
 11009  0015A6  90D8               	bcf	status,0,c
 11010  0015A8  3644               	rlcf	___flmul@prod^0,f,c
 11011  0015AA  3645               	rlcf	(___flmul@prod+1)^0,f,c
 11012  0015AC  3646               	rlcf	(___flmul@prod+2)^0,f,c
 11013  0015AE  3647               	rlcf	(___flmul@prod+3)^0,f,c
 11014  0015B0  AE41               	btfss	(___flmul@grs+3)^0,7,c
 11015  0015B2  EFDD  F00A         	goto	u3171
 11016  0015B6  EFE0  F00A         	goto	u3170
 11017  0015BA                     u3171:
 11018  0015BA  FFFF               	dw	65535	; assembler added errata NOP
 11019  0015BC  EFE2  F00A         	goto	l951
 11020  0015C0                     u3170:
 11021  0015C0  FFFF               	dw	65535	; assembler added errata NOP
 11022  0015C2  8044               	bsf	___flmul@prod^0,0,c
 11023  0015C4                     l951:
 11024  0015C4  FFFF               	dw	65535	; assembler added errata NOP
 11025  0015C6  90D8               	bcf	status,0,c
 11026  0015C8  363E               	rlcf	___flmul@grs^0,f,c
 11027  0015CA  363F               	rlcf	(___flmul@grs+1)^0,f,c
 11028  0015CC  3640               	rlcf	(___flmul@grs+2)^0,f,c
 11029  0015CE  3641               	rlcf	(___flmul@grs+3)^0,f,c
 11030  0015D0  0648               	decf	___flmul@temp^0,f,c
 11031  0015D2  A0D8               	btfss	status,0,c
 11032  0015D4  0649               	decf	(___flmul@temp+1)^0,f,c
 11033  0015D6                     l3767:
 11034  0015D6  FFFF               	dw	65535	; assembler added errata NOP
 11035  0015D8  AE46               	btfss	(___flmul@prod+2)^0,7,c
 11036  0015DA  EFF1  F00A         	goto	u3181
 11037  0015DE  EFF4  F00A         	goto	u3180
 11038  0015E2                     u3181:
 11039  0015E2  FFFF               	dw	65535	; assembler added errata NOP
 11040  0015E4  EFD2  F00A         	goto	l3761
 11041  0015E8                     u3180:
 11042  0015E8  FFFF               	dw	65535	; assembler added errata NOP
 11043  0015EA  0E00               	movlw	0
 11044  0015EC  6E42               	movwf	___flmul@aexp^0,c
 11045  0015EE  AE41               	btfss	(___flmul@grs+3)^0,7,c
 11046  0015F0  EFFC  F00A         	goto	u3191
 11047  0015F4  EFFF  F00A         	goto	u3190
 11048  0015F8                     u3191:
 11049  0015F8  FFFF               	dw	65535	; assembler added errata NOP
 11050  0015FA  EF2A  F00B         	goto	l953
 11051  0015FE                     u3190:
 11052  0015FE  FFFF               	dw	65535	; assembler added errata NOP
 11053  001600  0EFF               	movlw	255
 11054  001602  143E               	andwf	___flmul@grs^0,w,c
 11055  001604  6E39               	movwf	??___flmul^0,c
 11056  001606  0EFF               	movlw	255
 11057  001608  143F               	andwf	(___flmul@grs+1)^0,w,c
 11058  00160A  6E3A               	movwf	(??___flmul+1)^0,c
 11059  00160C  0EFF               	movlw	255
 11060  00160E  1440               	andwf	(___flmul@grs+2)^0,w,c
 11061  001610  6E3B               	movwf	(??___flmul+2)^0,c
 11062  001612  0E7F               	movlw	127
 11063  001614  1441               	andwf	(___flmul@grs+3)^0,w,c
 11064  001616  6E3C               	movwf	(??___flmul+3)^0,c
 11065  001618  5039               	movf	??___flmul^0,w,c
 11066  00161A  103A               	iorwf	(??___flmul+1)^0,w,c
 11067  00161C  103B               	iorwf	(??___flmul+2)^0,w,c
 11068  00161E  103C               	iorwf	(??___flmul+3)^0,w,c
 11069  001620  B4D8               	btfsc	status,2,c
 11070  001622  EF15  F00B         	goto	u3201
 11071  001626  EF18  F00B         	goto	u3200
 11072  00162A                     u3201:
 11073  00162A  FFFF               	dw	65535	; assembler added errata NOP
 11074  00162C  EF1E  F00B         	goto	l954
 11075  001630                     u3200:
 11076  001630  FFFF               	dw	65535	; assembler added errata NOP
 11077  001632                     l3775:
 11078  001632  FFFF               	dw	65535	; assembler added errata NOP
 11079  001634  0E01               	movlw	1
 11080  001636  6E42               	movwf	___flmul@aexp^0,c
 11081  001638  EF2A  F00B         	goto	l953
 11082  00163C                     l954:
 11083  00163C  FFFF               	dw	65535	; assembler added errata NOP
 11084  00163E  A044               	btfss	___flmul@prod^0,0,c
 11085  001640  EF24  F00B         	goto	u3211
 11086  001644  EF27  F00B         	goto	u3210
 11087  001648                     u3211:
 11088  001648  FFFF               	dw	65535	; assembler added errata NOP
 11089  00164A  EF2A  F00B         	goto	l953
 11090  00164E                     u3210:
 11091  00164E  FFFF               	dw	65535	; assembler added errata NOP
 11092  001650  EF19  F00B         	goto	l3775
 11093  001654                     l953:
 11094  001654  FFFF               	dw	65535	; assembler added errata NOP
 11095  001656  5042               	movf	___flmul@aexp^0,w,c
 11096  001658  B4D8               	btfsc	status,2,c
 11097  00165A  EF31  F00B         	goto	u3221
 11098  00165E  EF34  F00B         	goto	u3220
 11099  001662                     u3221:
 11100  001662  FFFF               	dw	65535	; assembler added errata NOP
 11101  001664  EF5B  F00B         	goto	l3787
 11102  001668                     u3220:
 11103  001668  FFFF               	dw	65535	; assembler added errata NOP
 11104  00166A  0E01               	movlw	1
 11105  00166C  2644               	addwf	___flmul@prod^0,f,c
 11106  00166E  0E00               	movlw	0
 11107  001670  2245               	addwfc	(___flmul@prod+1)^0,f,c
 11108  001672  2246               	addwfc	(___flmul@prod+2)^0,f,c
 11109  001674  2247               	addwfc	(___flmul@prod+3)^0,f,c
 11110  001676  A047               	btfss	(___flmul@prod+3)^0,0,c
 11111  001678  EF40  F00B         	goto	u3231
 11112  00167C  EF43  F00B         	goto	u3230
 11113  001680                     u3231:
 11114  001680  FFFF               	dw	65535	; assembler added errata NOP
 11115  001682  EF5B  F00B         	goto	l3787
 11116  001686                     u3230:
 11117  001686  FFFF               	dw	65535	; assembler added errata NOP
 11118  001688  C044  F039         	movff	___flmul@prod,??___flmul
 11119  00168C  C045  F03A         	movff	___flmul@prod+1,??___flmul+1
 11120  001690  C046  F03B         	movff	___flmul@prod+2,??___flmul+2
 11121  001694  C047  F03C         	movff	___flmul@prod+3,??___flmul+3
 11122  001698  343C               	rlcf	(??___flmul+3)^0,w,c
 11123  00169A  323C               	rrcf	(??___flmul+3)^0,f,c
 11124  00169C  323B               	rrcf	(??___flmul+2)^0,f,c
 11125  00169E  323A               	rrcf	(??___flmul+1)^0,f,c
 11126  0016A0  3239               	rrcf	??___flmul^0,f,c
 11127  0016A2  C039  F044         	movff	??___flmul,___flmul@prod
 11128  0016A6  C03A  F045         	movff	??___flmul+1,___flmul@prod+1
 11129  0016AA  C03B  F046         	movff	??___flmul+2,___flmul@prod+2
 11130  0016AE  C03C  F047         	movff	??___flmul+3,___flmul@prod+3
 11131  0016B2  4A48               	infsnz	___flmul@temp^0,f,c
 11132  0016B4  2A49               	incf	(___flmul@temp+1)^0,f,c
 11133  0016B6                     l3787:
 11134  0016B6  FFFF               	dw	65535	; assembler added errata NOP
 11135  0016B8  BE49               	btfsc	(___flmul@temp+1)^0,7,c
 11136  0016BA  EF67  F00B         	goto	u3241
 11137  0016BE  5049               	movf	(___flmul@temp+1)^0,w,c
 11138  0016C0  E109               	bnz	u3240
 11139  0016C2  2848               	incf	___flmul@temp^0,w,c
 11140  0016C4  A0D8               	btfss	status,0,c
 11141  0016C6  EF67  F00B         	goto	u3241
 11142  0016CA  EF6A  F00B         	goto	u3240
 11143  0016CE                     u3241:
 11144  0016CE  FFFF               	dw	65535	; assembler added errata NOP
 11145  0016D0  EF75  F00B         	goto	l3791
 11146  0016D4                     u3240:
 11147  0016D4  FFFF               	dw	65535	; assembler added errata NOP
 11148  0016D6  0E00               	movlw	0
 11149  0016D8  6E44               	movwf	___flmul@prod^0,c
 11150  0016DA  0E00               	movlw	0
 11151  0016DC  6E45               	movwf	(___flmul@prod+1)^0,c
 11152  0016DE  0E80               	movlw	128
 11153  0016E0  6E46               	movwf	(___flmul@prod+2)^0,c
 11154  0016E2  0E7F               	movlw	127
 11155  0016E4  6E47               	movwf	(___flmul@prod+3)^0,c
 11156  0016E6  EFAA  F00B         	goto	l3803
 11157  0016EA                     l3791:
 11158  0016EA  FFFF               	dw	65535	; assembler added errata NOP
 11159  0016EC  BE49               	btfsc	(___flmul@temp+1)^0,7,c
 11160  0016EE  EF84  F00B         	goto	u3250
 11161  0016F2  5049               	movf	(___flmul@temp+1)^0,w,c
 11162  0016F4  E106               	bnz	u3251
 11163  0016F6  0448               	decf	___flmul@temp^0,w,c
 11164  0016F8  B0D8               	btfsc	status,0,c
 11165  0016FA  EF81  F00B         	goto	u3251
 11166  0016FE  EF84  F00B         	goto	u3250
 11167  001702                     u3251:
 11168  001702  FFFF               	dw	65535	; assembler added errata NOP
 11169  001704  EF91  F00B         	goto	l961
 11170  001708                     u3250:
 11171  001708  FFFF               	dw	65535	; assembler added errata NOP
 11172  00170A  0E00               	movlw	0
 11173  00170C  6E44               	movwf	___flmul@prod^0,c
 11174  00170E  0E00               	movlw	0
 11175  001710  6E45               	movwf	(___flmul@prod+1)^0,c
 11176  001712  0E00               	movlw	0
 11177  001714  6E46               	movwf	(___flmul@prod+2)^0,c
 11178  001716  0E00               	movlw	0
 11179  001718  6E47               	movwf	(___flmul@prod+3)^0,c
 11180  00171A  0E00               	movlw	0
 11181  00171C  6E3D               	movwf	___flmul@sign^0,c
 11182  00171E  EFAA  F00B         	goto	l3803
 11183  001722                     l961:
 11184  001722  FFFF               	dw	65535	; assembler added errata NOP
 11185  001724  C048  F043         	movff	___flmul@temp,___flmul@bexp
 11186  001728  0EFF               	movlw	255
 11187  00172A  1644               	andwf	___flmul@prod^0,f,c
 11188  00172C  0EFF               	movlw	255
 11189  00172E  1645               	andwf	(___flmul@prod+1)^0,f,c
 11190  001730  0E7F               	movlw	127
 11191  001732  1646               	andwf	(___flmul@prod+2)^0,f,c
 11192  001734  0E00               	movlw	0
 11193  001736  1647               	andwf	(___flmul@prod+3)^0,f,c
 11194  001738  A043               	btfss	___flmul@bexp^0,0,c
 11195  00173A  EFA1  F00B         	goto	u3261
 11196  00173E  EFA4  F00B         	goto	u3260
 11197  001742                     u3261:
 11198  001742  FFFF               	dw	65535	; assembler added errata NOP
 11199  001744  EFA6  F00B         	goto	l3801
 11200  001748                     u3260:
 11201  001748  FFFF               	dw	65535	; assembler added errata NOP
 11202  00174A  8E46               	bsf	(___flmul@prod+2)^0,7,c
 11203  00174C                     l3801:
 11204  00174C  FFFF               	dw	65535	; assembler added errata NOP
 11205  00174E  90D8               	bcf	status,0,c
 11206  001750  3043               	rrcf	___flmul@bexp^0,w,c
 11207  001752  6E47               	movwf	(___flmul@prod+3)^0,c
 11208  001754                     l3803:
 11209  001754  FFFF               	dw	65535	; assembler added errata NOP
 11210  001756  503D               	movf	___flmul@sign^0,w,c
 11211  001758  1247               	iorwf	(___flmul@prod+3)^0,f,c
 11212  00175A  C044  F031         	movff	___flmul@prod,?___flmul
 11213  00175E  C045  F032         	movff	___flmul@prod+1,?___flmul+1
 11214  001762  C046  F033         	movff	___flmul@prod+2,?___flmul+2
 11215  001766  C047  F034         	movff	___flmul@prod+3,?___flmul+3
 11216  00176A                     l948:
 11217  00176A  FFFF               	dw	65535	; assembler added errata NOP
 11218  00176C  0012               	return		;funcret
 11219  00176E  FFFF               	dw	65535	; errata NOP
 11220  001770                     __end_of___flmul:
 11221                           	opt callstack 0
 11222                           
 11223 ;; *************** function __tdiv_to_l_ *****************
 11224 ;; Defined at:
 11225 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdivl.c"
 11226 ;; Parameters:    Size  Location     Type
 11227 ;;  f1              4    0[COMRAM] float 
 11228 ;;  f2              4    4[COMRAM] float 
 11229 ;; Auto vars:     Size  Location     Type
 11230 ;;  quot            4   11[COMRAM] unsigned long 
 11231 ;;  exp1            1   16[COMRAM] unsigned char 
 11232 ;;  cntr            1   15[COMRAM] unsigned char 
 11233 ;; Return value:  Size  Location     Type
 11234 ;;                  4    0[COMRAM] unsigned long 
 11235 ;; Registers used:
 11236 ;;		wreg, status,2, status,0
 11237 ;; Tracked objects:
 11238 ;;		On entry : 0/0
 11239 ;;		On exit  : 0/0
 11240 ;;		Unchanged: 0/0
 11241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11242 ;;      Params:         8       0       0       0       0       0       0
 11243 ;;      Locals:         6       0       0       0       0       0       0
 11244 ;;      Temps:          3       0       0       0       0       0       0
 11245 ;;      Totals:        17       0       0       0       0       0       0
 11246 ;;Total ram usage:       17 bytes
 11247 ;; Hardware stack levels used:    1
 11248 ;; This function calls:
 11249 ;;		Nothing
 11250 ;; This function is called by:
 11251 ;;		_sprintf
 11252 ;; This function uses a non-reentrant model
 11253 ;;
 11254                           
 11255                           	psect	text21
 11256  007588                     __ptext21:
 11257                           	opt callstack 0
 11258  007588                     __tdiv_to_l_:
 11259                           	opt callstack 29
 11260  007588  FFFF               	dw	65535	; assembler added errata NOP
 11261  00758A  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 11262  00758E  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
 11263  007590  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
 11264  007592  3402               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
 11265  007594  3609               	rlcf	??__tdiv_to_l_^0,f,c
 11266  007596  E301               	bnc	u3781
 11267  007598  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
 11268  00759A                     u3781:
 11269  00759A  5009               	movf	??__tdiv_to_l_^0,w,c
 11270  00759C  6E11               	movwf	__tdiv_to_l_@exp1^0,c
 11271  00759E  5011               	movf	__tdiv_to_l_@exp1^0,w,c
 11272  0075A0  A4D8               	btfss	status,2,c
 11273  0075A2  EFD5  F03A         	goto	u3791
 11274  0075A6  EFD8  F03A         	goto	u3790
 11275  0075AA                     u3791:
 11276  0075AA  FFFF               	dw	65535	; assembler added errata NOP
 11277  0075AC  EFE4  F03A         	goto	l4141
 11278  0075B0                     u3790:
 11279  0075B0  FFFF               	dw	65535	; assembler added errata NOP
 11280  0075B2                     l4137:
 11281  0075B2  FFFF               	dw	65535	; assembler added errata NOP
 11282  0075B4  0E00               	movlw	0
 11283  0075B6  6E01               	movwf	?__tdiv_to_l_^0,c
 11284  0075B8  0E00               	movlw	0
 11285  0075BA  6E02               	movwf	(?__tdiv_to_l_+1)^0,c
 11286  0075BC  0E00               	movlw	0
 11287  0075BE  6E03               	movwf	(?__tdiv_to_l_+2)^0,c
 11288  0075C0  0E00               	movlw	0
 11289  0075C2  6E04               	movwf	(?__tdiv_to_l_+3)^0,c
 11290  0075C4  EF86  F03B         	goto	l671
 11291  0075C8                     l4141:
 11292  0075C8  FFFF               	dw	65535	; assembler added errata NOP
 11293  0075CA  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 11294  0075CE  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
 11295  0075D0  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
 11296  0075D2  3406               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
 11297  0075D4  3609               	rlcf	??__tdiv_to_l_^0,f,c
 11298  0075D6  E301               	bnc	u3801
 11299  0075D8  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
 11300  0075DA                     u3801:
 11301  0075DA  5009               	movf	??__tdiv_to_l_^0,w,c
 11302  0075DC  6E10               	movwf	__tdiv_to_l_@cntr^0,c
 11303  0075DE  5010               	movf	__tdiv_to_l_@cntr^0,w,c
 11304  0075E0  A4D8               	btfss	status,2,c
 11305  0075E2  EFF5  F03A         	goto	u3811
 11306  0075E6  EFF8  F03A         	goto	u3810
 11307  0075EA                     u3811:
 11308  0075EA  FFFF               	dw	65535	; assembler added errata NOP
 11309  0075EC  EFFB  F03A         	goto	l4147
 11310  0075F0                     u3810:
 11311  0075F0  FFFF               	dw	65535	; assembler added errata NOP
 11312  0075F2  EFD9  F03A         	goto	l4137
 11313  0075F6                     l4147:
 11314  0075F6  FFFF               	dw	65535	; assembler added errata NOP
 11315  0075F8  8E02               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
 11316  0075FA  0EFF               	movlw	255
 11317  0075FC  1601               	andwf	__tdiv_to_l_@f1^0,f,c
 11318  0075FE  0EFF               	movlw	255
 11319  007600  1602               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
 11320  007602  0E00               	movlw	0
 11321  007604  1603               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
 11322  007606  8E06               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
 11323  007608  0EFF               	movlw	255
 11324  00760A  1605               	andwf	__tdiv_to_l_@f2^0,f,c
 11325  00760C  0EFF               	movlw	255
 11326  00760E  1606               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
 11327  007610  0E00               	movlw	0
 11328  007612  1607               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
 11329  007614  0E00               	movlw	0
 11330  007616  6E0C               	movwf	__tdiv_to_l_@quot^0,c
 11331  007618  0E00               	movlw	0
 11332  00761A  6E0D               	movwf	(__tdiv_to_l_@quot+1)^0,c
 11333  00761C  0E00               	movlw	0
 11334  00761E  6E0E               	movwf	(__tdiv_to_l_@quot+2)^0,c
 11335  007620  0E00               	movlw	0
 11336  007622  6E0F               	movwf	(__tdiv_to_l_@quot+3)^0,c
 11337  007624  0E7F               	movlw	127
 11338  007626  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
 11339  007628  5010               	movf	__tdiv_to_l_@cntr^0,w,c
 11340  00762A  0F98               	addlw	152
 11341  00762C  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
 11342  00762E  0E18               	movlw	24
 11343  007630  6E10               	movwf	__tdiv_to_l_@cntr^0,c
 11344  007632                     l673:
 11345  007632  FFFF               	dw	65535	; assembler added errata NOP
 11346  007634  90D8               	bcf	status,0,c
 11347  007636  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
 11348  007638  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
 11349  00763A  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
 11350  00763C  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
 11351  00763E  5005               	movf	__tdiv_to_l_@f2^0,w,c
 11352  007640  5C01               	subwf	__tdiv_to_l_@f1^0,w,c
 11353  007642  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
 11354  007644  5802               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
 11355  007646  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
 11356  007648  5803               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
 11357  00764A  A0D8               	btfss	status,0,c
 11358  00764C  EF2A  F03B         	goto	u3821
 11359  007650  EF2D  F03B         	goto	u3820
 11360  007654                     u3821:
 11361  007654  FFFF               	dw	65535	; assembler added errata NOP
 11362  007656  EF35  F03B         	goto	l674
 11363  00765A                     u3820:
 11364  00765A  FFFF               	dw	65535	; assembler added errata NOP
 11365  00765C  5005               	movf	__tdiv_to_l_@f2^0,w,c
 11366  00765E  5E01               	subwf	__tdiv_to_l_@f1^0,f,c
 11367  007660  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
 11368  007662  5A02               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
 11369  007664  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
 11370  007666  5A03               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
 11371  007668  800C               	bsf	__tdiv_to_l_@quot^0,0,c
 11372  00766A                     l674:
 11373  00766A  FFFF               	dw	65535	; assembler added errata NOP
 11374  00766C  90D8               	bcf	status,0,c
 11375  00766E  3601               	rlcf	__tdiv_to_l_@f1^0,f,c
 11376  007670  3602               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
 11377  007672  3603               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
 11378  007674  2E10               	decfsz	__tdiv_to_l_@cntr^0,f,c
 11379  007676  EF19  F03B         	goto	l673
 11380  00767A  BE11               	btfsc	__tdiv_to_l_@exp1^0,7,c
 11381  00767C  EF45  F03B         	goto	u3830
 11382  007680  EF42  F03B         	goto	u3831
 11383  007684                     u3831:
 11384  007684  FFFF               	dw	65535	; assembler added errata NOP
 11385  007686  EF5F  F03B         	goto	l4181
 11386  00768A                     u3830:
 11387  00768A  FFFF               	dw	65535	; assembler added errata NOP
 11388  00768C  5011               	movf	__tdiv_to_l_@exp1^0,w,c
 11389  00768E  0A80               	xorlw	128
 11390  007690  0F97               	addlw	151
 11391  007692  B0D8               	btfsc	status,0,c
 11392  007694  EF4E  F03B         	goto	u3841
 11393  007698  EF51  F03B         	goto	u3840
 11394  00769C                     u3841:
 11395  00769C  FFFF               	dw	65535	; assembler added errata NOP
 11396  00769E  EF54  F03B         	goto	l4177
 11397  0076A2                     u3840:
 11398  0076A2  FFFF               	dw	65535	; assembler added errata NOP
 11399  0076A4  EFD9  F03A         	goto	l4137
 11400  0076A8                     l4177:
 11401  0076A8  FFFF               	dw	65535	; assembler added errata NOP
 11402  0076AA  90D8               	bcf	status,0,c
 11403  0076AC  320F               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
 11404  0076AE  320E               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
 11405  0076B0  320D               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
 11406  0076B2  320C               	rrcf	__tdiv_to_l_@quot^0,f,c
 11407  0076B4  3E11               	incfsz	__tdiv_to_l_@exp1^0,f,c
 11408  0076B6  EF54  F03B         	goto	l4177
 11409  0076BA  EF7D  F03B         	goto	l680
 11410  0076BE                     l4181:
 11411  0076BE  FFFF               	dw	65535	; assembler added errata NOP
 11412  0076C0  0E17               	movlw	23
 11413  0076C2  6411               	cpfsgt	__tdiv_to_l_@exp1^0,c
 11414  0076C4  EF66  F03B         	goto	u3851
 11415  0076C8  EF69  F03B         	goto	u3850
 11416  0076CC                     u3851:
 11417  0076CC  FFFF               	dw	65535	; assembler added errata NOP
 11418  0076CE  EF73  F03B         	goto	l4189
 11419  0076D2                     u3850:
 11420  0076D2  FFFF               	dw	65535	; assembler added errata NOP
 11421  0076D4  EFD9  F03A         	goto	l4137
 11422  0076D8                     l4187:
 11423  0076D8  FFFF               	dw	65535	; assembler added errata NOP
 11424  0076DA  90D8               	bcf	status,0,c
 11425  0076DC  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
 11426  0076DE  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
 11427  0076E0  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
 11428  0076E2  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
 11429  0076E4  0611               	decf	__tdiv_to_l_@exp1^0,f,c
 11430  0076E6                     l4189:
 11431  0076E6  FFFF               	dw	65535	; assembler added errata NOP
 11432  0076E8  5011               	movf	__tdiv_to_l_@exp1^0,w,c
 11433  0076EA  A4D8               	btfss	status,2,c
 11434  0076EC  EF7A  F03B         	goto	u3861
 11435  0076F0  EF7D  F03B         	goto	u3860
 11436  0076F4                     u3861:
 11437  0076F4  FFFF               	dw	65535	; assembler added errata NOP
 11438  0076F6  EF6C  F03B         	goto	l4187
 11439  0076FA                     u3860:
 11440  0076FA                     l680:
 11441  0076FA  FFFF               	dw	65535	; assembler added errata NOP
 11442  0076FC  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 11443  007700  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 11444  007704  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 11445  007708  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 11446  00770C                     l671:
 11447  00770C  FFFF               	dw	65535	; assembler added errata NOP
 11448  00770E  0012               	return		;funcret
 11449  007710  FFFF               	dw	65535	; errata NOP
 11450  007712                     __end_of__tdiv_to_l_:
 11451                           	opt callstack 0
 11452                           
 11453 ;; *************** function __div_to_l_ *****************
 11454 ;; Defined at:
 11455 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fldivl.c"
 11456 ;; Parameters:    Size  Location     Type
 11457 ;;  f1              4    0[COMRAM] unsigned long 
 11458 ;;  f2              4    4[COMRAM] unsigned long 
 11459 ;; Auto vars:     Size  Location     Type
 11460 ;;  quot            4    8[COMRAM] unsigned long 
 11461 ;;  exp1            1   13[COMRAM] unsigned char 
 11462 ;;  cntr            1   12[COMRAM] unsigned char 
 11463 ;; Return value:  Size  Location     Type
 11464 ;;                  4    0[COMRAM] unsigned long 
 11465 ;; Registers used:
 11466 ;;		wreg, status,2, status,0
 11467 ;; Tracked objects:
 11468 ;;		On entry : 0/0
 11469 ;;		On exit  : 0/0
 11470 ;;		Unchanged: 0/0
 11471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11472 ;;      Params:         8       0       0       0       0       0       0
 11473 ;;      Locals:         6       0       0       0       0       0       0
 11474 ;;      Temps:          0       0       0       0       0       0       0
 11475 ;;      Totals:        14       0       0       0       0       0       0
 11476 ;;Total ram usage:       14 bytes
 11477 ;; Hardware stack levels used:    1
 11478 ;; This function calls:
 11479 ;;		Nothing
 11480 ;; This function is called by:
 11481 ;;		_sprintf
 11482 ;; This function uses a non-reentrant model
 11483 ;;
 11484                           
 11485                           	psect	text22
 11486  007408                     __ptext22:
 11487                           	opt callstack 0
 11488  007408                     __div_to_l_:
 11489                           	opt callstack 0
 11490  007408  FFFF               	dw	65535	; assembler added errata NOP
 11491  00740A  3403               	rlcf	(__div_to_l_@f1+2)^0,w,c
 11492  00740C  3404               	rlcf	(__div_to_l_@f1+3)^0,w,c
 11493  00740E  6E0E               	movwf	__div_to_l_@exp1^0,c
 11494  007410  500E               	movf	__div_to_l_@exp1^0,w,c
 11495  007412  A4D8               	btfss	status,2,c
 11496  007414  EF0E  F03A         	goto	u3871
 11497  007418  EF11  F03A         	goto	u3870
 11498  00741C                     u3871:
 11499  00741C  FFFF               	dw	65535	; assembler added errata NOP
 11500  00741E  EF1D  F03A         	goto	l4197
 11501  007422                     u3870:
 11502  007422  FFFF               	dw	65535	; assembler added errata NOP
 11503  007424                     l4193:
 11504  007424  FFFF               	dw	65535	; assembler added errata NOP
 11505  007426  0E00               	movlw	0
 11506  007428  6E01               	movwf	?__div_to_l_^0,c
 11507  00742A  0E00               	movlw	0
 11508  00742C  6E02               	movwf	(?__div_to_l_+1)^0,c
 11509  00742E  0E00               	movlw	0
 11510  007430  6E03               	movwf	(?__div_to_l_+2)^0,c
 11511  007432  0E00               	movlw	0
 11512  007434  6E04               	movwf	(?__div_to_l_+3)^0,c
 11513  007436  EFC1  F03A         	goto	l562
 11514  00743A                     l4197:
 11515  00743A  FFFF               	dw	65535	; assembler added errata NOP
 11516  00743C  3407               	rlcf	(__div_to_l_@f2+2)^0,w,c
 11517  00743E  3408               	rlcf	(__div_to_l_@f2+3)^0,w,c
 11518  007440  6E0D               	movwf	__div_to_l_@cntr^0,c
 11519  007442  500D               	movf	__div_to_l_@cntr^0,w,c
 11520  007444  A4D8               	btfss	status,2,c
 11521  007446  EF27  F03A         	goto	u3881
 11522  00744A  EF2A  F03A         	goto	u3880
 11523  00744E                     u3881:
 11524  00744E  FFFF               	dw	65535	; assembler added errata NOP
 11525  007450  EF2D  F03A         	goto	l4203
 11526  007454                     u3880:
 11527  007454  FFFF               	dw	65535	; assembler added errata NOP
 11528  007456  EF12  F03A         	goto	l4193
 11529  00745A                     l4203:
 11530  00745A  FFFF               	dw	65535	; assembler added errata NOP
 11531  00745C  8E03               	bsf	(__div_to_l_@f1+2)^0,7,c
 11532  00745E  0EFF               	movlw	255
 11533  007460  1601               	andwf	__div_to_l_@f1^0,f,c
 11534  007462  0EFF               	movlw	255
 11535  007464  1602               	andwf	(__div_to_l_@f1+1)^0,f,c
 11536  007466  0EFF               	movlw	255
 11537  007468  1603               	andwf	(__div_to_l_@f1+2)^0,f,c
 11538  00746A  0E00               	movlw	0
 11539  00746C  1604               	andwf	(__div_to_l_@f1+3)^0,f,c
 11540  00746E  8E07               	bsf	(__div_to_l_@f2+2)^0,7,c
 11541  007470  0EFF               	movlw	255
 11542  007472  1605               	andwf	__div_to_l_@f2^0,f,c
 11543  007474  0EFF               	movlw	255
 11544  007476  1606               	andwf	(__div_to_l_@f2+1)^0,f,c
 11545  007478  0EFF               	movlw	255
 11546  00747A  1607               	andwf	(__div_to_l_@f2+2)^0,f,c
 11547  00747C  0E00               	movlw	0
 11548  00747E  1608               	andwf	(__div_to_l_@f2+3)^0,f,c
 11549  007480  0E00               	movlw	0
 11550  007482  6E09               	movwf	__div_to_l_@quot^0,c
 11551  007484  0E00               	movlw	0
 11552  007486  6E0A               	movwf	(__div_to_l_@quot+1)^0,c
 11553  007488  0E00               	movlw	0
 11554  00748A  6E0B               	movwf	(__div_to_l_@quot+2)^0,c
 11555  00748C  0E00               	movlw	0
 11556  00748E  6E0C               	movwf	(__div_to_l_@quot+3)^0,c
 11557  007490  0E7F               	movlw	127
 11558  007492  5E0E               	subwf	__div_to_l_@exp1^0,f,c
 11559  007494  500D               	movf	__div_to_l_@cntr^0,w,c
 11560  007496  0FA0               	addlw	160
 11561  007498  5E0E               	subwf	__div_to_l_@exp1^0,f,c
 11562  00749A  0E20               	movlw	32
 11563  00749C  6E0D               	movwf	__div_to_l_@cntr^0,c
 11564  00749E                     l4217:
 11565  00749E  FFFF               	dw	65535	; assembler added errata NOP
 11566  0074A0  90D8               	bcf	status,0,c
 11567  0074A2  3609               	rlcf	__div_to_l_@quot^0,f,c
 11568  0074A4  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
 11569  0074A6  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
 11570  0074A8  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
 11571  0074AA  5005               	movf	__div_to_l_@f2^0,w,c
 11572  0074AC  5C01               	subwf	__div_to_l_@f1^0,w,c
 11573  0074AE  5006               	movf	(__div_to_l_@f2+1)^0,w,c
 11574  0074B0  5802               	subwfb	(__div_to_l_@f1+1)^0,w,c
 11575  0074B2  5007               	movf	(__div_to_l_@f2+2)^0,w,c
 11576  0074B4  5803               	subwfb	(__div_to_l_@f1+2)^0,w,c
 11577  0074B6  5008               	movf	(__div_to_l_@f2+3)^0,w,c
 11578  0074B8  5804               	subwfb	(__div_to_l_@f1+3)^0,w,c
 11579  0074BA  A0D8               	btfss	status,0,c
 11580  0074BC  EF62  F03A         	goto	u3891
 11581  0074C0  EF65  F03A         	goto	u3890
 11582  0074C4                     u3891:
 11583  0074C4  FFFF               	dw	65535	; assembler added errata NOP
 11584  0074C6  EF6F  F03A         	goto	l4225
 11585  0074CA                     u3890:
 11586  0074CA  FFFF               	dw	65535	; assembler added errata NOP
 11587  0074CC  5005               	movf	__div_to_l_@f2^0,w,c
 11588  0074CE  5E01               	subwf	__div_to_l_@f1^0,f,c
 11589  0074D0  5006               	movf	(__div_to_l_@f2+1)^0,w,c
 11590  0074D2  5A02               	subwfb	(__div_to_l_@f1+1)^0,f,c
 11591  0074D4  5007               	movf	(__div_to_l_@f2+2)^0,w,c
 11592  0074D6  5A03               	subwfb	(__div_to_l_@f1+2)^0,f,c
 11593  0074D8  5008               	movf	(__div_to_l_@f2+3)^0,w,c
 11594  0074DA  5A04               	subwfb	(__div_to_l_@f1+3)^0,f,c
 11595  0074DC  8009               	bsf	__div_to_l_@quot^0,0,c
 11596  0074DE                     l4225:
 11597  0074DE  FFFF               	dw	65535	; assembler added errata NOP
 11598  0074E0  90D8               	bcf	status,0,c
 11599  0074E2  3601               	rlcf	__div_to_l_@f1^0,f,c
 11600  0074E4  3602               	rlcf	(__div_to_l_@f1+1)^0,f,c
 11601  0074E6  3603               	rlcf	(__div_to_l_@f1+2)^0,f,c
 11602  0074E8  3604               	rlcf	(__div_to_l_@f1+3)^0,f,c
 11603  0074EA  2E0D               	decfsz	__div_to_l_@cntr^0,f,c
 11604  0074EC  EF4F  F03A         	goto	l4217
 11605  0074F0  BE0E               	btfsc	__div_to_l_@exp1^0,7,c
 11606  0074F2  EF80  F03A         	goto	u3900
 11607  0074F6  EF7D  F03A         	goto	u3901
 11608  0074FA                     u3901:
 11609  0074FA  FFFF               	dw	65535	; assembler added errata NOP
 11610  0074FC  EF9A  F03A         	goto	l4241
 11611  007500                     u3900:
 11612  007500  FFFF               	dw	65535	; assembler added errata NOP
 11613  007502  500E               	movf	__div_to_l_@exp1^0,w,c
 11614  007504  0A80               	xorlw	128
 11615  007506  0F9F               	addlw	159
 11616  007508  B0D8               	btfsc	status,0,c
 11617  00750A  EF89  F03A         	goto	u3911
 11618  00750E  EF8C  F03A         	goto	u3910
 11619  007512                     u3911:
 11620  007512  FFFF               	dw	65535	; assembler added errata NOP
 11621  007514  EF8F  F03A         	goto	l4237
 11622  007518                     u3910:
 11623  007518  FFFF               	dw	65535	; assembler added errata NOP
 11624  00751A  EF12  F03A         	goto	l4193
 11625  00751E                     l4237:
 11626  00751E  FFFF               	dw	65535	; assembler added errata NOP
 11627  007520  90D8               	bcf	status,0,c
 11628  007522  320C               	rrcf	(__div_to_l_@quot+3)^0,f,c
 11629  007524  320B               	rrcf	(__div_to_l_@quot+2)^0,f,c
 11630  007526  320A               	rrcf	(__div_to_l_@quot+1)^0,f,c
 11631  007528  3209               	rrcf	__div_to_l_@quot^0,f,c
 11632  00752A  3E0E               	incfsz	__div_to_l_@exp1^0,f,c
 11633  00752C  EF8F  F03A         	goto	l4237
 11634  007530  EFB8  F03A         	goto	l571
 11635  007534                     l4241:
 11636  007534  FFFF               	dw	65535	; assembler added errata NOP
 11637  007536  0E1F               	movlw	31
 11638  007538  640E               	cpfsgt	__div_to_l_@exp1^0,c
 11639  00753A  EFA1  F03A         	goto	u3921
 11640  00753E  EFA4  F03A         	goto	u3920
 11641  007542                     u3921:
 11642  007542  FFFF               	dw	65535	; assembler added errata NOP
 11643  007544  EFAE  F03A         	goto	l4249
 11644  007548                     u3920:
 11645  007548  FFFF               	dw	65535	; assembler added errata NOP
 11646  00754A  EF12  F03A         	goto	l4193
 11647  00754E                     l4247:
 11648  00754E  FFFF               	dw	65535	; assembler added errata NOP
 11649  007550  90D8               	bcf	status,0,c
 11650  007552  3609               	rlcf	__div_to_l_@quot^0,f,c
 11651  007554  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
 11652  007556  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
 11653  007558  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
 11654  00755A  060E               	decf	__div_to_l_@exp1^0,f,c
 11655  00755C                     l4249:
 11656  00755C  FFFF               	dw	65535	; assembler added errata NOP
 11657  00755E  500E               	movf	__div_to_l_@exp1^0,w,c
 11658  007560  A4D8               	btfss	status,2,c
 11659  007562  EFB5  F03A         	goto	u3931
 11660  007566  EFB8  F03A         	goto	u3930
 11661  00756A                     u3931:
 11662  00756A  FFFF               	dw	65535	; assembler added errata NOP
 11663  00756C  EFA7  F03A         	goto	l4247
 11664  007570                     u3930:
 11665  007570                     l571:
 11666  007570  FFFF               	dw	65535	; assembler added errata NOP
 11667  007572  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
 11668  007576  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 11669  00757A  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 11670  00757E  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 11671  007582                     l562:
 11672  007582  FFFF               	dw	65535	; assembler added errata NOP
 11673  007584  0012               	return		;funcret
 11674  007586  FFFF               	dw	65535	; errata NOP
 11675  007588                     __end_of__div_to_l_:
 11676                           	opt callstack 0
 11677                           
 11678 ;; *************** function ___xxtofl *****************
 11679 ;; Defined at:
 11680 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
 11681 ;; Parameters:    Size  Location     Type
 11682 ;;  sign            1    wreg     unsigned char 
 11683 ;;  val             4   14[COMRAM] long 
 11684 ;; Auto vars:     Size  Location     Type
 11685 ;;  sign            1   22[COMRAM] unsigned char 
 11686 ;;  arg             4   24[COMRAM] unsigned long 
 11687 ;;  exp             1   23[COMRAM] unsigned char 
 11688 ;; Return value:  Size  Location     Type
 11689 ;;                  4   14[COMRAM] unsigned char 
 11690 ;; Registers used:
 11691 ;;		wreg, status,2, status,0
 11692 ;; Tracked objects:
 11693 ;;		On entry : 0/0
 11694 ;;		On exit  : 0/0
 11695 ;;		Unchanged: 0/0
 11696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11697 ;;      Params:         4       0       0       0       0       0       0
 11698 ;;      Locals:         6       0       0       0       0       0       0
 11699 ;;      Temps:          4       0       0       0       0       0       0
 11700 ;;      Totals:        14       0       0       0       0       0       0
 11701 ;;Total ram usage:       14 bytes
 11702 ;; Hardware stack levels used:    1
 11703 ;; This function calls:
 11704 ;;		Nothing
 11705 ;; This function is called by:
 11706 ;;		_main
 11707 ;;		_sprintf
 11708 ;;		_pow
 11709 ;;		_exp
 11710 ;;		_floor
 11711 ;;		_log
 11712 ;; This function uses a non-reentrant model
 11713 ;;
 11714                           
 11715                           	psect	text23
 11716  0078C0                     __ptext23:
 11717                           	opt callstack 0
 11718  0078C0                     ___xxtofl:
 11719                           	opt callstack 0
 11720  0078C0  FFFF               	dw	65535	; assembler added errata NOP
 11721                           
 11722                           ;incstack = 0
 11723                           ;___xxtofl@sign stored from wreg
 11724  0078C2  6E17               	movwf	___xxtofl@sign^0,c
 11725  0078C4  5017               	movf	___xxtofl@sign^0,w,c
 11726  0078C6  B4D8               	btfsc	status,2,c
 11727  0078C8  EF68  F03C         	goto	u3571
 11728  0078CC  EF6B  F03C         	goto	u3570
 11729  0078D0                     u3571:
 11730  0078D0  FFFF               	dw	65535	; assembler added errata NOP
 11731  0078D2  EF90  F03C         	goto	l985
 11732  0078D6                     u3570:
 11733  0078D6  FFFF               	dw	65535	; assembler added errata NOP
 11734  0078D8  BE12               	btfsc	(___xxtofl@val+3)^0,7,c
 11735  0078DA  EF74  F03C         	goto	u3580
 11736  0078DE  EF71  F03C         	goto	u3581
 11737  0078E2                     u3581:
 11738  0078E2  FFFF               	dw	65535	; assembler added errata NOP
 11739  0078E4  EF90  F03C         	goto	l985
 11740  0078E8                     u3580:
 11741  0078E8  FFFF               	dw	65535	; assembler added errata NOP
 11742  0078EA  C00F  F013         	movff	___xxtofl@val,??___xxtofl
 11743  0078EE  C010  F014         	movff	___xxtofl@val+1,??___xxtofl+1
 11744  0078F2  C011  F015         	movff	___xxtofl@val+2,??___xxtofl+2
 11745  0078F6  C012  F016         	movff	___xxtofl@val+3,??___xxtofl+3
 11746  0078FA  1E13               	comf	??___xxtofl^0,f,c
 11747  0078FC  1E14               	comf	(??___xxtofl+1)^0,f,c
 11748  0078FE  1E15               	comf	(??___xxtofl+2)^0,f,c
 11749  007900  1E16               	comf	(??___xxtofl+3)^0,f,c
 11750  007902  2A13               	incf	??___xxtofl^0,f,c
 11751  007904  0E00               	movlw	0
 11752  007906  2214               	addwfc	(??___xxtofl+1)^0,f,c
 11753  007908  2215               	addwfc	(??___xxtofl+2)^0,f,c
 11754  00790A  2216               	addwfc	(??___xxtofl+3)^0,f,c
 11755  00790C  C013  F019         	movff	??___xxtofl,___xxtofl@arg
 11756  007910  C014  F01A         	movff	??___xxtofl+1,___xxtofl@arg+1
 11757  007914  C015  F01B         	movff	??___xxtofl+2,___xxtofl@arg+2
 11758  007918  C016  F01C         	movff	??___xxtofl+3,___xxtofl@arg+3
 11759  00791C  EF99  F03C         	goto	l3999
 11760  007920                     l985:
 11761  007920  FFFF               	dw	65535	; assembler added errata NOP
 11762  007922  C00F  F019         	movff	___xxtofl@val,___xxtofl@arg
 11763  007926  C010  F01A         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11764  00792A  C011  F01B         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11765  00792E  C012  F01C         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11766  007932                     l3999:
 11767  007932  FFFF               	dw	65535	; assembler added errata NOP
 11768  007934  500F               	movf	___xxtofl@val^0,w,c
 11769  007936  1010               	iorwf	(___xxtofl@val+1)^0,w,c
 11770  007938  1011               	iorwf	(___xxtofl@val+2)^0,w,c
 11771  00793A  1012               	iorwf	(___xxtofl@val+3)^0,w,c
 11772  00793C  A4D8               	btfss	status,2,c
 11773  00793E  EFA3  F03C         	goto	u3591
 11774  007942  EFA6  F03C         	goto	u3590
 11775  007946                     u3591:
 11776  007946  FFFF               	dw	65535	; assembler added errata NOP
 11777  007948  EFB1  F03C         	goto	l4005
 11778  00794C                     u3590:
 11779  00794C  FFFF               	dw	65535	; assembler added errata NOP
 11780  00794E  0E00               	movlw	0
 11781  007950  6E0F               	movwf	?___xxtofl^0,c
 11782  007952  0E00               	movlw	0
 11783  007954  6E10               	movwf	(?___xxtofl+1)^0,c
 11784  007956  0E00               	movlw	0
 11785  007958  6E11               	movwf	(?___xxtofl+2)^0,c
 11786  00795A  0E00               	movlw	0
 11787  00795C  6E12               	movwf	(?___xxtofl+3)^0,c
 11788  00795E  EF59  F03D         	goto	l988
 11789  007962                     l4005:
 11790  007962  FFFF               	dw	65535	; assembler added errata NOP
 11791  007964  0E96               	movlw	150
 11792  007966  6E18               	movwf	___xxtofl@exp^0,c
 11793  007968  EFBD  F03C         	goto	l4009
 11794  00796C                     l4007:
 11795  00796C  FFFF               	dw	65535	; assembler added errata NOP
 11796  00796E  2A18               	incf	___xxtofl@exp^0,f,c
 11797  007970  90D8               	bcf	status,0,c
 11798  007972  321C               	rrcf	(___xxtofl@arg+3)^0,f,c
 11799  007974  321B               	rrcf	(___xxtofl@arg+2)^0,f,c
 11800  007976  321A               	rrcf	(___xxtofl@arg+1)^0,f,c
 11801  007978  3219               	rrcf	___xxtofl@arg^0,f,c
 11802  00797A                     l4009:
 11803  00797A  FFFF               	dw	65535	; assembler added errata NOP
 11804  00797C  0E00               	movlw	0
 11805  00797E  1419               	andwf	___xxtofl@arg^0,w,c
 11806  007980  6E13               	movwf	??___xxtofl^0,c
 11807  007982  0E00               	movlw	0
 11808  007984  141A               	andwf	(___xxtofl@arg+1)^0,w,c
 11809  007986  6E14               	movwf	(??___xxtofl+1)^0,c
 11810  007988  0E00               	movlw	0
 11811  00798A  141B               	andwf	(___xxtofl@arg+2)^0,w,c
 11812  00798C  6E15               	movwf	(??___xxtofl+2)^0,c
 11813  00798E  0EFE               	movlw	254
 11814  007990  141C               	andwf	(___xxtofl@arg+3)^0,w,c
 11815  007992  6E16               	movwf	(??___xxtofl+3)^0,c
 11816  007994  5013               	movf	??___xxtofl^0,w,c
 11817  007996  1014               	iorwf	(??___xxtofl+1)^0,w,c
 11818  007998  1015               	iorwf	(??___xxtofl+2)^0,w,c
 11819  00799A  1016               	iorwf	(??___xxtofl+3)^0,w,c
 11820  00799C  A4D8               	btfss	status,2,c
 11821  00799E  EFD3  F03C         	goto	u3601
 11822  0079A2  EFD6  F03C         	goto	u3600
 11823  0079A6                     u3601:
 11824  0079A6  FFFF               	dw	65535	; assembler added errata NOP
 11825  0079A8  EFB6  F03C         	goto	l4007
 11826  0079AC                     u3600:
 11827  0079AC  FFFF               	dw	65535	; assembler added errata NOP
 11828  0079AE  EFE6  F03C         	goto	l992
 11829  0079B2                     l4011:
 11830  0079B2  FFFF               	dw	65535	; assembler added errata NOP
 11831  0079B4  2A18               	incf	___xxtofl@exp^0,f,c
 11832  0079B6  0E01               	movlw	1
 11833  0079B8  2619               	addwf	___xxtofl@arg^0,f,c
 11834  0079BA  0E00               	movlw	0
 11835  0079BC  221A               	addwfc	(___xxtofl@arg+1)^0,f,c
 11836  0079BE  221B               	addwfc	(___xxtofl@arg+2)^0,f,c
 11837  0079C0  221C               	addwfc	(___xxtofl@arg+3)^0,f,c
 11838  0079C2  90D8               	bcf	status,0,c
 11839  0079C4  321C               	rrcf	(___xxtofl@arg+3)^0,f,c
 11840  0079C6  321B               	rrcf	(___xxtofl@arg+2)^0,f,c
 11841  0079C8  321A               	rrcf	(___xxtofl@arg+1)^0,f,c
 11842  0079CA  3219               	rrcf	___xxtofl@arg^0,f,c
 11843  0079CC                     l992:
 11844  0079CC  FFFF               	dw	65535	; assembler added errata NOP
 11845  0079CE  0E00               	movlw	0
 11846  0079D0  1419               	andwf	___xxtofl@arg^0,w,c
 11847  0079D2  6E13               	movwf	??___xxtofl^0,c
 11848  0079D4  0E00               	movlw	0
 11849  0079D6  141A               	andwf	(___xxtofl@arg+1)^0,w,c
 11850  0079D8  6E14               	movwf	(??___xxtofl+1)^0,c
 11851  0079DA  0E00               	movlw	0
 11852  0079DC  141B               	andwf	(___xxtofl@arg+2)^0,w,c
 11853  0079DE  6E15               	movwf	(??___xxtofl+2)^0,c
 11854  0079E0  0EFF               	movlw	255
 11855  0079E2  141C               	andwf	(___xxtofl@arg+3)^0,w,c
 11856  0079E4  6E16               	movwf	(??___xxtofl+3)^0,c
 11857  0079E6  5013               	movf	??___xxtofl^0,w,c
 11858  0079E8  1014               	iorwf	(??___xxtofl+1)^0,w,c
 11859  0079EA  1015               	iorwf	(??___xxtofl+2)^0,w,c
 11860  0079EC  1016               	iorwf	(??___xxtofl+3)^0,w,c
 11861  0079EE  A4D8               	btfss	status,2,c
 11862  0079F0  EFFC  F03C         	goto	u3611
 11863  0079F4  EFFF  F03C         	goto	u3610
 11864  0079F8                     u3611:
 11865  0079F8  FFFF               	dw	65535	; assembler added errata NOP
 11866  0079FA  EFD9  F03C         	goto	l4011
 11867  0079FE                     u3610:
 11868  0079FE  FFFF               	dw	65535	; assembler added errata NOP
 11869  007A00  EF09  F03D         	goto	l4019
 11870  007A04                     l4017:
 11871  007A04  FFFF               	dw	65535	; assembler added errata NOP
 11872  007A06  0618               	decf	___xxtofl@exp^0,f,c
 11873  007A08  90D8               	bcf	status,0,c
 11874  007A0A  3619               	rlcf	___xxtofl@arg^0,f,c
 11875  007A0C  361A               	rlcf	(___xxtofl@arg+1)^0,f,c
 11876  007A0E  361B               	rlcf	(___xxtofl@arg+2)^0,f,c
 11877  007A10  361C               	rlcf	(___xxtofl@arg+3)^0,f,c
 11878  007A12                     l4019:
 11879  007A12  FFFF               	dw	65535	; assembler added errata NOP
 11880  007A14  BE1B               	btfsc	(___xxtofl@arg+2)^0,7,c
 11881  007A16  EF0F  F03D         	goto	u3621
 11882  007A1A  EF12  F03D         	goto	u3620
 11883  007A1E                     u3621:
 11884  007A1E  FFFF               	dw	65535	; assembler added errata NOP
 11885  007A20  EF1C  F03D         	goto	l999
 11886  007A24                     u3620:
 11887  007A24  FFFF               	dw	65535	; assembler added errata NOP
 11888  007A26  0E02               	movlw	2
 11889  007A28  6018               	cpfslt	___xxtofl@exp^0,c
 11890  007A2A  EF19  F03D         	goto	u3631
 11891  007A2E  EF1C  F03D         	goto	u3630
 11892  007A32                     u3631:
 11893  007A32  FFFF               	dw	65535	; assembler added errata NOP
 11894  007A34  EF02  F03D         	goto	l4017
 11895  007A38                     u3630:
 11896  007A38                     l999:
 11897  007A38  FFFF               	dw	65535	; assembler added errata NOP
 11898  007A3A  B018               	btfsc	___xxtofl@exp^0,0,c
 11899  007A3C  EF22  F03D         	goto	u3641
 11900  007A40  EF25  F03D         	goto	u3640
 11901  007A44                     u3641:
 11902  007A44  FFFF               	dw	65535	; assembler added errata NOP
 11903  007A46  EF27  F03D         	goto	l4025
 11904  007A4A                     u3640:
 11905  007A4A  FFFF               	dw	65535	; assembler added errata NOP
 11906  007A4C  9E1B               	bcf	(___xxtofl@arg+2)^0,7,c
 11907  007A4E                     l4025:
 11908  007A4E  FFFF               	dw	65535	; assembler added errata NOP
 11909  007A50  90D8               	bcf	status,0,c
 11910  007A52  3218               	rrcf	___xxtofl@exp^0,f,c
 11911  007A54  C018  F013         	movff	___xxtofl@exp,??___xxtofl
 11912  007A58  6A14               	clrf	(??___xxtofl+1)^0,c
 11913  007A5A  6A15               	clrf	(??___xxtofl+2)^0,c
 11914  007A5C  6A16               	clrf	(??___xxtofl+3)^0,c
 11915  007A5E  C013  F016         	movff	??___xxtofl,??___xxtofl+3
 11916  007A62  6A15               	clrf	(??___xxtofl+2)^0,c
 11917  007A64  6A14               	clrf	(??___xxtofl+1)^0,c
 11918  007A66  6A13               	clrf	??___xxtofl^0,c
 11919  007A68  5013               	movf	??___xxtofl^0,w,c
 11920  007A6A  1219               	iorwf	___xxtofl@arg^0,f,c
 11921  007A6C  5014               	movf	(??___xxtofl+1)^0,w,c
 11922  007A6E  121A               	iorwf	(___xxtofl@arg+1)^0,f,c
 11923  007A70  5015               	movf	(??___xxtofl+2)^0,w,c
 11924  007A72  121B               	iorwf	(___xxtofl@arg+2)^0,f,c
 11925  007A74  5016               	movf	(??___xxtofl+3)^0,w,c
 11926  007A76  121C               	iorwf	(___xxtofl@arg+3)^0,f,c
 11927  007A78  5017               	movf	___xxtofl@sign^0,w,c
 11928  007A7A  B4D8               	btfsc	status,2,c
 11929  007A7C  EF42  F03D         	goto	u3651
 11930  007A80  EF45  F03D         	goto	u3650
 11931  007A84                     u3651:
 11932  007A84  FFFF               	dw	65535	; assembler added errata NOP
 11933  007A86  EF50  F03D         	goto	l4035
 11934  007A8A                     u3650:
 11935  007A8A  FFFF               	dw	65535	; assembler added errata NOP
 11936  007A8C  BE12               	btfsc	(___xxtofl@val+3)^0,7,c
 11937  007A8E  EF4E  F03D         	goto	u3660
 11938  007A92  EF4B  F03D         	goto	u3661
 11939  007A96                     u3661:
 11940  007A96  FFFF               	dw	65535	; assembler added errata NOP
 11941  007A98  EF50  F03D         	goto	l4035
 11942  007A9C                     u3660:
 11943  007A9C  FFFF               	dw	65535	; assembler added errata NOP
 11944  007A9E  8E1C               	bsf	(___xxtofl@arg+3)^0,7,c
 11945  007AA0                     l4035:
 11946  007AA0  FFFF               	dw	65535	; assembler added errata NOP
 11947  007AA2  C019  F00F         	movff	___xxtofl@arg,?___xxtofl
 11948  007AA6  C01A  F010         	movff	___xxtofl@arg+1,?___xxtofl+1
 11949  007AAA  C01B  F011         	movff	___xxtofl@arg+2,?___xxtofl+2
 11950  007AAE  C01C  F012         	movff	___xxtofl@arg+3,?___xxtofl+3
 11951  007AB2                     l988:
 11952  007AB2  FFFF               	dw	65535	; assembler added errata NOP
 11953  007AB4  0012               	return		;funcret
 11954  007AB6  FFFF               	dw	65535	; errata NOP
 11955  007AB8                     __end_of___xxtofl:
 11956                           	opt callstack 0
 11957                           
 11958 ;; *************** function ___wmul *****************
 11959 ;; Defined at:
 11960 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
 11961 ;; Parameters:    Size  Location     Type
 11962 ;;  multiplier      2    0[COMRAM] unsigned int 
 11963 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11964 ;; Auto vars:     Size  Location     Type
 11965 ;;  product         2    4[COMRAM] unsigned int 
 11966 ;; Return value:  Size  Location     Type
 11967 ;;                  2    0[COMRAM] unsigned int 
 11968 ;; Registers used:
 11969 ;;		wreg, status,2, status,0, prodl, prodh
 11970 ;; Tracked objects:
 11971 ;;		On entry : 0/0
 11972 ;;		On exit  : 0/0
 11973 ;;		Unchanged: 0/0
 11974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11975 ;;      Params:         4       0       0       0       0       0       0
 11976 ;;      Locals:         2       0       0       0       0       0       0
 11977 ;;      Temps:          0       0       0       0       0       0       0
 11978 ;;      Totals:         6       0       0       0       0       0       0
 11979 ;;Total ram usage:        6 bytes
 11980 ;; Hardware stack levels used:    1
 11981 ;; This function calls:
 11982 ;;		Nothing
 11983 ;; This function is called by:
 11984 ;;		_sprintf
 11985 ;; This function uses a non-reentrant model
 11986 ;;
 11987                           
 11988                           	psect	text24
 11989  006570                     __ptext24:
 11990                           	opt callstack 0
 11991  006570                     ___wmul:
 11992                           	opt callstack 0
 11993  006570  FFFF               	dw	65535	; assembler added errata NOP
 11994  006572  5001               	movf	___wmul@multiplier^0,w,c
 11995  006574  0203               	mulwf	___wmul@multiplicand^0,c
 11996  006576  CFF3 F005          	movff	prodl,___wmul@product
 11997  00657A  CFF4 F006          	movff	prodh,___wmul@product+1
 11998  00657E  5001               	movf	___wmul@multiplier^0,w,c
 11999  006580  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 12000  006582  50F3               	movf	243,w,c
 12001  006584  2606               	addwf	(___wmul@product+1)^0,f,c
 12002  006586  5002               	movf	(___wmul@multiplier+1)^0,w,c
 12003  006588  0203               	mulwf	___wmul@multiplicand^0,c
 12004  00658A  50F3               	movf	243,w,c
 12005  00658C  2606               	addwf	(___wmul@product+1)^0,f,c
 12006  00658E  C005  F001         	movff	___wmul@product,?___wmul
 12007  006592  C006  F002         	movff	___wmul@product+1,?___wmul+1
 12008  006596  0012               	return		;funcret
 12009  006598  FFFF               	dw	65535	; errata NOP
 12010  00659A                     __end_of___wmul:
 12011                           	opt callstack 0
 12012                           
 12013 ;; *************** function ___llmod *****************
 12014 ;; Defined at:
 12015 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\llmod.c"
 12016 ;; Parameters:    Size  Location     Type
 12017 ;;  dividend        4   13[COMRAM] unsigned long 
 12018 ;;  divisor         4   17[COMRAM] unsigned long 
 12019 ;; Auto vars:     Size  Location     Type
 12020 ;;  counter         1   21[COMRAM] unsigned char 
 12021 ;; Return value:  Size  Location     Type
 12022 ;;                  4   13[COMRAM] unsigned long 
 12023 ;; Registers used:
 12024 ;;		wreg, status,2, status,0
 12025 ;; Tracked objects:
 12026 ;;		On entry : 0/0
 12027 ;;		On exit  : 0/0
 12028 ;;		Unchanged: 0/0
 12029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12030 ;;      Params:         8       0       0       0       0       0       0
 12031 ;;      Locals:         1       0       0       0       0       0       0
 12032 ;;      Temps:          0       0       0       0       0       0       0
 12033 ;;      Totals:         9       0       0       0       0       0       0
 12034 ;;Total ram usage:        9 bytes
 12035 ;; Hardware stack levels used:    1
 12036 ;; This function calls:
 12037 ;;		Nothing
 12038 ;; This function is called by:
 12039 ;;		_sprintf
 12040 ;; This function uses a non-reentrant model
 12041 ;;
 12042                           
 12043                           	psect	text25
 12044  006914                     __ptext25:
 12045                           	opt callstack 0
 12046  006914                     ___llmod:
 12047                           	opt callstack 0
 12048  006914  FFFF               	dw	65535	; assembler added errata NOP
 12049  006916  5012               	movf	___llmod@divisor^0,w,c
 12050  006918  1013               	iorwf	(___llmod@divisor+1)^0,w,c
 12051  00691A  1014               	iorwf	(___llmod@divisor+2)^0,w,c
 12052  00691C  1015               	iorwf	(___llmod@divisor+3)^0,w,c
 12053  00691E  B4D8               	btfsc	status,2,c
 12054  006920  EF94  F034         	goto	u4211
 12055  006924  EF97  F034         	goto	u4210
 12056  006928                     u4211:
 12057  006928  FFFF               	dw	65535	; assembler added errata NOP
 12058  00692A  EFD0  F034         	goto	l750
 12059  00692E                     u4210:
 12060  00692E  FFFF               	dw	65535	; assembler added errata NOP
 12061  006930  0E01               	movlw	1
 12062  006932  6E16               	movwf	___llmod@counter^0,c
 12063  006934  EFA3  F034         	goto	l4437
 12064  006938                     l4435:
 12065  006938  FFFF               	dw	65535	; assembler added errata NOP
 12066  00693A  90D8               	bcf	status,0,c
 12067  00693C  3612               	rlcf	___llmod@divisor^0,f,c
 12068  00693E  3613               	rlcf	(___llmod@divisor+1)^0,f,c
 12069  006940  3614               	rlcf	(___llmod@divisor+2)^0,f,c
 12070  006942  3615               	rlcf	(___llmod@divisor+3)^0,f,c
 12071  006944  2A16               	incf	___llmod@counter^0,f,c
 12072  006946                     l4437:
 12073  006946  FFFF               	dw	65535	; assembler added errata NOP
 12074  006948  AE15               	btfss	(___llmod@divisor+3)^0,7,c
 12075  00694A  EFA9  F034         	goto	u4221
 12076  00694E  EFAC  F034         	goto	u4220
 12077  006952                     u4221:
 12078  006952  FFFF               	dw	65535	; assembler added errata NOP
 12079  006954  EF9C  F034         	goto	l4435
 12080  006958                     u4220:
 12081  006958  FFFF               	dw	65535	; assembler added errata NOP
 12082  00695A                     l4439:
 12083  00695A  FFFF               	dw	65535	; assembler added errata NOP
 12084  00695C  5012               	movf	___llmod@divisor^0,w,c
 12085  00695E  5C0E               	subwf	___llmod@dividend^0,w,c
 12086  006960  5013               	movf	(___llmod@divisor+1)^0,w,c
 12087  006962  580F               	subwfb	(___llmod@dividend+1)^0,w,c
 12088  006964  5014               	movf	(___llmod@divisor+2)^0,w,c
 12089  006966  5810               	subwfb	(___llmod@dividend+2)^0,w,c
 12090  006968  5015               	movf	(___llmod@divisor+3)^0,w,c
 12091  00696A  5811               	subwfb	(___llmod@dividend+3)^0,w,c
 12092  00696C  A0D8               	btfss	status,0,c
 12093  00696E  EFBB  F034         	goto	u4231
 12094  006972  EFBE  F034         	goto	u4230
 12095  006976                     u4231:
 12096  006976  FFFF               	dw	65535	; assembler added errata NOP
 12097  006978  EFC7  F034         	goto	l4443
 12098  00697C                     u4230:
 12099  00697C  FFFF               	dw	65535	; assembler added errata NOP
 12100  00697E  5012               	movf	___llmod@divisor^0,w,c
 12101  006980  5E0E               	subwf	___llmod@dividend^0,f,c
 12102  006982  5013               	movf	(___llmod@divisor+1)^0,w,c
 12103  006984  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
 12104  006986  5014               	movf	(___llmod@divisor+2)^0,w,c
 12105  006988  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
 12106  00698A  5015               	movf	(___llmod@divisor+3)^0,w,c
 12107  00698C  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
 12108  00698E                     l4443:
 12109  00698E  FFFF               	dw	65535	; assembler added errata NOP
 12110  006990  90D8               	bcf	status,0,c
 12111  006992  3215               	rrcf	(___llmod@divisor+3)^0,f,c
 12112  006994  3214               	rrcf	(___llmod@divisor+2)^0,f,c
 12113  006996  3213               	rrcf	(___llmod@divisor+1)^0,f,c
 12114  006998  3212               	rrcf	___llmod@divisor^0,f,c
 12115  00699A  2E16               	decfsz	___llmod@counter^0,f,c
 12116  00699C  EFAD  F034         	goto	l4439
 12117  0069A0                     l750:
 12118  0069A0  FFFF               	dw	65535	; assembler added errata NOP
 12119  0069A2  C00E  F00E         	movff	___llmod@dividend,?___llmod
 12120  0069A6  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
 12121  0069AA  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
 12122  0069AE  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
 12123  0069B2  0012               	return		;funcret
 12124  0069B4  FFFF               	dw	65535	; errata NOP
 12125  0069B6                     __end_of___llmod:
 12126                           	opt callstack 0
 12127                           
 12128 ;; *************** function ___lldiv *****************
 12129 ;; Defined at:
 12130 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
 12131 ;; Parameters:    Size  Location     Type
 12132 ;;  dividend        4    0[COMRAM] unsigned long 
 12133 ;;  divisor         4    4[COMRAM] unsigned long 
 12134 ;; Auto vars:     Size  Location     Type
 12135 ;;  quotient        4    8[COMRAM] unsigned long 
 12136 ;;  counter         1   12[COMRAM] unsigned char 
 12137 ;; Return value:  Size  Location     Type
 12138 ;;                  4    0[COMRAM] unsigned long 
 12139 ;; Registers used:
 12140 ;;		wreg, status,2, status,0
 12141 ;; Tracked objects:
 12142 ;;		On entry : 0/0
 12143 ;;		On exit  : 0/0
 12144 ;;		Unchanged: 0/0
 12145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12146 ;;      Params:         8       0       0       0       0       0       0
 12147 ;;      Locals:         5       0       0       0       0       0       0
 12148 ;;      Temps:          0       0       0       0       0       0       0
 12149 ;;      Totals:        13       0       0       0       0       0       0
 12150 ;;Total ram usage:       13 bytes
 12151 ;; Hardware stack levels used:    1
 12152 ;; This function calls:
 12153 ;;		Nothing
 12154 ;; This function is called by:
 12155 ;;		_sprintf
 12156 ;; This function uses a non-reentrant model
 12157 ;;
 12158                           
 12159                           	psect	text26
 12160  0069B6                     __ptext26:
 12161                           	opt callstack 0
 12162  0069B6                     ___lldiv:
 12163                           	opt callstack 0
 12164  0069B6  FFFF               	dw	65535	; assembler added errata NOP
 12165  0069B8  0E00               	movlw	0
 12166  0069BA  6E09               	movwf	___lldiv@quotient^0,c
 12167  0069BC  0E00               	movlw	0
 12168  0069BE  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 12169  0069C0  0E00               	movlw	0
 12170  0069C2  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 12171  0069C4  0E00               	movlw	0
 12172  0069C6  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 12173  0069C8  5005               	movf	___lldiv@divisor^0,w,c
 12174  0069CA  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 12175  0069CC  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 12176  0069CE  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 12177  0069D0  B4D8               	btfsc	status,2,c
 12178  0069D2  EFED  F034         	goto	u3941
 12179  0069D6  EFF0  F034         	goto	u3940
 12180  0069DA                     u3941:
 12181  0069DA  FFFF               	dw	65535	; assembler added errata NOP
 12182  0069DC  EF2F  F035         	goto	l335
 12183  0069E0                     u3940:
 12184  0069E0  FFFF               	dw	65535	; assembler added errata NOP
 12185  0069E2  0E01               	movlw	1
 12186  0069E4  6E0D               	movwf	___lldiv@counter^0,c
 12187  0069E6  EFFC  F034         	goto	l4265
 12188  0069EA                     l4263:
 12189  0069EA  FFFF               	dw	65535	; assembler added errata NOP
 12190  0069EC  90D8               	bcf	status,0,c
 12191  0069EE  3605               	rlcf	___lldiv@divisor^0,f,c
 12192  0069F0  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 12193  0069F2  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 12194  0069F4  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 12195  0069F6  2A0D               	incf	___lldiv@counter^0,f,c
 12196  0069F8                     l4265:
 12197  0069F8  FFFF               	dw	65535	; assembler added errata NOP
 12198  0069FA  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 12199  0069FC  EF02  F035         	goto	u3951
 12200  006A00  EF05  F035         	goto	u3950
 12201  006A04                     u3951:
 12202  006A04  FFFF               	dw	65535	; assembler added errata NOP
 12203  006A06  EFF5  F034         	goto	l4263
 12204  006A0A                     u3950:
 12205  006A0A  FFFF               	dw	65535	; assembler added errata NOP
 12206  006A0C                     l4267:
 12207  006A0C  FFFF               	dw	65535	; assembler added errata NOP
 12208  006A0E  90D8               	bcf	status,0,c
 12209  006A10  3609               	rlcf	___lldiv@quotient^0,f,c
 12210  006A12  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 12211  006A14  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 12212  006A16  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 12213  006A18  5005               	movf	___lldiv@divisor^0,w,c
 12214  006A1A  5C01               	subwf	___lldiv@dividend^0,w,c
 12215  006A1C  5006               	movf	(___lldiv@divisor+1)^0,w,c
 12216  006A1E  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 12217  006A20  5007               	movf	(___lldiv@divisor+2)^0,w,c
 12218  006A22  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 12219  006A24  5008               	movf	(___lldiv@divisor+3)^0,w,c
 12220  006A26  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 12221  006A28  A0D8               	btfss	status,0,c
 12222  006A2A  EF19  F035         	goto	u3961
 12223  006A2E  EF1C  F035         	goto	u3960
 12224  006A32                     u3961:
 12225  006A32  FFFF               	dw	65535	; assembler added errata NOP
 12226  006A34  EF26  F035         	goto	l4275
 12227  006A38                     u3960:
 12228  006A38  FFFF               	dw	65535	; assembler added errata NOP
 12229  006A3A  5005               	movf	___lldiv@divisor^0,w,c
 12230  006A3C  5E01               	subwf	___lldiv@dividend^0,f,c
 12231  006A3E  5006               	movf	(___lldiv@divisor+1)^0,w,c
 12232  006A40  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 12233  006A42  5007               	movf	(___lldiv@divisor+2)^0,w,c
 12234  006A44  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 12235  006A46  5008               	movf	(___lldiv@divisor+3)^0,w,c
 12236  006A48  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 12237  006A4A  8009               	bsf	___lldiv@quotient^0,0,c
 12238  006A4C                     l4275:
 12239  006A4C  FFFF               	dw	65535	; assembler added errata NOP
 12240  006A4E  90D8               	bcf	status,0,c
 12241  006A50  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 12242  006A52  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 12243  006A54  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 12244  006A56  3205               	rrcf	___lldiv@divisor^0,f,c
 12245  006A58  2E0D               	decfsz	___lldiv@counter^0,f,c
 12246  006A5A  EF06  F035         	goto	l4267
 12247  006A5E                     l335:
 12248  006A5E  FFFF               	dw	65535	; assembler added errata NOP
 12249  006A60  C009  F001         	movff	___lldiv@quotient,?___lldiv
 12250  006A64  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 12251  006A68  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 12252  006A6C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 12253  006A70  0012               	return		;funcret
 12254  006A72  FFFF               	dw	65535	; errata NOP
 12255  006A74                     __end_of___lldiv:
 12256                           	opt callstack 0
 12257                           
 12258 ;; *************** function ___fltol *****************
 12259 ;; Defined at:
 12260 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
 12261 ;; Parameters:    Size  Location     Type
 12262 ;;  f1              4   82[COMRAM] unsigned long 
 12263 ;; Auto vars:     Size  Location     Type
 12264 ;;  exp1            1   91[COMRAM] unsigned char 
 12265 ;;  sign1           1   90[COMRAM] unsigned char 
 12266 ;; Return value:  Size  Location     Type
 12267 ;;                  4   82[COMRAM] long 
 12268 ;; Registers used:
 12269 ;;		wreg, status,2, status,0
 12270 ;; Tracked objects:
 12271 ;;		On entry : 0/0
 12272 ;;		On exit  : 0/0
 12273 ;;		Unchanged: 0/0
 12274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12275 ;;      Params:         4       0       0       0       0       0       0
 12276 ;;      Locals:         2       0       0       0       0       0       0
 12277 ;;      Temps:          4       0       0       0       0       0       0
 12278 ;;      Totals:        10       0       0       0       0       0       0
 12279 ;;Total ram usage:       10 bytes
 12280 ;; Hardware stack levels used:    1
 12281 ;; This function calls:
 12282 ;;		Nothing
 12283 ;; This function is called by:
 12284 ;;		_main
 12285 ;;		_sprintf
 12286 ;;		_pow
 12287 ;;		_exp
 12288 ;;		_floor
 12289 ;; This function uses a non-reentrant model
 12290 ;;
 12291                           
 12292                           	psect	text27
 12293  00701A                     __ptext27:
 12294                           	opt callstack 0
 12295  00701A                     ___fltol:
 12296                           	opt callstack 0
 12297  00701A  FFFF               	dw	65535	; assembler added errata NOP
 12298  00701C  3455               	rlcf	(___fltol@f1+2)^0,w,c
 12299  00701E  3456               	rlcf	(___fltol@f1+3)^0,w,c
 12300  007020  6E5C               	movwf	___fltol@exp1^0,c
 12301  007022  505C               	movf	___fltol@exp1^0,w,c
 12302  007024  A4D8               	btfss	status,2,c
 12303  007026  EF17  F038         	goto	u3441
 12304  00702A  EF1A  F038         	goto	u3440
 12305  00702E                     u3441:
 12306  00702E  FFFF               	dw	65535	; assembler added errata NOP
 12307  007030  EF26  F038         	goto	l3917
 12308  007034                     u3440:
 12309  007034  FFFF               	dw	65535	; assembler added errata NOP
 12310  007036                     l3913:
 12311  007036  FFFF               	dw	65535	; assembler added errata NOP
 12312  007038  0E00               	movlw	0
 12313  00703A  6E53               	movwf	?___fltol^0,c
 12314  00703C  0E00               	movlw	0
 12315  00703E  6E54               	movwf	(?___fltol+1)^0,c
 12316  007040  0E00               	movlw	0
 12317  007042  6E55               	movwf	(?___fltol+2)^0,c
 12318  007044  0E00               	movlw	0
 12319  007046  6E56               	movwf	(?___fltol+3)^0,c
 12320  007048  EFA5  F038         	goto	l614
 12321  00704C                     l3917:
 12322  00704C  FFFF               	dw	65535	; assembler added errata NOP
 12323  00704E  C053  F057         	movff	___fltol@f1,??___fltol
 12324  007052  C054  F058         	movff	___fltol@f1+1,??___fltol+1
 12325  007056  C055  F059         	movff	___fltol@f1+2,??___fltol+2
 12326  00705A  C056  F05A         	movff	___fltol@f1+3,??___fltol+3
 12327  00705E  0E20               	movlw	32
 12328  007060  EF38  F038         	goto	u3450
 12329  007064                     u3455:
 12330  007064  FFFF               	dw	65535	; assembler added errata NOP
 12331  007066  90D8               	bcf	status,0,c
 12332  007068  325A               	rrcf	(??___fltol+3)^0,f,c
 12333  00706A  3259               	rrcf	(??___fltol+2)^0,f,c
 12334  00706C  3258               	rrcf	(??___fltol+1)^0,f,c
 12335  00706E  3257               	rrcf	??___fltol^0,f,c
 12336  007070                     u3450:
 12337  007070  FFFF               	dw	65535	; assembler added errata NOP
 12338  007072  2EE8               	decfsz	wreg,f,c
 12339  007074  EF32  F038         	goto	u3455
 12340  007078  5057               	movf	??___fltol^0,w,c
 12341  00707A  6E5B               	movwf	___fltol@sign1^0,c
 12342  00707C  8E55               	bsf	(___fltol@f1+2)^0,7,c
 12343  00707E  0EFF               	movlw	255
 12344  007080  1653               	andwf	___fltol@f1^0,f,c
 12345  007082  0EFF               	movlw	255
 12346  007084  1654               	andwf	(___fltol@f1+1)^0,f,c
 12347  007086  0EFF               	movlw	255
 12348  007088  1655               	andwf	(___fltol@f1+2)^0,f,c
 12349  00708A  0E00               	movlw	0
 12350  00708C  1656               	andwf	(___fltol@f1+3)^0,f,c
 12351  00708E  0E96               	movlw	150
 12352  007090  5E5C               	subwf	___fltol@exp1^0,f,c
 12353  007092  BE5C               	btfsc	___fltol@exp1^0,7,c
 12354  007094  EF51  F038         	goto	u3460
 12355  007098  EF4E  F038         	goto	u3461
 12356  00709C                     u3461:
 12357  00709C  FFFF               	dw	65535	; assembler added errata NOP
 12358  00709E  EF6B  F038         	goto	l3937
 12359  0070A2                     u3460:
 12360  0070A2  FFFF               	dw	65535	; assembler added errata NOP
 12361  0070A4  505C               	movf	___fltol@exp1^0,w,c
 12362  0070A6  0A80               	xorlw	128
 12363  0070A8  0F97               	addlw	151
 12364  0070AA  B0D8               	btfsc	status,0,c
 12365  0070AC  EF5A  F038         	goto	u3471
 12366  0070B0  EF5D  F038         	goto	u3470
 12367  0070B4                     u3471:
 12368  0070B4  FFFF               	dw	65535	; assembler added errata NOP
 12369  0070B6  EF60  F038         	goto	l3933
 12370  0070BA                     u3470:
 12371  0070BA  FFFF               	dw	65535	; assembler added errata NOP
 12372  0070BC  EF1B  F038         	goto	l3913
 12373  0070C0                     l3933:
 12374  0070C0  FFFF               	dw	65535	; assembler added errata NOP
 12375  0070C2  90D8               	bcf	status,0,c
 12376  0070C4  3256               	rrcf	(___fltol@f1+3)^0,f,c
 12377  0070C6  3255               	rrcf	(___fltol@f1+2)^0,f,c
 12378  0070C8  3254               	rrcf	(___fltol@f1+1)^0,f,c
 12379  0070CA  3253               	rrcf	___fltol@f1^0,f,c
 12380  0070CC  3E5C               	incfsz	___fltol@exp1^0,f,c
 12381  0070CE  EF60  F038         	goto	l3933
 12382  0070D2  EF89  F038         	goto	l3947
 12383  0070D6                     l3937:
 12384  0070D6  FFFF               	dw	65535	; assembler added errata NOP
 12385  0070D8  0E1F               	movlw	31
 12386  0070DA  645C               	cpfsgt	___fltol@exp1^0,c
 12387  0070DC  EF72  F038         	goto	u3481
 12388  0070E0  EF75  F038         	goto	u3480
 12389  0070E4                     u3481:
 12390  0070E4  FFFF               	dw	65535	; assembler added errata NOP
 12391  0070E6  EF7F  F038         	goto	l3945
 12392  0070EA                     u3480:
 12393  0070EA  FFFF               	dw	65535	; assembler added errata NOP
 12394  0070EC  EF1B  F038         	goto	l3913
 12395  0070F0                     l3943:
 12396  0070F0  FFFF               	dw	65535	; assembler added errata NOP
 12397  0070F2  90D8               	bcf	status,0,c
 12398  0070F4  3653               	rlcf	___fltol@f1^0,f,c
 12399  0070F6  3654               	rlcf	(___fltol@f1+1)^0,f,c
 12400  0070F8  3655               	rlcf	(___fltol@f1+2)^0,f,c
 12401  0070FA  3656               	rlcf	(___fltol@f1+3)^0,f,c
 12402  0070FC  065C               	decf	___fltol@exp1^0,f,c
 12403  0070FE                     l3945:
 12404  0070FE  FFFF               	dw	65535	; assembler added errata NOP
 12405  007100  505C               	movf	___fltol@exp1^0,w,c
 12406  007102  A4D8               	btfss	status,2,c
 12407  007104  EF86  F038         	goto	u3491
 12408  007108  EF89  F038         	goto	u3490
 12409  00710C                     u3491:
 12410  00710C  FFFF               	dw	65535	; assembler added errata NOP
 12411  00710E  EF78  F038         	goto	l3943
 12412  007112                     u3490:
 12413  007112                     l3947:
 12414  007112  FFFF               	dw	65535	; assembler added errata NOP
 12415  007114  505B               	movf	___fltol@sign1^0,w,c
 12416  007116  B4D8               	btfsc	status,2,c
 12417  007118  EF90  F038         	goto	u3501
 12418  00711C  EF93  F038         	goto	u3500
 12419  007120                     u3501:
 12420  007120  FFFF               	dw	65535	; assembler added errata NOP
 12421  007122  EF9C  F038         	goto	l3951
 12422  007126                     u3500:
 12423  007126  FFFF               	dw	65535	; assembler added errata NOP
 12424  007128  1E56               	comf	(___fltol@f1+3)^0,f,c
 12425  00712A  1E55               	comf	(___fltol@f1+2)^0,f,c
 12426  00712C  1E54               	comf	(___fltol@f1+1)^0,f,c
 12427  00712E  6C53               	negf	___fltol@f1^0,c
 12428  007130  0E00               	movlw	0
 12429  007132  2254               	addwfc	(___fltol@f1+1)^0,f,c
 12430  007134  2255               	addwfc	(___fltol@f1+2)^0,f,c
 12431  007136  2256               	addwfc	(___fltol@f1+3)^0,f,c
 12432  007138                     l3951:
 12433  007138  FFFF               	dw	65535	; assembler added errata NOP
 12434  00713A  C053  F053         	movff	___fltol@f1,?___fltol
 12435  00713E  C054  F054         	movff	___fltol@f1+1,?___fltol+1
 12436  007142  C055  F055         	movff	___fltol@f1+2,?___fltol+2
 12437  007146  C056  F056         	movff	___fltol@f1+3,?___fltol+3
 12438  00714A                     l614:
 12439  00714A  FFFF               	dw	65535	; assembler added errata NOP
 12440  00714C  0012               	return		;funcret
 12441  00714E  FFFF               	dw	65535	; errata NOP
 12442  007150                     __end_of___fltol:
 12443                           	opt callstack 0
 12444                           
 12445 ;; *************** function ___flsub *****************
 12446 ;; Defined at:
 12447 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
 12448 ;; Parameters:    Size  Location     Type
 12449 ;;  b               4  102[COMRAM] long 
 12450 ;;  a               4  106[COMRAM] long 
 12451 ;; Auto vars:     Size  Location     Type
 12452 ;;		None
 12453 ;; Return value:  Size  Location     Type
 12454 ;;                  4  102[COMRAM] long 
 12455 ;; Registers used:
 12456 ;;		wreg, status,2, status,0, cstack
 12457 ;; Tracked objects:
 12458 ;;		On entry : 0/0
 12459 ;;		On exit  : 0/0
 12460 ;;		Unchanged: 0/0
 12461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12462 ;;      Params:         8       0       0       0       0       0       0
 12463 ;;      Locals:         0       0       0       0       0       0       0
 12464 ;;      Temps:          0       0       0       0       0       0       0
 12465 ;;      Totals:         8       0       0       0       0       0       0
 12466 ;;Total ram usage:        8 bytes
 12467 ;; Hardware stack levels used:    1
 12468 ;; Hardware stack levels required when called:    1
 12469 ;; This function calls:
 12470 ;;		___fladd
 12471 ;; This function is called by:
 12472 ;;		_sprintf
 12473 ;;		_exp
 12474 ;; This function uses a non-reentrant model
 12475 ;;
 12476                           
 12477                           	psect	text28
 12478  0066D6                     __ptext28:
 12479                           	opt callstack 0
 12480  0066D6                     ___flsub:
 12481                           	opt callstack 0
 12482  0066D6  FFFF               	dw	65535	; assembler added errata NOP
 12483  0066D8  0E00               	movlw	0
 12484  0066DA  1A6B               	xorwf	___flsub@a^0,f,c
 12485  0066DC  0E00               	movlw	0
 12486  0066DE  1A6C               	xorwf	(___flsub@a+1)^0,f,c
 12487  0066E0  0E00               	movlw	0
 12488  0066E2  1A6D               	xorwf	(___flsub@a+2)^0,f,c
 12489  0066E4  0E80               	movlw	128
 12490  0066E6  1A6E               	xorwf	(___flsub@a+3)^0,f,c
 12491  0066E8  C067  F057         	movff	___flsub@b,___fladd@b
 12492  0066EC  C068  F058         	movff	___flsub@b+1,___fladd@b+1
 12493  0066F0  C069  F059         	movff	___flsub@b+2,___fladd@b+2
 12494  0066F4  C06A  F05A         	movff	___flsub@b+3,___fladd@b+3
 12495  0066F8  C06B  F05B         	movff	___flsub@a,___fladd@a
 12496  0066FC  C06C  F05C         	movff	___flsub@a+1,___fladd@a+1
 12497  006700  C06D  F05D         	movff	___flsub@a+2,___fladd@a+2
 12498  006704  C06E  F05E         	movff	___flsub@a+3,___fladd@a+3
 12499  006708  ECB8  F00B         	call	___fladd	;wreg free
 12500  00670C  C057  F067         	movff	?___fladd,?___flsub
 12501  006710  C058  F068         	movff	?___fladd+1,?___flsub+1
 12502  006714  C059  F069         	movff	?___fladd+2,?___flsub+2
 12503  006718  C05A  F06A         	movff	?___fladd+3,?___flsub+3
 12504  00671C  0012               	return		;funcret
 12505  00671E  FFFF               	dw	65535	; errata NOP
 12506  006720                     __end_of___flsub:
 12507                           	opt callstack 0
 12508                           
 12509 ;; *************** function ___fladd *****************
 12510 ;; Defined at:
 12511 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
 12512 ;; Parameters:    Size  Location     Type
 12513 ;;  b               4   86[COMRAM] long 
 12514 ;;  a               4   90[COMRAM] long 
 12515 ;; Auto vars:     Size  Location     Type
 12516 ;;  grs             1  101[COMRAM] unsigned char 
 12517 ;;  bexp            1  100[COMRAM] unsigned char 
 12518 ;;  aexp            1   99[COMRAM] unsigned char 
 12519 ;;  signs           1   98[COMRAM] unsigned char 
 12520 ;; Return value:  Size  Location     Type
 12521 ;;                  4   86[COMRAM] unsigned char 
 12522 ;; Registers used:
 12523 ;;		wreg, status,2, status,0
 12524 ;; Tracked objects:
 12525 ;;		On entry : 0/0
 12526 ;;		On exit  : 0/0
 12527 ;;		Unchanged: 0/0
 12528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12529 ;;      Params:         8       0       0       0       0       0       0
 12530 ;;      Locals:         4       0       0       0       0       0       0
 12531 ;;      Temps:          4       0       0       0       0       0       0
 12532 ;;      Totals:        16       0       0       0       0       0       0
 12533 ;;Total ram usage:       16 bytes
 12534 ;; Hardware stack levels used:    1
 12535 ;; This function calls:
 12536 ;;		Nothing
 12537 ;; This function is called by:
 12538 ;;		_sprintf
 12539 ;;		___flsub
 12540 ;;		_floor
 12541 ;;		_log
 12542 ;;		_eval_poly
 12543 ;; This function uses a non-reentrant model
 12544 ;;
 12545                           
 12546                           	psect	text29
 12547  001770                     __ptext29:
 12548                           	opt callstack 0
 12549  001770                     ___fladd:
 12550                           	opt callstack 0
 12551  001770  FFFF               	dw	65535	; assembler added errata NOP
 12552  001772  505A               	movf	(___fladd@b+3)^0,w,c
 12553  001774  0B80               	andlw	128
 12554  001776  6E63               	movwf	___fladd@signs^0,c
 12555  001778  505A               	movf	(___fladd@b+3)^0,w,c
 12556  00177A  245A               	addwf	(___fladd@b+3)^0,w,c
 12557  00177C  6E65               	movwf	___fladd@bexp^0,c
 12558  00177E  AE59               	btfss	(___fladd@b+2)^0,7,c
 12559  001780  EFC4  F00B         	goto	u2691
 12560  001784  EFC7  F00B         	goto	u2690
 12561  001788                     u2691:
 12562  001788  FFFF               	dw	65535	; assembler added errata NOP
 12563  00178A  EFC9  F00B         	goto	l3483
 12564  00178E                     u2690:
 12565  00178E  FFFF               	dw	65535	; assembler added errata NOP
 12566  001790  8065               	bsf	___fladd@bexp^0,0,c
 12567  001792                     l3483:
 12568  001792  FFFF               	dw	65535	; assembler added errata NOP
 12569  001794  5065               	movf	___fladd@bexp^0,w,c
 12570  001796  B4D8               	btfsc	status,2,c
 12571  001798  EFD0  F00B         	goto	u2701
 12572  00179C  EFD3  F00B         	goto	u2700
 12573  0017A0                     u2701:
 12574  0017A0  FFFF               	dw	65535	; assembler added errata NOP
 12575  0017A2  EFEC  F00B         	goto	l3493
 12576  0017A6                     u2700:
 12577  0017A6  FFFF               	dw	65535	; assembler added errata NOP
 12578  0017A8  2865               	incf	___fladd@bexp^0,w,c
 12579  0017AA  A4D8               	btfss	status,2,c
 12580  0017AC  EFDA  F00B         	goto	u2711
 12581  0017B0  EFDD  F00B         	goto	u2710
 12582  0017B4                     u2711:
 12583  0017B4  FFFF               	dw	65535	; assembler added errata NOP
 12584  0017B6  EFE6  F00B         	goto	l3489
 12585  0017BA                     u2710:
 12586  0017BA  FFFF               	dw	65535	; assembler added errata NOP
 12587  0017BC  0E00               	movlw	0
 12588  0017BE  6E57               	movwf	___fladd@b^0,c
 12589  0017C0  0E00               	movlw	0
 12590  0017C2  6E58               	movwf	(___fladd@b+1)^0,c
 12591  0017C4  0E00               	movlw	0
 12592  0017C6  6E59               	movwf	(___fladd@b+2)^0,c
 12593  0017C8  0E00               	movlw	0
 12594  0017CA  6E5A               	movwf	(___fladd@b+3)^0,c
 12595  0017CC                     l3489:
 12596  0017CC  FFFF               	dw	65535	; assembler added errata NOP
 12597  0017CE  8E59               	bsf	(___fladd@b+2)^0,7,c
 12598  0017D0  0E00               	movlw	0
 12599  0017D2  6E5A               	movwf	(___fladd@b+3)^0,c
 12600  0017D4  EFF5  F00B         	goto	l3495
 12601  0017D8                     l3493:
 12602  0017D8  FFFF               	dw	65535	; assembler added errata NOP
 12603  0017DA  0E00               	movlw	0
 12604  0017DC  6E57               	movwf	___fladd@b^0,c
 12605  0017DE  0E00               	movlw	0
 12606  0017E0  6E58               	movwf	(___fladd@b+1)^0,c
 12607  0017E2  0E00               	movlw	0
 12608  0017E4  6E59               	movwf	(___fladd@b+2)^0,c
 12609  0017E6  0E00               	movlw	0
 12610  0017E8  6E5A               	movwf	(___fladd@b+3)^0,c
 12611  0017EA                     l3495:
 12612  0017EA  FFFF               	dw	65535	; assembler added errata NOP
 12613  0017EC  505E               	movf	(___fladd@a+3)^0,w,c
 12614  0017EE  0B80               	andlw	128
 12615  0017F0  6E64               	movwf	___fladd@aexp^0,c
 12616  0017F2  5063               	movf	___fladd@signs^0,w,c
 12617  0017F4  1864               	xorwf	___fladd@aexp^0,w,c
 12618  0017F6  B4D8               	btfsc	status,2,c
 12619  0017F8  EF00  F00C         	goto	u2721
 12620  0017FC  EF03  F00C         	goto	u2720
 12621  001800                     u2721:
 12622  001800  FFFF               	dw	65535	; assembler added errata NOP
 12623  001802  EF05  F00C         	goto	l3501
 12624  001806                     u2720:
 12625  001806  FFFF               	dw	65535	; assembler added errata NOP
 12626  001808  8C63               	bsf	___fladd@signs^0,6,c
 12627  00180A                     l3501:
 12628  00180A  FFFF               	dw	65535	; assembler added errata NOP
 12629  00180C  505E               	movf	(___fladd@a+3)^0,w,c
 12630  00180E  245E               	addwf	(___fladd@a+3)^0,w,c
 12631  001810  6E64               	movwf	___fladd@aexp^0,c
 12632  001812  AE5D               	btfss	(___fladd@a+2)^0,7,c
 12633  001814  EF0E  F00C         	goto	u2731
 12634  001818  EF11  F00C         	goto	u2730
 12635  00181C                     u2731:
 12636  00181C  FFFF               	dw	65535	; assembler added errata NOP
 12637  00181E  EF13  F00C         	goto	l3507
 12638  001822                     u2730:
 12639  001822  FFFF               	dw	65535	; assembler added errata NOP
 12640  001824  8064               	bsf	___fladd@aexp^0,0,c
 12641  001826                     l3507:
 12642  001826  FFFF               	dw	65535	; assembler added errata NOP
 12643  001828  5064               	movf	___fladd@aexp^0,w,c
 12644  00182A  B4D8               	btfsc	status,2,c
 12645  00182C  EF1A  F00C         	goto	u2741
 12646  001830  EF1D  F00C         	goto	u2740
 12647  001834                     u2741:
 12648  001834  FFFF               	dw	65535	; assembler added errata NOP
 12649  001836  EF36  F00C         	goto	l3517
 12650  00183A                     u2740:
 12651  00183A  FFFF               	dw	65535	; assembler added errata NOP
 12652  00183C  2864               	incf	___fladd@aexp^0,w,c
 12653  00183E  A4D8               	btfss	status,2,c
 12654  001840  EF24  F00C         	goto	u2751
 12655  001844  EF27  F00C         	goto	u2750
 12656  001848                     u2751:
 12657  001848  FFFF               	dw	65535	; assembler added errata NOP
 12658  00184A  EF30  F00C         	goto	l3513
 12659  00184E                     u2750:
 12660  00184E  FFFF               	dw	65535	; assembler added errata NOP
 12661  001850  0E00               	movlw	0
 12662  001852  6E5B               	movwf	___fladd@a^0,c
 12663  001854  0E00               	movlw	0
 12664  001856  6E5C               	movwf	(___fladd@a+1)^0,c
 12665  001858  0E00               	movlw	0
 12666  00185A  6E5D               	movwf	(___fladd@a+2)^0,c
 12667  00185C  0E00               	movlw	0
 12668  00185E  6E5E               	movwf	(___fladd@a+3)^0,c
 12669  001860                     l3513:
 12670  001860  FFFF               	dw	65535	; assembler added errata NOP
 12671  001862  8E5D               	bsf	(___fladd@a+2)^0,7,c
 12672  001864  0E00               	movlw	0
 12673  001866  6E5E               	movwf	(___fladd@a+3)^0,c
 12674  001868  EF3F  F00C         	goto	l3519
 12675  00186C                     l3517:
 12676  00186C  FFFF               	dw	65535	; assembler added errata NOP
 12677  00186E  0E00               	movlw	0
 12678  001870  6E5B               	movwf	___fladd@a^0,c
 12679  001872  0E00               	movlw	0
 12680  001874  6E5C               	movwf	(___fladd@a+1)^0,c
 12681  001876  0E00               	movlw	0
 12682  001878  6E5D               	movwf	(___fladd@a+2)^0,c
 12683  00187A  0E00               	movlw	0
 12684  00187C  6E5E               	movwf	(___fladd@a+3)^0,c
 12685  00187E                     l3519:
 12686  00187E  FFFF               	dw	65535	; assembler added errata NOP
 12687  001880  5065               	movf	___fladd@bexp^0,w,c
 12688  001882  5C64               	subwf	___fladd@aexp^0,w,c
 12689  001884  B0D8               	btfsc	status,0,c
 12690  001886  EF47  F00C         	goto	u2761
 12691  00188A  EF4A  F00C         	goto	u2760
 12692  00188E                     u2761:
 12693  00188E  FFFF               	dw	65535	; assembler added errata NOP
 12694  001890  EF75  F00C         	goto	l3555
 12695  001894                     u2760:
 12696  001894  FFFF               	dw	65535	; assembler added errata NOP
 12697  001896  AC63               	btfss	___fladd@signs^0,6,c
 12698  001898  EF50  F00C         	goto	u2771
 12699  00189C  EF53  F00C         	goto	u2770
 12700  0018A0                     u2771:
 12701  0018A0  FFFF               	dw	65535	; assembler added errata NOP
 12702  0018A2  EF56  F00C         	goto	l3525
 12703  0018A6                     u2770:
 12704  0018A6  FFFF               	dw	65535	; assembler added errata NOP
 12705  0018A8  0E80               	movlw	128
 12706  0018AA  1A63               	xorwf	___fladd@signs^0,f,c
 12707  0018AC                     l3525:
 12708  0018AC  FFFF               	dw	65535	; assembler added errata NOP
 12709  0018AE  C065  F066         	movff	___fladd@bexp,___fladd@grs
 12710  0018B2  C064  F065         	movff	___fladd@aexp,___fladd@bexp
 12711  0018B6  C066  F064         	movff	___fladd@grs,___fladd@aexp
 12712  0018BA  C057  F066         	movff	___fladd@b,___fladd@grs
 12713  0018BE  C05B  F057         	movff	___fladd@a,___fladd@b
 12714  0018C2  C066  F05B         	movff	___fladd@grs,___fladd@a
 12715  0018C6  C058  F066         	movff	___fladd@b+1,___fladd@grs
 12716  0018CA  C05C  F058         	movff	___fladd@a+1,___fladd@b+1
 12717  0018CE  C066  F05C         	movff	___fladd@grs,___fladd@a+1
 12718  0018D2  C059  F066         	movff	___fladd@b+2,___fladd@grs
 12719  0018D6  C05D  F059         	movff	___fladd@a+2,___fladd@b+2
 12720  0018DA  C066  F05D         	movff	___fladd@grs,___fladd@a+2
 12721  0018DE  C05A  F066         	movff	___fladd@b+3,___fladd@grs
 12722  0018E2  C05E  F05A         	movff	___fladd@a+3,___fladd@b+3
 12723  0018E6  C066  F05E         	movff	___fladd@grs,___fladd@a+3
 12724  0018EA                     l3555:
 12725  0018EA  FFFF               	dw	65535	; assembler added errata NOP
 12726  0018EC  0E00               	movlw	0
 12727  0018EE  6E66               	movwf	___fladd@grs^0,c
 12728  0018F0  5065               	movf	___fladd@bexp^0,w,c
 12729  0018F2  C064  F05F         	movff	___fladd@aexp,??___fladd
 12730  0018F6  6A60               	clrf	(??___fladd+1)^0,c
 12731  0018F8  5E5F               	subwf	??___fladd^0,f,c
 12732  0018FA  0E00               	movlw	0
 12733  0018FC  5A60               	subwfb	(??___fladd+1)^0,f,c
 12734  0018FE  BE60               	btfsc	(??___fladd+1)^0,7,c
 12735  001900  EF8B  F00C         	goto	u2781
 12736  001904  5060               	movf	(??___fladd+1)^0,w,c
 12737  001906  E10A               	bnz	u2780
 12738  001908  0E1A               	movlw	26
 12739  00190A  5C5F               	subwf	??___fladd^0,w,c
 12740  00190C  A0D8               	btfss	status,0,c
 12741  00190E  EF8B  F00C         	goto	u2781
 12742  001912  EF8E  F00C         	goto	u2780
 12743  001916                     u2781:
 12744  001916  FFFF               	dw	65535	; assembler added errata NOP
 12745  001918  EFD1  F00C         	goto	l859
 12746  00191C                     u2780:
 12747  00191C  FFFF               	dw	65535	; assembler added errata NOP
 12748  00191E  5057               	movf	___fladd@b^0,w,c
 12749  001920  1058               	iorwf	(___fladd@b+1)^0,w,c
 12750  001922  1059               	iorwf	(___fladd@b+2)^0,w,c
 12751  001924  105A               	iorwf	(___fladd@b+3)^0,w,c
 12752  001926  A4D8               	btfss	status,2,c
 12753  001928  EF98  F00C         	goto	u2791
 12754  00192C  EF9C  F00C         	goto	u2790
 12755  001930                     u2791:
 12756  001930  FFFF               	dw	65535	; assembler added errata NOP
 12757  001932  0E01               	movlw	1
 12758  001934  EF9E  F00C         	goto	u2800
 12759  001938                     u2790:
 12760  001938  FFFF               	dw	65535	; assembler added errata NOP
 12761  00193A  0E00               	movlw	0
 12762  00193C                     u2800:
 12763  00193C  FFFF               	dw	65535	; assembler added errata NOP
 12764  00193E  6E66               	movwf	___fladd@grs^0,c
 12765  001940  0E00               	movlw	0
 12766  001942  6E57               	movwf	___fladd@b^0,c
 12767  001944  0E00               	movlw	0
 12768  001946  6E58               	movwf	(___fladd@b+1)^0,c
 12769  001948  0E00               	movlw	0
 12770  00194A  6E59               	movwf	(___fladd@b+2)^0,c
 12771  00194C  0E00               	movlw	0
 12772  00194E  6E5A               	movwf	(___fladd@b+3)^0,c
 12773  001950  C064  F065         	movff	___fladd@aexp,___fladd@bexp
 12774  001954  EFDC  F00C         	goto	l858
 12775  001958                     l860:
 12776  001958  FFFF               	dw	65535	; assembler added errata NOP
 12777  00195A  A066               	btfss	___fladd@grs^0,0,c
 12778  00195C  EFB2  F00C         	goto	u2811
 12779  001960  EFB5  F00C         	goto	u2810
 12780  001964                     u2811:
 12781  001964  FFFF               	dw	65535	; assembler added errata NOP
 12782  001966  EFBC  F00C         	goto	l3567
 12783  00196A                     u2810:
 12784  00196A  FFFF               	dw	65535	; assembler added errata NOP
 12785  00196C  90D8               	bcf	status,0,c
 12786  00196E  3066               	rrcf	___fladd@grs^0,w,c
 12787  001970  0901               	iorlw	1
 12788  001972  6E66               	movwf	___fladd@grs^0,c
 12789  001974  EFBF  F00C         	goto	l3569
 12790  001978                     l3567:
 12791  001978  FFFF               	dw	65535	; assembler added errata NOP
 12792  00197A  90D8               	bcf	status,0,c
 12793  00197C  3266               	rrcf	___fladd@grs^0,f,c
 12794  00197E                     l3569:
 12795  00197E  FFFF               	dw	65535	; assembler added errata NOP
 12796  001980  A057               	btfss	___fladd@b^0,0,c
 12797  001982  EFC5  F00C         	goto	u2821
 12798  001986  EFC8  F00C         	goto	u2820
 12799  00198A                     u2821:
 12800  00198A  FFFF               	dw	65535	; assembler added errata NOP
 12801  00198C  EFCA  F00C         	goto	l3573
 12802  001990                     u2820:
 12803  001990  FFFF               	dw	65535	; assembler added errata NOP
 12804  001992  8E66               	bsf	___fladd@grs^0,7,c
 12805  001994                     l3573:
 12806  001994  FFFF               	dw	65535	; assembler added errata NOP
 12807  001996  345A               	rlcf	(___fladd@b+3)^0,w,c
 12808  001998  325A               	rrcf	(___fladd@b+3)^0,f,c
 12809  00199A  3259               	rrcf	(___fladd@b+2)^0,f,c
 12810  00199C  3258               	rrcf	(___fladd@b+1)^0,f,c
 12811  00199E  3257               	rrcf	___fladd@b^0,f,c
 12812  0019A0  2A65               	incf	___fladd@bexp^0,f,c
 12813  0019A2                     l859:
 12814  0019A2  FFFF               	dw	65535	; assembler added errata NOP
 12815  0019A4  5064               	movf	___fladd@aexp^0,w,c
 12816  0019A6  5C65               	subwf	___fladd@bexp^0,w,c
 12817  0019A8  A0D8               	btfss	status,0,c
 12818  0019AA  EFD9  F00C         	goto	u2831
 12819  0019AE  EFDC  F00C         	goto	u2830
 12820  0019B2                     u2831:
 12821  0019B2  FFFF               	dw	65535	; assembler added errata NOP
 12822  0019B4  EFAC  F00C         	goto	l860
 12823  0019B8                     u2830:
 12824  0019B8                     l858:
 12825  0019B8  FFFF               	dw	65535	; assembler added errata NOP
 12826  0019BA  BC63               	btfsc	___fladd@signs^0,6,c
 12827  0019BC  EFE2  F00C         	goto	u2841
 12828  0019C0  EFE5  F00C         	goto	u2840
 12829  0019C4                     u2841:
 12830  0019C4  FFFF               	dw	65535	; assembler added errata NOP
 12831  0019C6  EF32  F00D         	goto	l3601
 12832  0019CA                     u2840:
 12833  0019CA  FFFF               	dw	65535	; assembler added errata NOP
 12834  0019CC  5065               	movf	___fladd@bexp^0,w,c
 12835  0019CE  A4D8               	btfss	status,2,c
 12836  0019D0  EFEC  F00C         	goto	u2851
 12837  0019D4  EFEF  F00C         	goto	u2850
 12838  0019D8                     u2851:
 12839  0019D8  FFFF               	dw	65535	; assembler added errata NOP
 12840  0019DA  EFFA  F00C         	goto	l3583
 12841  0019DE                     u2850:
 12842  0019DE  FFFF               	dw	65535	; assembler added errata NOP
 12843  0019E0  0E00               	movlw	0
 12844  0019E2  6E57               	movwf	?___fladd^0,c
 12845  0019E4  0E00               	movlw	0
 12846  0019E6  6E58               	movwf	(?___fladd+1)^0,c
 12847  0019E8  0E00               	movlw	0
 12848  0019EA  6E59               	movwf	(?___fladd+2)^0,c
 12849  0019EC  0E00               	movlw	0
 12850  0019EE  6E5A               	movwf	(?___fladd+3)^0,c
 12851  0019F0  EF89  F00E         	goto	l867
 12852  0019F4                     l3583:
 12853  0019F4  FFFF               	dw	65535	; assembler added errata NOP
 12854  0019F6  505B               	movf	___fladd@a^0,w,c
 12855  0019F8  2657               	addwf	___fladd@b^0,f,c
 12856  0019FA  505C               	movf	(___fladd@a+1)^0,w,c
 12857  0019FC  2258               	addwfc	(___fladd@b+1)^0,f,c
 12858  0019FE  505D               	movf	(___fladd@a+2)^0,w,c
 12859  001A00  2259               	addwfc	(___fladd@b+2)^0,f,c
 12860  001A02  505E               	movf	(___fladd@a+3)^0,w,c
 12861  001A04  225A               	addwfc	(___fladd@b+3)^0,f,c
 12862  001A06  A05A               	btfss	(___fladd@b+3)^0,0,c
 12863  001A08  EF08  F00D         	goto	u2861
 12864  001A0C  EF0B  F00D         	goto	u2860
 12865  001A10                     u2861:
 12866  001A10  FFFF               	dw	65535	; assembler added errata NOP
 12867  001A12  EFD6  F00D         	goto	l3637
 12868  001A16                     u2860:
 12869  001A16  FFFF               	dw	65535	; assembler added errata NOP
 12870  001A18  A066               	btfss	___fladd@grs^0,0,c
 12871  001A1A  EF11  F00D         	goto	u2871
 12872  001A1E  EF14  F00D         	goto	u2870
 12873  001A22                     u2871:
 12874  001A22  FFFF               	dw	65535	; assembler added errata NOP
 12875  001A24  EF1B  F00D         	goto	l3591
 12876  001A28                     u2870:
 12877  001A28  FFFF               	dw	65535	; assembler added errata NOP
 12878  001A2A  90D8               	bcf	status,0,c
 12879  001A2C  3066               	rrcf	___fladd@grs^0,w,c
 12880  001A2E  0901               	iorlw	1
 12881  001A30  6E66               	movwf	___fladd@grs^0,c
 12882  001A32  EF1E  F00D         	goto	l3593
 12883  001A36                     l3591:
 12884  001A36  FFFF               	dw	65535	; assembler added errata NOP
 12885  001A38  90D8               	bcf	status,0,c
 12886  001A3A  3266               	rrcf	___fladd@grs^0,f,c
 12887  001A3C                     l3593:
 12888  001A3C  FFFF               	dw	65535	; assembler added errata NOP
 12889  001A3E  A057               	btfss	___fladd@b^0,0,c
 12890  001A40  EF24  F00D         	goto	u2881
 12891  001A44  EF27  F00D         	goto	u2880
 12892  001A48                     u2881:
 12893  001A48  FFFF               	dw	65535	; assembler added errata NOP
 12894  001A4A  EF29  F00D         	goto	l3597
 12895  001A4E                     u2880:
 12896  001A4E  FFFF               	dw	65535	; assembler added errata NOP
 12897  001A50  8E66               	bsf	___fladd@grs^0,7,c
 12898  001A52                     l3597:
 12899  001A52  FFFF               	dw	65535	; assembler added errata NOP
 12900  001A54  345A               	rlcf	(___fladd@b+3)^0,w,c
 12901  001A56  325A               	rrcf	(___fladd@b+3)^0,f,c
 12902  001A58  3259               	rrcf	(___fladd@b+2)^0,f,c
 12903  001A5A  3258               	rrcf	(___fladd@b+1)^0,f,c
 12904  001A5C  3257               	rrcf	___fladd@b^0,f,c
 12905  001A5E  2A65               	incf	___fladd@bexp^0,f,c
 12906  001A60  EFD6  F00D         	goto	l3637
 12907  001A64                     l3601:
 12908  001A64  FFFF               	dw	65535	; assembler added errata NOP
 12909  001A66  505B               	movf	___fladd@a^0,w,c
 12910  001A68  5C57               	subwf	___fladd@b^0,w,c
 12911  001A6A  505C               	movf	(___fladd@a+1)^0,w,c
 12912  001A6C  5858               	subwfb	(___fladd@b+1)^0,w,c
 12913  001A6E  505D               	movf	(___fladd@a+2)^0,w,c
 12914  001A70  5859               	subwfb	(___fladd@b+2)^0,w,c
 12915  001A72  505A               	movf	(___fladd@b+3)^0,w,c
 12916  001A74  0A80               	xorlw	128
 12917  001A76  6E5F               	movwf	??___fladd^0,c
 12918  001A78  505E               	movf	(___fladd@a+3)^0,w,c
 12919  001A7A  0A80               	xorlw	128
 12920  001A7C  585F               	subwfb	??___fladd^0,w,c
 12921  001A7E  B0D8               	btfsc	status,0,c
 12922  001A80  EF44  F00D         	goto	u2891
 12923  001A84  EF47  F00D         	goto	u2890
 12924  001A88                     u2891:
 12925  001A88  FFFF               	dw	65535	; assembler added errata NOP
 12926  001A8A  EF75  F00D         	goto	l3611
 12927  001A8E                     u2890:
 12928  001A8E  FFFF               	dw	65535	; assembler added errata NOP
 12929  001A90  5057               	movf	___fladd@b^0,w,c
 12930  001A92  5C5B               	subwf	___fladd@a^0,w,c
 12931  001A94  6E5F               	movwf	??___fladd^0,c
 12932  001A96  5058               	movf	(___fladd@b+1)^0,w,c
 12933  001A98  585C               	subwfb	(___fladd@a+1)^0,w,c
 12934  001A9A  6E60               	movwf	(??___fladd+1)^0,c
 12935  001A9C  5059               	movf	(___fladd@b+2)^0,w,c
 12936  001A9E  585D               	subwfb	(___fladd@a+2)^0,w,c
 12937  001AA0  6E61               	movwf	(??___fladd+2)^0,c
 12938  001AA2  505A               	movf	(___fladd@b+3)^0,w,c
 12939  001AA4  585E               	subwfb	(___fladd@a+3)^0,w,c
 12940  001AA6  6E62               	movwf	(??___fladd+3)^0,c
 12941  001AA8  0EFF               	movlw	255
 12942  001AAA  245F               	addwf	??___fladd^0,w,c
 12943  001AAC  6E57               	movwf	___fladd@b^0,c
 12944  001AAE  0EFF               	movlw	255
 12945  001AB0  2060               	addwfc	(??___fladd+1)^0,w,c
 12946  001AB2  6E58               	movwf	(___fladd@b+1)^0,c
 12947  001AB4  0EFF               	movlw	255
 12948  001AB6  2061               	addwfc	(??___fladd+2)^0,w,c
 12949  001AB8  6E59               	movwf	(___fladd@b+2)^0,c
 12950  001ABA  0EFF               	movlw	255
 12951  001ABC  2062               	addwfc	(??___fladd+3)^0,w,c
 12952  001ABE  6E5A               	movwf	(___fladd@b+3)^0,c
 12953  001AC0  0E80               	movlw	128
 12954  001AC2  1A63               	xorwf	___fladd@signs^0,f,c
 12955  001AC4  6C66               	negf	___fladd@grs^0,c
 12956  001AC6  5066               	movf	___fladd@grs^0,w,c
 12957  001AC8  A4D8               	btfss	status,2,c
 12958  001ACA  EF69  F00D         	goto	u2901
 12959  001ACE  EF6C  F00D         	goto	u2900
 12960  001AD2                     u2901:
 12961  001AD2  FFFF               	dw	65535	; assembler added errata NOP
 12962  001AD4  EF7E  F00D         	goto	l875
 12963  001AD8                     u2900:
 12964  001AD8  FFFF               	dw	65535	; assembler added errata NOP
 12965  001ADA  0E01               	movlw	1
 12966  001ADC  2657               	addwf	___fladd@b^0,f,c
 12967  001ADE  0E00               	movlw	0
 12968  001AE0  2258               	addwfc	(___fladd@b+1)^0,f,c
 12969  001AE2  2259               	addwfc	(___fladd@b+2)^0,f,c
 12970  001AE4  225A               	addwfc	(___fladd@b+3)^0,f,c
 12971  001AE6  EF7E  F00D         	goto	l875
 12972  001AEA                     l3611:
 12973  001AEA  FFFF               	dw	65535	; assembler added errata NOP
 12974  001AEC  505B               	movf	___fladd@a^0,w,c
 12975  001AEE  5E57               	subwf	___fladd@b^0,f,c
 12976  001AF0  505C               	movf	(___fladd@a+1)^0,w,c
 12977  001AF2  5A58               	subwfb	(___fladd@b+1)^0,f,c
 12978  001AF4  505D               	movf	(___fladd@a+2)^0,w,c
 12979  001AF6  5A59               	subwfb	(___fladd@b+2)^0,f,c
 12980  001AF8  505E               	movf	(___fladd@a+3)^0,w,c
 12981  001AFA  5A5A               	subwfb	(___fladd@b+3)^0,f,c
 12982  001AFC                     l875:
 12983  001AFC  FFFF               	dw	65535	; assembler added errata NOP
 12984  001AFE  5057               	movf	___fladd@b^0,w,c
 12985  001B00  1058               	iorwf	(___fladd@b+1)^0,w,c
 12986  001B02  1059               	iorwf	(___fladd@b+2)^0,w,c
 12987  001B04  105A               	iorwf	(___fladd@b+3)^0,w,c
 12988  001B06  A4D8               	btfss	status,2,c
 12989  001B08  EF88  F00D         	goto	u2911
 12990  001B0C  EF8B  F00D         	goto	u2910
 12991  001B10                     u2911:
 12992  001B10  FFFF               	dw	65535	; assembler added errata NOP
 12993  001B12  EFCD  F00D         	goto	l3635
 12994  001B16                     u2910:
 12995  001B16  FFFF               	dw	65535	; assembler added errata NOP
 12996  001B18  5066               	movf	___fladd@grs^0,w,c
 12997  001B1A  A4D8               	btfss	status,2,c
 12998  001B1C  EF92  F00D         	goto	u2921
 12999  001B20  EF95  F00D         	goto	u2920
 13000  001B24                     u2921:
 13001  001B24  FFFF               	dw	65535	; assembler added errata NOP
 13002  001B26  EFCD  F00D         	goto	l3635
 13003  001B2A                     u2920:
 13004  001B2A  FFFF               	dw	65535	; assembler added errata NOP
 13005  001B2C  0E00               	movlw	0
 13006  001B2E  6E57               	movwf	?___fladd^0,c
 13007  001B30  0E00               	movlw	0
 13008  001B32  6E58               	movwf	(?___fladd+1)^0,c
 13009  001B34  0E00               	movlw	0
 13010  001B36  6E59               	movwf	(?___fladd+2)^0,c
 13011  001B38  0E00               	movlw	0
 13012  001B3A  6E5A               	movwf	(?___fladd+3)^0,c
 13013  001B3C  EF89  F00E         	goto	l867
 13014  001B40                     l3619:
 13015  001B40  FFFF               	dw	65535	; assembler added errata NOP
 13016  001B42  90D8               	bcf	status,0,c
 13017  001B44  3657               	rlcf	___fladd@b^0,f,c
 13018  001B46  3658               	rlcf	(___fladd@b+1)^0,f,c
 13019  001B48  3659               	rlcf	(___fladd@b+2)^0,f,c
 13020  001B4A  365A               	rlcf	(___fladd@b+3)^0,f,c
 13021  001B4C  AE66               	btfss	___fladd@grs^0,7,c
 13022  001B4E  EFAB  F00D         	goto	u2931
 13023  001B52  EFAE  F00D         	goto	u2930
 13024  001B56                     u2931:
 13025  001B56  FFFF               	dw	65535	; assembler added errata NOP
 13026  001B58  EFB0  F00D         	goto	l3625
 13027  001B5C                     u2930:
 13028  001B5C  FFFF               	dw	65535	; assembler added errata NOP
 13029  001B5E  8057               	bsf	___fladd@b^0,0,c
 13030  001B60                     l3625:
 13031  001B60  FFFF               	dw	65535	; assembler added errata NOP
 13032  001B62  A066               	btfss	___fladd@grs^0,0,c
 13033  001B64  EFB6  F00D         	goto	u2941
 13034  001B68  EFB9  F00D         	goto	u2940
 13035  001B6C                     u2941:
 13036  001B6C  FFFF               	dw	65535	; assembler added errata NOP
 13037  001B6E  EFBE  F00D         	goto	l3629
 13038  001B72                     u2940:
 13039  001B72  FFFF               	dw	65535	; assembler added errata NOP
 13040  001B74  80D8               	bsf	status,0,c
 13041  001B76  3666               	rlcf	___fladd@grs^0,f,c
 13042  001B78  EFC1  F00D         	goto	l3631
 13043  001B7C                     l3629:
 13044  001B7C  FFFF               	dw	65535	; assembler added errata NOP
 13045  001B7E  90D8               	bcf	status,0,c
 13046  001B80  3666               	rlcf	___fladd@grs^0,f,c
 13047  001B82                     l3631:
 13048  001B82  FFFF               	dw	65535	; assembler added errata NOP
 13049  001B84  5065               	movf	___fladd@bexp^0,w,c
 13050  001B86  B4D8               	btfsc	status,2,c
 13051  001B88  EFC8  F00D         	goto	u2951
 13052  001B8C  EFCB  F00D         	goto	u2950
 13053  001B90                     u2951:
 13054  001B90  FFFF               	dw	65535	; assembler added errata NOP
 13055  001B92  EFCD  F00D         	goto	l3635
 13056  001B96                     u2950:
 13057  001B96  FFFF               	dw	65535	; assembler added errata NOP
 13058  001B98  0665               	decf	___fladd@bexp^0,f,c
 13059  001B9A                     l3635:
 13060  001B9A  FFFF               	dw	65535	; assembler added errata NOP
 13061  001B9C  AE59               	btfss	(___fladd@b+2)^0,7,c
 13062  001B9E  EFD3  F00D         	goto	u2961
 13063  001BA2  EFD6  F00D         	goto	u2960
 13064  001BA6                     u2961:
 13065  001BA6  FFFF               	dw	65535	; assembler added errata NOP
 13066  001BA8  EFA0  F00D         	goto	l3619
 13067  001BAC                     u2960:
 13068  001BAC                     l3637:
 13069  001BAC  FFFF               	dw	65535	; assembler added errata NOP
 13070  001BAE  0E00               	movlw	0
 13071  001BB0  6E64               	movwf	___fladd@aexp^0,c
 13072  001BB2  AE66               	btfss	___fladd@grs^0,7,c
 13073  001BB4  EFDE  F00D         	goto	u2971
 13074  001BB8  EFE1  F00D         	goto	u2970
 13075  001BBC                     u2971:
 13076  001BBC  FFFF               	dw	65535	; assembler added errata NOP
 13077  001BBE  EF00  F00E         	goto	l884
 13078  001BC2                     u2970:
 13079  001BC2  FFFF               	dw	65535	; assembler added errata NOP
 13080  001BC4  C066  F05F         	movff	___fladd@grs,??___fladd
 13081  001BC8  0E7F               	movlw	127
 13082  001BCA  165F               	andwf	??___fladd^0,f,c
 13083  001BCC  B4D8               	btfsc	status,2,c
 13084  001BCE  EFEB  F00D         	goto	u2981
 13085  001BD2  EFEE  F00D         	goto	u2980
 13086  001BD6                     u2981:
 13087  001BD6  FFFF               	dw	65535	; assembler added errata NOP
 13088  001BD8  EFF4  F00D         	goto	l885
 13089  001BDC                     u2980:
 13090  001BDC  FFFF               	dw	65535	; assembler added errata NOP
 13091  001BDE                     l3643:
 13092  001BDE  FFFF               	dw	65535	; assembler added errata NOP
 13093  001BE0  0E01               	movlw	1
 13094  001BE2  6E64               	movwf	___fladd@aexp^0,c
 13095  001BE4  EF00  F00E         	goto	l884
 13096  001BE8                     l885:
 13097  001BE8  FFFF               	dw	65535	; assembler added errata NOP
 13098  001BEA  A057               	btfss	___fladd@b^0,0,c
 13099  001BEC  EFFA  F00D         	goto	u2991
 13100  001BF0  EFFD  F00D         	goto	u2990
 13101  001BF4                     u2991:
 13102  001BF4  FFFF               	dw	65535	; assembler added errata NOP
 13103  001BF6  EF00  F00E         	goto	l884
 13104  001BFA                     u2990:
 13105  001BFA  FFFF               	dw	65535	; assembler added errata NOP
 13106  001BFC  EFEF  F00D         	goto	l3643
 13107  001C00                     l884:
 13108  001C00  FFFF               	dw	65535	; assembler added errata NOP
 13109  001C02  5064               	movf	___fladd@aexp^0,w,c
 13110  001C04  B4D8               	btfsc	status,2,c
 13111  001C06  EF07  F00E         	goto	u3001
 13112  001C0A  EF0A  F00E         	goto	u3000
 13113  001C0E                     u3001:
 13114  001C0E  FFFF               	dw	65535	; assembler added errata NOP
 13115  001C10  EF3A  F00E         	goto	l3655
 13116  001C14                     u3000:
 13117  001C14  FFFF               	dw	65535	; assembler added errata NOP
 13118  001C16  0E01               	movlw	1
 13119  001C18  2657               	addwf	___fladd@b^0,f,c
 13120  001C1A  0E00               	movlw	0
 13121  001C1C  2258               	addwfc	(___fladd@b+1)^0,f,c
 13122  001C1E  2259               	addwfc	(___fladd@b+2)^0,f,c
 13123  001C20  225A               	addwfc	(___fladd@b+3)^0,f,c
 13124  001C22  A05A               	btfss	(___fladd@b+3)^0,0,c
 13125  001C24  EF16  F00E         	goto	u3011
 13126  001C28  EF19  F00E         	goto	u3010
 13127  001C2C                     u3011:
 13128  001C2C  FFFF               	dw	65535	; assembler added errata NOP
 13129  001C2E  EF3A  F00E         	goto	l3655
 13130  001C32                     u3010:
 13131  001C32  FFFF               	dw	65535	; assembler added errata NOP
 13132  001C34  C057  F05F         	movff	___fladd@b,??___fladd
 13133  001C38  C058  F060         	movff	___fladd@b+1,??___fladd+1
 13134  001C3C  C059  F061         	movff	___fladd@b+2,??___fladd+2
 13135  001C40  C05A  F062         	movff	___fladd@b+3,??___fladd+3
 13136  001C44  3462               	rlcf	(??___fladd+3)^0,w,c
 13137  001C46  3262               	rrcf	(??___fladd+3)^0,f,c
 13138  001C48  3261               	rrcf	(??___fladd+2)^0,f,c
 13139  001C4A  3260               	rrcf	(??___fladd+1)^0,f,c
 13140  001C4C  325F               	rrcf	??___fladd^0,f,c
 13141  001C4E  C05F  F057         	movff	??___fladd,___fladd@b
 13142  001C52  C060  F058         	movff	??___fladd+1,___fladd@b+1
 13143  001C56  C061  F059         	movff	??___fladd+2,___fladd@b+2
 13144  001C5A  C062  F05A         	movff	??___fladd+3,___fladd@b+3
 13145  001C5E  2865               	incf	___fladd@bexp^0,w,c
 13146  001C60  B4D8               	btfsc	status,2,c
 13147  001C62  EF35  F00E         	goto	u3021
 13148  001C66  EF38  F00E         	goto	u3020
 13149  001C6A                     u3021:
 13150  001C6A  FFFF               	dw	65535	; assembler added errata NOP
 13151  001C6C  EF3A  F00E         	goto	l3655
 13152  001C70                     u3020:
 13153  001C70  FFFF               	dw	65535	; assembler added errata NOP
 13154  001C72  2A65               	incf	___fladd@bexp^0,f,c
 13155  001C74                     l3655:
 13156  001C74  FFFF               	dw	65535	; assembler added errata NOP
 13157  001C76  2865               	incf	___fladd@bexp^0,w,c
 13158  001C78  B4D8               	btfsc	status,2,c
 13159  001C7A  EF41  F00E         	goto	u3031
 13160  001C7E  EF44  F00E         	goto	u3030
 13161  001C82                     u3031:
 13162  001C82  FFFF               	dw	65535	; assembler added errata NOP
 13163  001C84  EF4E  F00E         	goto	l3659
 13164  001C88                     u3030:
 13165  001C88  FFFF               	dw	65535	; assembler added errata NOP
 13166  001C8A  5065               	movf	___fladd@bexp^0,w,c
 13167  001C8C  A4D8               	btfss	status,2,c
 13168  001C8E  EF4B  F00E         	goto	u3041
 13169  001C92  EF4E  F00E         	goto	u3040
 13170  001C96                     u3041:
 13171  001C96  FFFF               	dw	65535	; assembler added errata NOP
 13172  001C98  EF63  F00E         	goto	l3663
 13173  001C9C                     u3040:
 13174  001C9C                     l3659:
 13175  001C9C  FFFF               	dw	65535	; assembler added errata NOP
 13176  001C9E  0E00               	movlw	0
 13177  001CA0  6E57               	movwf	___fladd@b^0,c
 13178  001CA2  0E00               	movlw	0
 13179  001CA4  6E58               	movwf	(___fladd@b+1)^0,c
 13180  001CA6  0E00               	movlw	0
 13181  001CA8  6E59               	movwf	(___fladd@b+2)^0,c
 13182  001CAA  0E00               	movlw	0
 13183  001CAC  6E5A               	movwf	(___fladd@b+3)^0,c
 13184  001CAE  5065               	movf	___fladd@bexp^0,w,c
 13185  001CB0  A4D8               	btfss	status,2,c
 13186  001CB2  EF5D  F00E         	goto	u3051
 13187  001CB6  EF60  F00E         	goto	u3050
 13188  001CBA                     u3051:
 13189  001CBA  FFFF               	dw	65535	; assembler added errata NOP
 13190  001CBC  EF63  F00E         	goto	l3663
 13191  001CC0                     u3050:
 13192  001CC0  FFFF               	dw	65535	; assembler added errata NOP
 13193  001CC2  0E00               	movlw	0
 13194  001CC4  6E63               	movwf	___fladd@signs^0,c
 13195  001CC6                     l3663:
 13196  001CC6  FFFF               	dw	65535	; assembler added errata NOP
 13197  001CC8  A065               	btfss	___fladd@bexp^0,0,c
 13198  001CCA  EF69  F00E         	goto	u3061
 13199  001CCE  EF6C  F00E         	goto	u3060
 13200  001CD2                     u3061:
 13201  001CD2  FFFF               	dw	65535	; assembler added errata NOP
 13202  001CD4  EF70  F00E         	goto	l3667
 13203  001CD8                     u3060:
 13204  001CD8  FFFF               	dw	65535	; assembler added errata NOP
 13205  001CDA  8E59               	bsf	(___fladd@b+2)^0,7,c
 13206  001CDC  EF72  F00E         	goto	l3669
 13207  001CE0                     l3667:
 13208  001CE0  FFFF               	dw	65535	; assembler added errata NOP
 13209  001CE2  9E59               	bcf	(___fladd@b+2)^0,7,c
 13210  001CE4                     l3669:
 13211  001CE4  FFFF               	dw	65535	; assembler added errata NOP
 13212  001CE6  90D8               	bcf	status,0,c
 13213  001CE8  3065               	rrcf	___fladd@bexp^0,w,c
 13214  001CEA  6E5A               	movwf	(___fladd@b+3)^0,c
 13215  001CEC  AE63               	btfss	___fladd@signs^0,7,c
 13216  001CEE  EF7B  F00E         	goto	u3071
 13217  001CF2  EF7E  F00E         	goto	u3070
 13218  001CF6                     u3071:
 13219  001CF6  FFFF               	dw	65535	; assembler added errata NOP
 13220  001CF8  EF80  F00E         	goto	l3675
 13221  001CFC                     u3070:
 13222  001CFC  FFFF               	dw	65535	; assembler added errata NOP
 13223  001CFE  8E5A               	bsf	(___fladd@b+3)^0,7,c
 13224  001D00                     l3675:
 13225  001D00  FFFF               	dw	65535	; assembler added errata NOP
 13226  001D02  C057  F057         	movff	___fladd@b,?___fladd
 13227  001D06  C058  F058         	movff	___fladd@b+1,?___fladd+1
 13228  001D0A  C059  F059         	movff	___fladd@b+2,?___fladd+2
 13229  001D0E  C05A  F05A         	movff	___fladd@b+3,?___fladd+3
 13230  001D12                     l867:
 13231  001D12  FFFF               	dw	65535	; assembler added errata NOP
 13232  001D14  0012               	return		;funcret
 13233  001D16  FFFF               	dw	65535	; errata NOP
 13234  001D18                     __end_of___fladd:
 13235                           	opt callstack 0
 13236                           
 13237 ;; *************** function ___flneg *****************
 13238 ;; Defined at:
 13239 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flneg.c"
 13240 ;; Parameters:    Size  Location     Type
 13241 ;;  f1              4    0[COMRAM] unsigned char 
 13242 ;; Auto vars:     Size  Location     Type
 13243 ;;		None
 13244 ;; Return value:  Size  Location     Type
 13245 ;;                  4    0[COMRAM] unsigned char 
 13246 ;; Registers used:
 13247 ;;		wreg, status,2, status,0
 13248 ;; Tracked objects:
 13249 ;;		On entry : 0/0
 13250 ;;		On exit  : 0/0
 13251 ;;		Unchanged: 0/0
 13252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13253 ;;      Params:         4       0       0       0       0       0       0
 13254 ;;      Locals:         0       0       0       0       0       0       0
 13255 ;;      Temps:          0       0       0       0       0       0       0
 13256 ;;      Totals:         4       0       0       0       0       0       0
 13257 ;;Total ram usage:        4 bytes
 13258 ;; Hardware stack levels used:    1
 13259 ;; This function calls:
 13260 ;;		Nothing
 13261 ;; This function is called by:
 13262 ;;		_sprintf
 13263 ;;		_pow
 13264 ;;		_exp
 13265 ;; This function uses a non-reentrant model
 13266 ;;
 13267                           
 13268                           	psect	text30
 13269  006652                     __ptext30:
 13270                           	opt callstack 0
 13271  006652                     ___flneg:
 13272                           	opt callstack 0
 13273  006652  FFFF               	dw	65535	; assembler added errata NOP
 13274  006654  5001               	movf	___flneg@f1^0,w,c
 13275  006656  1002               	iorwf	(___flneg@f1+1)^0,w,c
 13276  006658  1003               	iorwf	(___flneg@f1+2)^0,w,c
 13277  00665A  1004               	iorwf	(___flneg@f1+3)^0,w,c
 13278  00665C  B4D8               	btfsc	status,2,c
 13279  00665E  EF33  F033         	goto	u4201
 13280  006662  EF36  F033         	goto	u4200
 13281  006666                     u4201:
 13282  006666  FFFF               	dw	65535	; assembler added errata NOP
 13283  006668  EF3F  F033         	goto	l4427
 13284  00666C                     u4200:
 13285  00666C  FFFF               	dw	65535	; assembler added errata NOP
 13286  00666E  0E00               	movlw	0
 13287  006670  1A01               	xorwf	___flneg@f1^0,f,c
 13288  006672  0E00               	movlw	0
 13289  006674  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 13290  006676  0E00               	movlw	0
 13291  006678  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 13292  00667A  0E80               	movlw	128
 13293  00667C  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 13294  00667E                     l4427:
 13295  00667E  FFFF               	dw	65535	; assembler added errata NOP
 13296  006680  C001  F001         	movff	___flneg@f1,?___flneg
 13297  006684  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 13298  006688  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 13299  00668C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 13300  006690  0012               	return		;funcret
 13301  006692  FFFF               	dw	65535	; errata NOP
 13302  006694                     __end_of___flneg:
 13303                           	opt callstack 0
 13304                           
 13305 ;; *************** function ___flge *****************
 13306 ;; Defined at:
 13307 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
 13308 ;; Parameters:    Size  Location     Type
 13309 ;;  ff1             4    0[COMRAM] unsigned char 
 13310 ;;  ff2             4    4[COMRAM] unsigned char 
 13311 ;; Auto vars:     Size  Location     Type
 13312 ;;		None
 13313 ;; Return value:  Size  Location     Type
 13314 ;;		None               void
 13315 ;; Registers used:
 13316 ;;		wreg, status,2, status,0
 13317 ;; Tracked objects:
 13318 ;;		On entry : 0/0
 13319 ;;		On exit  : 0/0
 13320 ;;		Unchanged: 0/0
 13321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13322 ;;      Params:         8       0       0       0       0       0       0
 13323 ;;      Locals:         0       0       0       0       0       0       0
 13324 ;;      Temps:          4       0       0       0       0       0       0
 13325 ;;      Totals:        12       0       0       0       0       0       0
 13326 ;;Total ram usage:       12 bytes
 13327 ;; Hardware stack levels used:    1
 13328 ;; This function calls:
 13329 ;;		Nothing
 13330 ;; This function is called by:
 13331 ;;		_sprintf
 13332 ;;		_pow
 13333 ;;		_exp
 13334 ;;		_floor
 13335 ;; This function uses a non-reentrant model
 13336 ;;
 13337                           
 13338                           	psect	text31
 13339  006EF2                     __ptext31:
 13340                           	opt callstack 0
 13341  006EF2                     ___flge:
 13342                           	opt callstack 0
 13343  006EF2  FFFF               	dw	65535	; assembler added errata NOP
 13344  006EF4  0E00               	movlw	0
 13345  006EF6  1401               	andwf	___flge@ff1^0,w,c
 13346  006EF8  6E09               	movwf	??___flge^0,c
 13347  006EFA  0E00               	movlw	0
 13348  006EFC  1402               	andwf	(___flge@ff1+1)^0,w,c
 13349  006EFE  6E0A               	movwf	(??___flge+1)^0,c
 13350  006F00  0E80               	movlw	128
 13351  006F02  1403               	andwf	(___flge@ff1+2)^0,w,c
 13352  006F04  6E0B               	movwf	(??___flge+2)^0,c
 13353  006F06  0E7F               	movlw	127
 13354  006F08  1404               	andwf	(___flge@ff1+3)^0,w,c
 13355  006F0A  6E0C               	movwf	(??___flge+3)^0,c
 13356  006F0C  5009               	movf	??___flge^0,w,c
 13357  006F0E  100A               	iorwf	(??___flge+1)^0,w,c
 13358  006F10  100B               	iorwf	(??___flge+2)^0,w,c
 13359  006F12  100C               	iorwf	(??___flge+3)^0,w,c
 13360  006F14  A4D8               	btfss	status,2,c
 13361  006F16  EF8F  F037         	goto	u3391
 13362  006F1A  EF92  F037         	goto	u3390
 13363  006F1E                     u3391:
 13364  006F1E  FFFF               	dw	65535	; assembler added errata NOP
 13365  006F20  EF9B  F037         	goto	l3893
 13366  006F24                     u3390:
 13367  006F24  FFFF               	dw	65535	; assembler added errata NOP
 13368  006F26  0E00               	movlw	0
 13369  006F28  6E01               	movwf	___flge@ff1^0,c
 13370  006F2A  0E00               	movlw	0
 13371  006F2C  6E02               	movwf	(___flge@ff1+1)^0,c
 13372  006F2E  0E00               	movlw	0
 13373  006F30  6E03               	movwf	(___flge@ff1+2)^0,c
 13374  006F32  0E00               	movlw	0
 13375  006F34  6E04               	movwf	(___flge@ff1+3)^0,c
 13376  006F36                     l3893:
 13377  006F36  FFFF               	dw	65535	; assembler added errata NOP
 13378  006F38  0E00               	movlw	0
 13379  006F3A  1405               	andwf	___flge@ff2^0,w,c
 13380  006F3C  6E09               	movwf	??___flge^0,c
 13381  006F3E  0E00               	movlw	0
 13382  006F40  1406               	andwf	(___flge@ff2+1)^0,w,c
 13383  006F42  6E0A               	movwf	(??___flge+1)^0,c
 13384  006F44  0E80               	movlw	128
 13385  006F46  1407               	andwf	(___flge@ff2+2)^0,w,c
 13386  006F48  6E0B               	movwf	(??___flge+2)^0,c
 13387  006F4A  0E7F               	movlw	127
 13388  006F4C  1408               	andwf	(___flge@ff2+3)^0,w,c
 13389  006F4E  6E0C               	movwf	(??___flge+3)^0,c
 13390  006F50  5009               	movf	??___flge^0,w,c
 13391  006F52  100A               	iorwf	(??___flge+1)^0,w,c
 13392  006F54  100B               	iorwf	(??___flge+2)^0,w,c
 13393  006F56  100C               	iorwf	(??___flge+3)^0,w,c
 13394  006F58  A4D8               	btfss	status,2,c
 13395  006F5A  EFB1  F037         	goto	u3401
 13396  006F5E  EFB4  F037         	goto	u3400
 13397  006F62                     u3401:
 13398  006F62  FFFF               	dw	65535	; assembler added errata NOP
 13399  006F64  EFBD  F037         	goto	l3897
 13400  006F68                     u3400:
 13401  006F68  FFFF               	dw	65535	; assembler added errata NOP
 13402  006F6A  0E00               	movlw	0
 13403  006F6C  6E05               	movwf	___flge@ff2^0,c
 13404  006F6E  0E00               	movlw	0
 13405  006F70  6E06               	movwf	(___flge@ff2+1)^0,c
 13406  006F72  0E00               	movlw	0
 13407  006F74  6E07               	movwf	(___flge@ff2+2)^0,c
 13408  006F76  0E00               	movlw	0
 13409  006F78  6E08               	movwf	(___flge@ff2+3)^0,c
 13410  006F7A                     l3897:
 13411  006F7A  FFFF               	dw	65535	; assembler added errata NOP
 13412  006F7C  AE04               	btfss	(___flge@ff1+3)^0,7,c
 13413  006F7E  EFC3  F037         	goto	u3411
 13414  006F82  EFC6  F037         	goto	u3410
 13415  006F86                     u3411:
 13416  006F86  FFFF               	dw	65535	; assembler added errata NOP
 13417  006F88  EFD0  F037         	goto	l3901
 13418  006F8C                     u3410:
 13419  006F8C  FFFF               	dw	65535	; assembler added errata NOP
 13420  006F8E  6C01               	negf	___flge@ff1^0,c
 13421  006F90  1E02               	comf	(___flge@ff1+1)^0,f,c
 13422  006F92  B0D8               	btfsc	status,0,c
 13423  006F94  2A02               	incf	(___flge@ff1+1)^0,f,c
 13424  006F96  1E03               	comf	(___flge@ff1+2)^0,f,c
 13425  006F98  B0D8               	btfsc	status,0,c
 13426  006F9A  2A03               	incf	(___flge@ff1+2)^0,f,c
 13427  006F9C  0E80               	movlw	128
 13428  006F9E  5604               	subfwb	(___flge@ff1+3)^0,f,c
 13429  006FA0                     l3901:
 13430  006FA0  FFFF               	dw	65535	; assembler added errata NOP
 13431  006FA2  AE08               	btfss	(___flge@ff2+3)^0,7,c
 13432  006FA4  EFD6  F037         	goto	u3421
 13433  006FA8  EFD9  F037         	goto	u3420
 13434  006FAC                     u3421:
 13435  006FAC  FFFF               	dw	65535	; assembler added errata NOP
 13436  006FAE  EFE3  F037         	goto	l586
 13437  006FB2                     u3420:
 13438  006FB2  FFFF               	dw	65535	; assembler added errata NOP
 13439  006FB4  6C05               	negf	___flge@ff2^0,c
 13440  006FB6  1E06               	comf	(___flge@ff2+1)^0,f,c
 13441  006FB8  B0D8               	btfsc	status,0,c
 13442  006FBA  2A06               	incf	(___flge@ff2+1)^0,f,c
 13443  006FBC  1E07               	comf	(___flge@ff2+2)^0,f,c
 13444  006FBE  B0D8               	btfsc	status,0,c
 13445  006FC0  2A07               	incf	(___flge@ff2+2)^0,f,c
 13446  006FC2  0E80               	movlw	128
 13447  006FC4  5608               	subfwb	(___flge@ff2+3)^0,f,c
 13448  006FC6                     l586:
 13449  006FC6  FFFF               	dw	65535	; assembler added errata NOP
 13450  006FC8  0E00               	movlw	0
 13451  006FCA  1A01               	xorwf	___flge@ff1^0,f,c
 13452  006FCC  0E00               	movlw	0
 13453  006FCE  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 13454  006FD0  0E00               	movlw	0
 13455  006FD2  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 13456  006FD4  0E80               	movlw	128
 13457  006FD6  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 13458  006FD8  0E00               	movlw	0
 13459  006FDA  1A05               	xorwf	___flge@ff2^0,f,c
 13460  006FDC  0E00               	movlw	0
 13461  006FDE  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 13462  006FE0  0E00               	movlw	0
 13463  006FE2  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 13464  006FE4  0E80               	movlw	128
 13465  006FE6  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 13466  006FE8  5005               	movf	___flge@ff2^0,w,c
 13467  006FEA  5C01               	subwf	___flge@ff1^0,w,c
 13468  006FEC  5006               	movf	(___flge@ff2+1)^0,w,c
 13469  006FEE  5802               	subwfb	(___flge@ff1+1)^0,w,c
 13470  006FF0  5007               	movf	(___flge@ff2+2)^0,w,c
 13471  006FF2  5803               	subwfb	(___flge@ff1+2)^0,w,c
 13472  006FF4  5008               	movf	(___flge@ff2+3)^0,w,c
 13473  006FF6  5804               	subwfb	(___flge@ff1+3)^0,w,c
 13474  006FF8  B0D8               	btfsc	status,0,c
 13475  006FFA  EF01  F038         	goto	u3431
 13476  006FFE  EF04  F038         	goto	u3430
 13477  007002                     u3431:
 13478  007002  FFFF               	dw	65535	; assembler added errata NOP
 13479  007004  EF08  F038         	goto	l3907
 13480  007008                     u3430:
 13481  007008  FFFF               	dw	65535	; assembler added errata NOP
 13482  00700A  90D8               	bcf	status,0,c
 13483  00700C  EF0A  F038         	goto	l587
 13484  007010                     l3907:
 13485  007010  FFFF               	dw	65535	; assembler added errata NOP
 13486  007012  80D8               	bsf	status,0,c
 13487  007014                     l587:
 13488  007014  FFFF               	dw	65535	; assembler added errata NOP
 13489  007016  0012               	return		;funcret
 13490  007018  FFFF               	dw	65535	; errata NOP
 13491  00701A                     __end_of___flge:
 13492                           	opt callstack 0
 13493                           
 13494 ;; *************** function ___fleq *****************
 13495 ;; Defined at:
 13496 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
 13497 ;; Parameters:    Size  Location     Type
 13498 ;;  ff1             4   28[COMRAM] unsigned char 
 13499 ;;  ff2             4   32[COMRAM] unsigned char 
 13500 ;; Auto vars:     Size  Location     Type
 13501 ;;		None
 13502 ;; Return value:  Size  Location     Type
 13503 ;;		None               void
 13504 ;; Registers used:
 13505 ;;		wreg, status,2, status,0
 13506 ;; Tracked objects:
 13507 ;;		On entry : 0/0
 13508 ;;		On exit  : 0/0
 13509 ;;		Unchanged: 0/0
 13510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13511 ;;      Params:         8       0       0       0       0       0       0
 13512 ;;      Locals:         0       0       0       0       0       0       0
 13513 ;;      Temps:          4       0       0       0       0       0       0
 13514 ;;      Totals:        12       0       0       0       0       0       0
 13515 ;;Total ram usage:       12 bytes
 13516 ;; Hardware stack levels used:    1
 13517 ;; This function calls:
 13518 ;;		Nothing
 13519 ;; This function is called by:
 13520 ;;		_sprintf
 13521 ;;		_pow
 13522 ;;		_exp
 13523 ;;		_frexp
 13524 ;;		_ldexp
 13525 ;;		_log
 13526 ;; This function uses a non-reentrant model
 13527 ;;
 13528                           
 13529                           	psect	text32
 13530  006A74                     __ptext32:
 13531                           	opt callstack 0
 13532  006A74                     ___fleq:
 13533                           	opt callstack 0
 13534  006A74  FFFF               	dw	65535	; assembler added errata NOP
 13535  006A76  0E00               	movlw	0
 13536  006A78  141D               	andwf	___fleq@ff1^0,w,c
 13537  006A7A  6E25               	movwf	??___fleq^0,c
 13538  006A7C  0E00               	movlw	0
 13539  006A7E  141E               	andwf	(___fleq@ff1+1)^0,w,c
 13540  006A80  6E26               	movwf	(??___fleq+1)^0,c
 13541  006A82  0E80               	movlw	128
 13542  006A84  141F               	andwf	(___fleq@ff1+2)^0,w,c
 13543  006A86  6E27               	movwf	(??___fleq+2)^0,c
 13544  006A88  0E7F               	movlw	127
 13545  006A8A  1420               	andwf	(___fleq@ff1+3)^0,w,c
 13546  006A8C  6E28               	movwf	(??___fleq+3)^0,c
 13547  006A8E  5025               	movf	??___fleq^0,w,c
 13548  006A90  1026               	iorwf	(??___fleq+1)^0,w,c
 13549  006A92  1027               	iorwf	(??___fleq+2)^0,w,c
 13550  006A94  1028               	iorwf	(??___fleq+3)^0,w,c
 13551  006A96  A4D8               	btfss	status,2,c
 13552  006A98  EF50  F035         	goto	u2661
 13553  006A9C  EF53  F035         	goto	u2660
 13554  006AA0                     u2661:
 13555  006AA0  FFFF               	dw	65535	; assembler added errata NOP
 13556  006AA2  EF5C  F035         	goto	l3459
 13557  006AA6                     u2660:
 13558  006AA6  FFFF               	dw	65535	; assembler added errata NOP
 13559  006AA8  0E00               	movlw	0
 13560  006AAA  6E1D               	movwf	___fleq@ff1^0,c
 13561  006AAC  0E00               	movlw	0
 13562  006AAE  6E1E               	movwf	(___fleq@ff1+1)^0,c
 13563  006AB0  0E00               	movlw	0
 13564  006AB2  6E1F               	movwf	(___fleq@ff1+2)^0,c
 13565  006AB4  0E00               	movlw	0
 13566  006AB6  6E20               	movwf	(___fleq@ff1+3)^0,c
 13567  006AB8                     l3459:
 13568  006AB8  FFFF               	dw	65535	; assembler added errata NOP
 13569  006ABA  0E00               	movlw	0
 13570  006ABC  1421               	andwf	___fleq@ff2^0,w,c
 13571  006ABE  6E25               	movwf	??___fleq^0,c
 13572  006AC0  0E00               	movlw	0
 13573  006AC2  1422               	andwf	(___fleq@ff2+1)^0,w,c
 13574  006AC4  6E26               	movwf	(??___fleq+1)^0,c
 13575  006AC6  0E80               	movlw	128
 13576  006AC8  1423               	andwf	(___fleq@ff2+2)^0,w,c
 13577  006ACA  6E27               	movwf	(??___fleq+2)^0,c
 13578  006ACC  0E7F               	movlw	127
 13579  006ACE  1424               	andwf	(___fleq@ff2+3)^0,w,c
 13580  006AD0  6E28               	movwf	(??___fleq+3)^0,c
 13581  006AD2  5025               	movf	??___fleq^0,w,c
 13582  006AD4  1026               	iorwf	(??___fleq+1)^0,w,c
 13583  006AD6  1027               	iorwf	(??___fleq+2)^0,w,c
 13584  006AD8  1028               	iorwf	(??___fleq+3)^0,w,c
 13585  006ADA  A4D8               	btfss	status,2,c
 13586  006ADC  EF72  F035         	goto	u2671
 13587  006AE0  EF75  F035         	goto	u2670
 13588  006AE4                     u2671:
 13589  006AE4  FFFF               	dw	65535	; assembler added errata NOP
 13590  006AE6  EF7E  F035         	goto	l3463
 13591  006AEA                     u2670:
 13592  006AEA  FFFF               	dw	65535	; assembler added errata NOP
 13593  006AEC  0E00               	movlw	0
 13594  006AEE  6E21               	movwf	___fleq@ff2^0,c
 13595  006AF0  0E00               	movlw	0
 13596  006AF2  6E22               	movwf	(___fleq@ff2+1)^0,c
 13597  006AF4  0E00               	movlw	0
 13598  006AF6  6E23               	movwf	(___fleq@ff2+2)^0,c
 13599  006AF8  0E00               	movlw	0
 13600  006AFA  6E24               	movwf	(___fleq@ff2+3)^0,c
 13601  006AFC                     l3463:
 13602  006AFC  FFFF               	dw	65535	; assembler added errata NOP
 13603  006AFE  5021               	movf	___fleq@ff2^0,w,c
 13604  006B00  181D               	xorwf	___fleq@ff1^0,w,c
 13605  006B02  E110               	bnz	u2680
 13606  006B04  5022               	movf	(___fleq@ff2+1)^0,w,c
 13607  006B06  181E               	xorwf	(___fleq@ff1+1)^0,w,c
 13608  006B08  E10D               	bnz	u2680
 13609  006B0A  5023               	movf	(___fleq@ff2+2)^0,w,c
 13610  006B0C  181F               	xorwf	(___fleq@ff1+2)^0,w,c
 13611  006B0E  E10A               	bnz	u2680
 13612  006B10  5024               	movf	(___fleq@ff2+3)^0,w,c
 13613  006B12  1820               	xorwf	(___fleq@ff1+3)^0,w,c
 13614  006B14  B4D8               	btfsc	status,2,c
 13615  006B16  EF8F  F035         	goto	u2681
 13616  006B1A  EF92  F035         	goto	u2680
 13617  006B1E                     u2681:
 13618  006B1E  FFFF               	dw	65535	; assembler added errata NOP
 13619  006B20  EF96  F035         	goto	l3467
 13620  006B24                     u2680:
 13621  006B24  FFFF               	dw	65535	; assembler added errata NOP
 13622  006B26  90D8               	bcf	status,0,c
 13623  006B28  EF98  F035         	goto	l580
 13624  006B2C                     l3467:
 13625  006B2C  FFFF               	dw	65535	; assembler added errata NOP
 13626  006B2E  80D8               	bsf	status,0,c
 13627  006B30                     l580:
 13628  006B30  FFFF               	dw	65535	; assembler added errata NOP
 13629  006B32  0012               	return		;funcret
 13630  006B34  FFFF               	dw	65535	; errata NOP
 13631  006B36                     __end_of___fleq:
 13632                           	opt callstack 0
 13633                           
 13634 ;; *************** function _ins_LCD *****************
 13635 ;; Defined at:
 13636 ;;		line 454 in file "CalculadoraLCD.c"
 13637 ;; Parameters:    Size  Location     Type
 13638 ;;  dato            1    wreg     unsigned char 
 13639 ;; Auto vars:     Size  Location     Type
 13640 ;;  dato            1    1[COMRAM] unsigned char 
 13641 ;; Return value:  Size  Location     Type
 13642 ;;                  1    wreg      void 
 13643 ;; Registers used:
 13644 ;;		wreg, cstack
 13645 ;; Tracked objects:
 13646 ;;		On entry : 0/0
 13647 ;;		On exit  : 0/0
 13648 ;;		Unchanged: 0/0
 13649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13650 ;;      Params:         0       0       0       0       0       0       0
 13651 ;;      Locals:         1       0       0       0       0       0       0
 13652 ;;      Temps:          1       0       0       0       0       0       0
 13653 ;;      Totals:         2       0       0       0       0       0       0
 13654 ;;Total ram usage:        2 bytes
 13655 ;; Hardware stack levels used:    1
 13656 ;; Hardware stack levels required when called:    1
 13657 ;; This function calls:
 13658 ;;		_enable
 13659 ;; This function is called by:
 13660 ;;		_main
 13661 ;;		_nombresbaby
 13662 ;; This function uses a non-reentrant model
 13663 ;;
 13664                           
 13665                           	psect	text33
 13666  006528                     __ptext33:
 13667                           	opt callstack 0
 13668  006528                     _ins_LCD:
 13669                           	opt callstack 0
 13670  006528  FFFF               	dw	65535	; assembler added errata NOP
 13671                           
 13672                           ;incstack = 0
 13673                           ;ins_LCD@dato stored from wreg
 13674  00652A  6E02               	movwf	ins_LCD@dato^0,c
 13675  00652C                     
 13676                           ;CalculadoraLCD.c: 455: RE0 = 0;
 13677  00652C  9084               	bcf	3972,0,c	;volatile
 13678  00652E                     
 13679                           ;CalculadoraLCD.c: 456: PORTD = dato;
 13680  00652E  C002  FF83         	movff	ins_LCD@dato,3971	;volatile
 13681  006532                     
 13682                           ;CalculadoraLCD.c: 457: enable();
 13683  006532  EC8A  F032         	call	_enable	;wreg free
 13684  006536                     
 13685                           ;CalculadoraLCD.c: 458: _delay((unsigned long)((2)*(4000000/4000.0)));
 13686  006536  0E02               	movlw	2
 13687  006538  6E01               	movwf	??_ins_LCD^0,c
 13688  00653A  0EF2               	movlw	242
 13689  00653C                     u5437:
 13690  00653C  FFFF               	dw	65535	; errata NOP
 13691  00653E  2EE8               	decfsz	wreg,f,c
 13692  006540  D7FD               	bra	u5437
 13693  006542  2E01               	decfsz	??_ins_LCD^0,f,c
 13694  006544  D7FB               	bra	u5437
 13695  006546  D000               	nop2	
 13696  006548  0012               	return		;funcret
 13697  00654A  FFFF               	dw	65535	; errata NOP
 13698  00654C                     __end_of_ins_LCD:
 13699                           	opt callstack 0
 13700                           
 13701 ;; *************** function _ini_LCD *****************
 13702 ;; Defined at:
 13703 ;;		line 404 in file "CalculadoraLCD.c"
 13704 ;; Parameters:    Size  Location     Type
 13705 ;;		None
 13706 ;; Auto vars:     Size  Location     Type
 13707 ;;		None
 13708 ;; Return value:  Size  Location     Type
 13709 ;;                  1    wreg      void 
 13710 ;; Registers used:
 13711 ;;		wreg, status,2, cstack
 13712 ;; Tracked objects:
 13713 ;;		On entry : 0/0
 13714 ;;		On exit  : 0/0
 13715 ;;		Unchanged: 0/0
 13716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13717 ;;      Params:         0       0       0       0       0       0       0
 13718 ;;      Locals:         0       0       0       0       0       0       0
 13719 ;;      Temps:          1       0       0       0       0       0       0
 13720 ;;      Totals:         1       0       0       0       0       0       0
 13721 ;;Total ram usage:        1 bytes
 13722 ;; Hardware stack levels used:    1
 13723 ;; Hardware stack levels required when called:    1
 13724 ;; This function calls:
 13725 ;;		_enable
 13726 ;; This function is called by:
 13727 ;;		_main
 13728 ;; This function uses a non-reentrant model
 13729 ;;
 13730                           
 13731                           	psect	text34
 13732  006720                     __ptext34:
 13733                           	opt callstack 0
 13734  006720                     _ini_LCD:
 13735                           	opt callstack 0
 13736  006720  FFFF               	dw	65535	; assembler added errata NOP
 13737  006722                     
 13738                           ;CalculadoraLCD.c: 405: _delay((unsigned long)((20)*(4000000/4000.0)));
 13739  006722  0E14               	movlw	20
 13740  006724  6E01               	movwf	??_ini_LCD^0,c
 13741  006726  0E7D               	movlw	125
 13742  006728                     u5447:
 13743  006728  FFFF               	dw	65535	; errata NOP
 13744  00672A  2EE8               	decfsz	wreg,f,c
 13745  00672C  D7FD               	bra	u5447
 13746  00672E  2E01               	decfsz	??_ini_LCD^0,f,c
 13747  006730  D7FB               	bra	u5447
 13748  006732  D000               	nop2	
 13749  006734                     
 13750                           ;CalculadoraLCD.c: 406: PORTD = 0x30;
 13751  006734  0E30               	movlw	48
 13752  006736  6E83               	movwf	131,c	;volatile
 13753  006738                     
 13754                           ;CalculadoraLCD.c: 407: enable();
 13755  006738  EC8A  F032         	call	_enable	;wreg free
 13756  00673C                     
 13757                           ;CalculadoraLCD.c: 409: _delay((unsigned long)((5)*(4000000/4000.0)));
 13758  00673C  0E05               	movlw	5
 13759  00673E  6E01               	movwf	??_ini_LCD^0,c
 13760  006740  0EDF               	movlw	223
 13761  006742                     u5457:
 13762  006742  FFFF               	dw	65535	; errata NOP
 13763  006744  2EE8               	decfsz	wreg,f,c
 13764  006746  D7FD               	bra	u5457
 13765  006748  2E01               	decfsz	??_ini_LCD^0,f,c
 13766  00674A  D7FB               	bra	u5457
 13767  00674C                     
 13768                           ;CalculadoraLCD.c: 410: PORTD = 0x30;
 13769  00674C  0E30               	movlw	48
 13770  00674E  6E83               	movwf	131,c	;volatile
 13771                           
 13772                           ;CalculadoraLCD.c: 411: enable();
 13773  006750  EC8A  F032         	call	_enable	;wreg free
 13774  006754                     
 13775                           ;CalculadoraLCD.c: 413: _delay((unsigned long)((1)*(4000000/4000.0)));
 13776  006754  0EC8               	movlw	200
 13777  006756                     u5467:
 13778  006756  FFFF               	dw	65535	; errata NOP
 13779  006758  F000               	nop	
 13780  00675A  2EE8               	decfsz	wreg,f,c
 13781  00675C  D7FC               	bra	u5467
 13782  00675E                     
 13783                           ;CalculadoraLCD.c: 414: PORTD = 0x30;
 13784  00675E  0E30               	movlw	48
 13785  006760  6E83               	movwf	131,c	;volatile
 13786  006762                     
 13787                           ;CalculadoraLCD.c: 415: enable();
 13788  006762  EC8A  F032         	call	_enable	;wreg free
 13789  006766                     
 13790                           ;CalculadoraLCD.c: 417: PORTD = 0b00111000;
 13791  006766  0E38               	movlw	56
 13792  006768  6E83               	movwf	131,c	;volatile
 13793  00676A                     
 13794                           ;CalculadoraLCD.c: 418: enable();
 13795  00676A  EC8A  F032         	call	_enable	;wreg free
 13796  00676E                     
 13797                           ;CalculadoraLCD.c: 420: PORTD = 0b00001000;
 13798  00676E  0E08               	movlw	8
 13799  006770  6E83               	movwf	131,c	;volatile
 13800  006772                     
 13801                           ;CalculadoraLCD.c: 421: enable();
 13802  006772  EC8A  F032         	call	_enable	;wreg free
 13803  006776                     
 13804                           ;CalculadoraLCD.c: 423: PORTD = 0b00000001;
 13805  006776  0E01               	movlw	1
 13806  006778  6E83               	movwf	131,c	;volatile
 13807  00677A                     
 13808                           ;CalculadoraLCD.c: 424: enable();
 13809  00677A  EC8A  F032         	call	_enable	;wreg free
 13810  00677E                     
 13811                           ;CalculadoraLCD.c: 426: PORTD = 0b00000110;
 13812  00677E  0E06               	movlw	6
 13813  006780  6E83               	movwf	131,c	;volatile
 13814  006782                     
 13815                           ;CalculadoraLCD.c: 427: enable();
 13816  006782  EC8A  F032         	call	_enable	;wreg free
 13817  006786                     
 13818                           ;CalculadoraLCD.c: 429: PORTD = 0b00001110;
 13819  006786  0E0E               	movlw	14
 13820  006788  6E83               	movwf	131,c	;volatile
 13821  00678A                     
 13822                           ;CalculadoraLCD.c: 430: enable();
 13823  00678A  EC8A  F032         	call	_enable	;wreg free
 13824  00678E  0012               	return		;funcret
 13825  006790  FFFF               	dw	65535	; errata NOP
 13826  006792                     __end_of_ini_LCD:
 13827                           	opt callstack 0
 13828                           
 13829 ;; *************** function _enable *****************
 13830 ;; Defined at:
 13831 ;;		line 437 in file "CalculadoraLCD.c"
 13832 ;; Parameters:    Size  Location     Type
 13833 ;;		None
 13834 ;; Auto vars:     Size  Location     Type
 13835 ;;		None
 13836 ;; Return value:  Size  Location     Type
 13837 ;;                  1    wreg      void 
 13838 ;; Registers used:
 13839 ;;		wreg
 13840 ;; Tracked objects:
 13841 ;;		On entry : 0/0
 13842 ;;		On exit  : 0/0
 13843 ;;		Unchanged: 0/0
 13844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13845 ;;      Params:         0       0       0       0       0       0       0
 13846 ;;      Locals:         0       0       0       0       0       0       0
 13847 ;;      Temps:          0       0       0       0       0       0       0
 13848 ;;      Totals:         0       0       0       0       0       0       0
 13849 ;;Total ram usage:        0 bytes
 13850 ;; Hardware stack levels used:    1
 13851 ;; This function calls:
 13852 ;;		Nothing
 13853 ;; This function is called by:
 13854 ;;		_ini_LCD
 13855 ;;		_dato_LCD
 13856 ;;		_ins_LCD
 13857 ;; This function uses a non-reentrant model
 13858 ;;
 13859                           
 13860                           	psect	text35
 13861  006514                     __ptext35:
 13862                           	opt callstack 0
 13863  006514                     _enable:
 13864                           	opt callstack 0
 13865  006514  FFFF               	dw	65535	; assembler added errata NOP
 13866  006516                     
 13867                           ;CalculadoraLCD.c: 438: RE2 = 1;
 13868  006516  8484               	bsf	3972,2,c	;volatile
 13869  006518                     
 13870                           ;CalculadoraLCD.c: 439: _delay((unsigned long)((1)*(4000000/4000.0)));
 13871  006518  0EC8               	movlw	200
 13872  00651A                     u5477:
 13873  00651A  FFFF               	dw	65535	; errata NOP
 13874  00651C  F000               	nop	
 13875  00651E  2EE8               	decfsz	wreg,f,c
 13876  006520  D7FC               	bra	u5477
 13877  006522                     
 13878                           ;CalculadoraLCD.c: 440: RE2 = 0;
 13879  006522  9484               	bcf	3972,2,c	;volatile
 13880  006524  0012               	return		;funcret
 13881  006526  FFFF               	dw	65535	; errata NOP
 13882  006528                     __end_of_enable:
 13883                           	opt callstack 0
 13884                           
 13885 ;; *************** function _conf_puertos *****************
 13886 ;; Defined at:
 13887 ;;		line 381 in file "CalculadoraLCD.c"
 13888 ;; Parameters:    Size  Location     Type
 13889 ;;		None
 13890 ;; Auto vars:     Size  Location     Type
 13891 ;;		None
 13892 ;; Return value:  Size  Location     Type
 13893 ;;                  1    wreg      void 
 13894 ;; Registers used:
 13895 ;;		wreg, status,2
 13896 ;; Tracked objects:
 13897 ;;		On entry : 0/0
 13898 ;;		On exit  : 0/0
 13899 ;;		Unchanged: 0/0
 13900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13901 ;;      Params:         0       0       0       0       0       0       0
 13902 ;;      Locals:         0       0       0       0       0       0       0
 13903 ;;      Temps:          0       0       0       0       0       0       0
 13904 ;;      Totals:         0       0       0       0       0       0       0
 13905 ;;Total ram usage:        0 bytes
 13906 ;; Hardware stack levels used:    1
 13907 ;; This function calls:
 13908 ;;		Nothing
 13909 ;; This function is called by:
 13910 ;;		_main
 13911 ;; This function uses a non-reentrant model
 13912 ;;
 13913                           
 13914                           	psect	text36
 13915  00659A                     __ptext36:
 13916                           	opt callstack 0
 13917  00659A                     _conf_puertos:
 13918                           	opt callstack 0
 13919  00659A  FFFF               	dw	65535	; assembler added errata NOP
 13920  00659C                     
 13921                           ;CalculadoraLCD.c: 383: TRISB = 0xFF;
 13922  00659C  6893               	setf	147,c	;volatile
 13923  00659E                     
 13924                           ;CalculadoraLCD.c: 384: LATB = 0;
 13925  00659E  0E00               	movlw	0
 13926  0065A0  6E8A               	movwf	138,c	;volatile
 13927                           
 13928                           ;CalculadoraLCD.c: 385: PORTB = 0;
 13929  0065A2  0E00               	movlw	0
 13930  0065A4  6E81               	movwf	129,c	;volatile
 13931  0065A6                     
 13932                           ;CalculadoraLCD.c: 387: TRISA = 0xFF;
 13933  0065A6  6892               	setf	146,c	;volatile
 13934                           
 13935                           ;CalculadoraLCD.c: 388: LATA = 0;
 13936  0065A8  0E00               	movlw	0
 13937  0065AA  6E89               	movwf	137,c	;volatile
 13938                           
 13939                           ;CalculadoraLCD.c: 389: PORTA = 0;
 13940  0065AC  0E00               	movlw	0
 13941  0065AE  6E80               	movwf	128,c	;volatile
 13942                           
 13943                           ;CalculadoraLCD.c: 390: ADCON1 = 0x06;
 13944  0065B0  0E06               	movlw	6
 13945  0065B2  6EC1               	movwf	193,c	;volatile
 13946                           
 13947                           ;CalculadoraLCD.c: 392: TRISD = 0x00;
 13948  0065B4  0E00               	movlw	0
 13949  0065B6  6E95               	movwf	149,c	;volatile
 13950                           
 13951                           ;CalculadoraLCD.c: 393: LATD = 0;
 13952  0065B8  0E00               	movlw	0
 13953  0065BA  6E8C               	movwf	140,c	;volatile
 13954                           
 13955                           ;CalculadoraLCD.c: 394: PORTD = 0;
 13956  0065BC  0E00               	movlw	0
 13957  0065BE  6E83               	movwf	131,c	;volatile
 13958                           
 13959                           ;CalculadoraLCD.c: 396: TRISE = 0x00;
 13960  0065C0  0E00               	movlw	0
 13961  0065C2  6E96               	movwf	150,c	;volatile
 13962                           
 13963                           ;CalculadoraLCD.c: 397: LATE = 0x00;
 13964  0065C4  0E00               	movlw	0
 13965  0065C6  6E8D               	movwf	141,c	;volatile
 13966                           
 13967                           ;CalculadoraLCD.c: 398: PORTE = 0x00;
 13968  0065C8  0E00               	movlw	0
 13969  0065CA  6E84               	movwf	132,c	;volatile
 13970                           
 13971                           ;CalculadoraLCD.c: 399: ADCON1 = 0x06;
 13972  0065CC  0E06               	movlw	6
 13973  0065CE  6EC1               	movwf	193,c	;volatile
 13974  0065D0  0012               	return		;funcret
 13975  0065D2  FFFF               	dw	65535	; errata NOP
 13976  0065D4                     __end_of_conf_puertos:
 13977                           	opt callstack 0
 13978                           
 13979 ;; *************** function ___lbdiv *****************
 13980 ;; Defined at:
 13981 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbdiv.c"
 13982 ;; Parameters:    Size  Location     Type
 13983 ;;  dividend        1    wreg     unsigned char 
 13984 ;;  divisor         1    0[COMRAM] unsigned char 
 13985 ;; Auto vars:     Size  Location     Type
 13986 ;;  dividend        1    1[COMRAM] unsigned char 
 13987 ;;  quotient        1    3[COMRAM] unsigned char 
 13988 ;;  counter         1    2[COMRAM] unsigned char 
 13989 ;; Return value:  Size  Location     Type
 13990 ;;                  1    wreg      unsigned char 
 13991 ;; Registers used:
 13992 ;;		wreg, status,2, status,0
 13993 ;; Tracked objects:
 13994 ;;		On entry : 0/0
 13995 ;;		On exit  : 0/0
 13996 ;;		Unchanged: 0/0
 13997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13998 ;;      Params:         1       0       0       0       0       0       0
 13999 ;;      Locals:         3       0       0       0       0       0       0
 14000 ;;      Temps:          0       0       0       0       0       0       0
 14001 ;;      Totals:         4       0       0       0       0       0       0
 14002 ;;Total ram usage:        4 bytes
 14003 ;; Hardware stack levels used:    1
 14004 ;; This function calls:
 14005 ;;		Nothing
 14006 ;; This function is called by:
 14007 ;;		_main
 14008 ;; This function uses a non-reentrant model
 14009 ;;
 14010                           
 14011                           	psect	text37
 14012  006792                     __ptext37:
 14013                           	opt callstack 0
 14014  006792                     ___lbdiv:
 14015                           	opt callstack 0
 14016  006792  FFFF               	dw	65535	; assembler added errata NOP
 14017                           
 14018                           ;incstack = 0
 14019                           ;___lbdiv@dividend stored from wreg
 14020  006794  6E02               	movwf	___lbdiv@dividend^0,c
 14021  006796  0E00               	movlw	0
 14022  006798  6E04               	movwf	___lbdiv@quotient^0,c
 14023  00679A  5001               	movf	___lbdiv@divisor^0,w,c
 14024  00679C  B4D8               	btfsc	status,2,c
 14025  00679E  EFD3  F033         	goto	u4861
 14026  0067A2  EFD6  F033         	goto	u4860
 14027  0067A6                     u4861:
 14028  0067A6  FFFF               	dw	65535	; assembler added errata NOP
 14029  0067A8  EF00  F034         	goto	l5063
 14030  0067AC                     u4860:
 14031  0067AC  FFFF               	dw	65535	; assembler added errata NOP
 14032  0067AE  0E01               	movlw	1
 14033  0067B0  6E03               	movwf	___lbdiv@counter^0,c
 14034  0067B2  EFDF  F033         	goto	l5051
 14035  0067B6                     l5047:
 14036  0067B6  FFFF               	dw	65535	; assembler added errata NOP
 14037  0067B8  90D8               	bcf	status,0,c
 14038  0067BA  3601               	rlcf	___lbdiv@divisor^0,f,c
 14039  0067BC  2A03               	incf	___lbdiv@counter^0,f,c
 14040  0067BE                     l5051:
 14041  0067BE  FFFF               	dw	65535	; assembler added errata NOP
 14042  0067C0  AE01               	btfss	___lbdiv@divisor^0,7,c
 14043  0067C2  EFE5  F033         	goto	u4871
 14044  0067C6  EFE8  F033         	goto	u4870
 14045  0067CA                     u4871:
 14046  0067CA  FFFF               	dw	65535	; assembler added errata NOP
 14047  0067CC  EFDB  F033         	goto	l5047
 14048  0067D0                     u4870:
 14049  0067D0  FFFF               	dw	65535	; assembler added errata NOP
 14050  0067D2                     l5053:
 14051  0067D2  FFFF               	dw	65535	; assembler added errata NOP
 14052  0067D4  90D8               	bcf	status,0,c
 14053  0067D6  3604               	rlcf	___lbdiv@quotient^0,f,c
 14054  0067D8  5001               	movf	___lbdiv@divisor^0,w,c
 14055  0067DA  5C02               	subwf	___lbdiv@dividend^0,w,c
 14056  0067DC  A0D8               	btfss	status,0,c
 14057  0067DE  EFF3  F033         	goto	u4881
 14058  0067E2  EFF6  F033         	goto	u4880
 14059  0067E6                     u4881:
 14060  0067E6  FFFF               	dw	65535	; assembler added errata NOP
 14061  0067E8  EFFA  F033         	goto	l5059
 14062  0067EC                     u4880:
 14063  0067EC  FFFF               	dw	65535	; assembler added errata NOP
 14064  0067EE  5001               	movf	___lbdiv@divisor^0,w,c
 14065  0067F0  5E02               	subwf	___lbdiv@dividend^0,f,c
 14066  0067F2  8004               	bsf	___lbdiv@quotient^0,0,c
 14067  0067F4                     l5059:
 14068  0067F4  FFFF               	dw	65535	; assembler added errata NOP
 14069  0067F6  90D8               	bcf	status,0,c
 14070  0067F8  3201               	rrcf	___lbdiv@divisor^0,f,c
 14071  0067FA  2E03               	decfsz	___lbdiv@counter^0,f,c
 14072  0067FC  EFE9  F033         	goto	l5053
 14073  006800                     l5063:
 14074  006800  FFFF               	dw	65535	; assembler added errata NOP
 14075  006802  5004               	movf	___lbdiv@quotient^0,w,c
 14076  006804  0012               	return		;funcret
 14077  006806  FFFF               	dw	65535	; errata NOP
 14078  006808                     __end_of___lbdiv:
 14079                           	opt callstack 0
 14080                           
 14081                           	psect	rparam
 14082  0000                     tosu	equ	0xFFF
 14083                           tosh	equ	0xFFE
 14084                           tosl	equ	0xFFD
 14085                           stkptr	equ	0xFFC
 14086                           pclatu	equ	0xFFB
 14087                           pclath	equ	0xFFA
 14088                           pcl	equ	0xFF9
 14089                           tblptru	equ	0xFF8
 14090                           tblptrh	equ	0xFF7
 14091                           tblptrl	equ	0xFF6
 14092                           tablat	equ	0xFF5
 14093                           prodh	equ	0xFF4
 14094                           prodl	equ	0xFF3
 14095                           indf0	equ	0xFEF
 14096                           postinc0	equ	0xFEE
 14097                           postdec0	equ	0xFED
 14098                           preinc0	equ	0xFEC
 14099                           plusw0	equ	0xFEB
 14100                           fsr0h	equ	0xFEA
 14101                           fsr0l	equ	0xFE9
 14102                           wreg	equ	0xFE8
 14103                           indf1	equ	0xFE7
 14104                           postinc1	equ	0xFE6
 14105                           postdec1	equ	0xFE5
 14106                           preinc1	equ	0xFE4
 14107                           plusw1	equ	0xFE3
 14108                           fsr1h	equ	0xFE2
 14109                           fsr1l	equ	0xFE1
 14110                           bsr	equ	0xFE0
 14111                           indf2	equ	0xFDF
 14112                           postinc2	equ	0xFDE
 14113                           postdec2	equ	0xFDD
 14114                           preinc2	equ	0xFDC
 14115                           plusw2	equ	0xFDB
 14116                           fsr2h	equ	0xFDA
 14117                           fsr2l	equ	0xFD9
 14118                           status	equ	0xFD8


Data Sizes:
    Strings     389
    Constant    220
    Data        5
    BSS         109
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    126     126
    BANK0           128     61     126
    BANK1           256      0      49
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 40
		 -> log@coeff(CODE[36]), exp@coeff(CODE[40]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(COMRAM[2]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_72(CODE[2]), STR_71(CODE[2]), STR_70(CODE[3]), STR_69(CODE[2]), 
		 -> STR_68(CODE[2]), STR_67(CODE[2]), STR_66(CODE[2]), STR_65(CODE[2]), 
		 -> STR_64(CODE[2]), STR_63(CODE[2]), STR_62(CODE[2]), STR_61(CODE[2]), 
		 -> STR_60(CODE[2]), STR_59(CODE[2]), STR_58(CODE[2]), STR_57(CODE[2]), 
		 -> STR_56(CODE[2]), STR_55(CODE[2]), STR_54(CODE[2]), STR_53(CODE[2]), 
		 -> STR_52(CODE[2]), STR_51(CODE[2]), STR_50(CODE[2]), STR_49(CODE[2]), 
		 -> STR_48(CODE[2]), STR_47(CODE[22]), STR_46(CODE[22]), STR_45(CODE[5]), 
		 -> STR_44(CODE[13]), STR_43(CODE[10]), STR_42(CODE[14]), STR_41(CODE[8]), 
		 -> STR_40(CODE[15]), STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), 
		 -> STR_36(CODE[22]), STR_35(CODE[17]), STR_34(CODE[11]), STR_33(CODE[11]), 
		 -> STR_32(CODE[17]), STR_31(CODE[11]), STR_30(CODE[11]), STR_29(CODE[17]), 
		 -> STR_28(CODE[11]), STR_27(CODE[11]), STR_26(CODE[17]), STR_25(CODE[11]), 
		 -> STR_24(CODE[11]), STR_23(CODE[17]), STR_22(CODE[11]), STR_21(CODE[11]), 
		 -> STR_20(CODE[17]), STR_19(CODE[11]), STR_18(CODE[11]), STR_17(CODE[15]), 
		 -> STR_16(CODE[14]), STR_15(CODE[5]), STR_14(CODE[3]), STR_13(CODE[14]), 
		 -> STR_12(CODE[5]), STR_11(CODE[3]), STR_10(CODE[15]), STR_9(CODE[5]), 
		 -> STR_8(CODE[3]), STR_7(CODE[15]), STR_6(CODE[5]), STR_5(CODE[3]), 
		 -> STR_4(CODE[14]), STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 40
		 -> buffer(BANK1[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 


Critical Paths under _main in COMRAM

    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___fladd
    _frexp->___fleq
    _eval_poly->___fladd
    _nombresbaby->_sprintf
    _write_LCD->_dato_LCD
    _sprintf->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->_frexp
    ___xxtofl->___awdiv
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fleq->___xxtofl

Critical Paths under _main in BANK0

    _main->_sprintf
    _pow->_exp
    _nombresbaby->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0  180051
                                             47 BANK0     14    14      0
                            ___awdiv
                            ___fltol
                            ___lbdiv
                           ___xxtofl
                       _conf_puertos
                            _ini_LCD
                            _ins_LCD
                        _nombresbaby
                                _pow
                            _sprintf
                          _write_LCD
 ---------------------------------------------------------------------------------
 (1) _pow                                                 21    13      8   66404
                                             11 BANK0     21    13      8
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     2      4   21452
                                            118 COMRAM     6     2      4
                            ___fladd
                             ___fleq
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _exp                                                 11     7      4   34459
                                              0 BANK0     11     7      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (3) _ldexp                                                8     2      6    2262
                                            118 COMRAM     8     2      6
                             ___fleq
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (3) _floor                                               10     6      4    8752
                                            102 COMRAM    10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                8     2      6    2390
                                             40 COMRAM     8     2      6
                             ___fleq
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           16     8      8    8262
                                            102 COMRAM    16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1399
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _nombresbaby                                          2     2      0   53573
                                            114 COMRAM     2     2      0
                            _ins_LCD
                            _sprintf
                          _write_LCD
 ---------------------------------------------------------------------------------
 (1) _write_LCD                                            2     2      0      90
                                              2 COMRAM     2     2      0
                           _dato_LCD
 ---------------------------------------------------------------------------------
 (2) _dato_LCD                                             2     2      0      22
                                              0 COMRAM     2     2      0
                             _enable
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             59    39     20   53461
                                            110 COMRAM     4     4      0
                                              0 BANK0     47    27     20
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     5      4   10661
                                             73 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    4404
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13     9      4    6084
                                             73 COMRAM    13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4606
                                             48 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     455
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1006
                                             14 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     767
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     618
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     761
                                             82 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3497
                                            102 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3022
                                             86 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     349
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1246
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8    1862
                                             28 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ins_LCD                                              2     2      0      22
                                              0 COMRAM     2     2      0
                             _enable
 ---------------------------------------------------------------------------------
 (1) _ini_LCD                                              1     1      0       0
                                              0 COMRAM     1     1      0
                             _enable
 ---------------------------------------------------------------------------------
 (3) _enable                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conf_puertos                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___awmod (ARG)
   ___fltol
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
     ___xxtofl (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
   ___lbdiv
   ___xxtofl
     ___awdiv (ARG)
       ___awmod (ARG)
   _conf_puertos
   _ini_LCD
     _enable
   _ins_LCD
     _enable
   _nombresbaby
     _ins_LCD
       _enable
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
         ___awdiv (ARG)
           ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
     _write_LCD
       _dato_LCD
         _enable
   _pow
     ___fleq
       ___xxtofl (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
     ___flneg
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
     ___xxtofl
       ___awdiv (ARG)
         ___awmod (ARG)
     _exp
       ___fldiv
       ___fleq
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
       ___xxtofl
         ___awdiv (ARG)
           ___awmod (ARG)
       _eval_poly
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
       _floor
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___flge
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
         ___xxtofl
           ___awdiv (ARG)
             ___awmod (ARG)
         _frexp
           ___fleq
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
       _ldexp
         ___fleq
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
         _eval_poly (ARG)
           ___fladd
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
       _log (ARG)
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___fleq
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
         ___xxtofl
           ___awdiv (ARG)
             ___awmod (ARG)
         _eval_poly
           ___fladd
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
         _frexp
           ___fleq
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
     _log
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
       ___xxtofl
         ___awdiv (ARG)
           ___awmod (ARG)
       _eval_poly
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
       _frexp
         ___fleq
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
       ___xxtofl (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
       ___awdiv (ARG)
         ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
   _write_LCD
     _dato_LCD
       _enable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      31       7       19.1%
BITBANK0            80      0       0       4        0.0%
BANK0               80     3D      7E       5       98.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7E      7E       1       99.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12D      15        0.0%
DATA                 0      0     12D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Oct 10 22:35:26 2019

                                                                  _A 00BE  
                                                                  _B 00C0  
                                                                  _C 00BA  
                                                                  _D 00BB  
                                                                  _E 00B9  
                                                                  _F 00B8  
                                                                  _G 00B7  
                                                                  _R 00B6  
                                                                  _S 00BD  
                                                       ___fldiv@aexp 0019  
                                                                  _X 00AC  
                                                                  _Y 00A8  
                                                                  _Z 0100  
                                                       ___fldiv@bexp 0018  
                                                                  _t 00BF  
                                                       ___fldiv@sign 0011  
                                                                 _PB 00BC  
                                                       ___awdiv@sign 000C  
                                                ___wmul@multiplicand 0003  
                                                       __CFG_CP0$OFF 000000  
                                                       __CFG_CP1$OFF 000000  
                                                       __CFG_CP2$OFF 000000  
                                                       __CFG_CP3$OFF 000000  
                                                        __CFG_OSC$XT 000000  
                                                                l200 660E  
                                                                l203 0E38  
                                                                l230 12C6  
                                                                l223 7D96  
                                                                l305 28C0  
                                                                l308 6596  
                                                                l182 65D0  
                                                                l342 6A70  
                                                                l335 6A5E  
                                                                l191 656C  
                                                                l185 678E  
                                                                l194 6548  
                                                                l283 2468  
                                                                l188 6524  
                                                                l614 714A  
                                                                l552 6CE4  
                                                                l562 7582  
                                                                l571 7570  
                                                                l539 6DD4  
                                                                l580 6B30  
                                                                l900 671C  
                                                                l821 6906  
                                                                l750 69A0  
                                                                l591 6690  
                                                                l671 770C  
                                                                l831 6878  
                                                                l736 6804  
                                                                l680 76FA  
                                                                l912 09DC  
                                                                l673 7632  
                                                                l586 6FC6  
                                                                l674 766A  
                                                                l914 07F4  
                                                                l587 7014  
                                                                l923 084A  
                                                                l860 1958  
                                                                l828 6910  
                                                                l757 69B2  
                                                                l925 08DA  
                                                                l917 07AE  
                                                                l838 6882  
                                                                l926 08C2  
                                                                l951 15C4  
                                                                l944 13B8  
                                                                l961 1722  
                                                                l953 1654  
                                                                l858 19B8  
                                                                l954 163C  
                                                                l875 1AFC  
                                                                l867 1D12  
                                                                l859 19A2  
                                                                l884 1C00  
                                                                l948 176A  
                                                                l885 1BE8  
                                                                l992 79CC  
                                                                l985 7920  
                                                                l988 7AB2  
                                                                l999 7A38  
                                                       __CFG_CPB$OFF 000000  
                                                                _RE0 007C20  
                                                                _RE2 007C22  
                                                       __CFG_CPD$OFF 000000  
                                                       __CFG_BOR$OFF 000000  
                                                                _bin 012C  
                                                                _exp 029A  
                                                                _log 7712  
                                                                _num 00B4  
                                                                _pow 0010  
                                                       __CFG_BORV$20 000000  
                                                       ___awmod@sign 0006  
                                                                wreg 000FE8  
                                                       ___flmul@aexp 0042  
                                                       ___flmul@bexp 0043  
                                                        _sprintf$981 00D5  
                                                       ___flmul@sign 003D  
                                                       ___flmul@temp 0048  
                                                       ___flmul@prod 0044  
                                                       __CFG_LVP$OFF 000000  
                                                       ___fltol@exp1 005C  
                                                       __CFG_WDT$OFF 000000  
                                                               l1021 0282  
                                                               l1006 664E  
                                                               l1016 008E  
                                                               l1041 05AA  
                                                               l1017 0294  
                                                               l1061 6C06  
                                                               l1053 7402  
                                                               l1045 0598  
                                                               l1055 73F0  
                                                               l1065 72A4  
                                                               l1083 78BA  
                                                               l1092 6EDE  
                                                               l1093 6EEE  
                                                               l4001 794E  
                                                               l4011 79B2  
                                                               l4021 7A26  
                                                               l4013 79B6  
                                                               l4005 7962  
                                                               l4101 1058  
                                                               l4031 7A8C  
                                                               l4023 7A4C  
                                                               l4015 79C2  
                                                               l4007 796C  
                                                               l4033 7A9E  
                                                               l4025 7A4E  
                                                               l4017 7A04  
                                                               l4009 797A  
                                                               l4113 11D2  
                                                               l4105 108E  
                                                               l5001 0CA6  
                                                               l4041 6B6E  
                                                               l4035 7AA0  
                                                               l4027 7A54  
                                                               l4019 7A12  
                                                               l4211 7490  
                                                               l4203 745A  
                                                               l4131 6646  
                                                               l4123 6616  
                                                               l4115 11EC  
                                                               l4107 10A8  
                                                               l5011 0CF4  
                                                               l5003 0CAC  
                                                               l4051 6BEC  
                                                               l4043 6B7E  
                                                               l3501 180A  
                                                               l4029 7A78  
                                                               l4221 74CC  
                                                               l4213 7494  
                                                               l4205 745E  
                                                               l4141 75C8  
                                                               l4125 661A  
                                                               l4061 6552  
                                                               l5021 0D74  
                                                               l5013 0D12  
                                                               l5005 0CCA  
                                                               l4301 0638  
                                                               l4053 6BF4  
                                                               l5101 29D6  
                                                               l3511 1850  
                                                               l3503 1812  
                                                               l4231 7502  
                                                               l4223 74DC  
                                                               l4215 749A  
                                                               l4207 746E  
                                                               l4151 7608  
                                                               l4135 7588  
                                                               l4127 662E  
                                                               l4119 1294  
                                                               l4063 6556  
                                                               l5031 0DDC  
                                                               l5023 0D98  
                                                               l5015 0D2C  
                                                               l5007 0CD0  
                                                               l4311 0686  
                                                               l4303 064A  
                                                               l4055 6BF6  
                                                               l4047 6B92  
                                                               l4039 6B38  
                                                               l5111 2A4A  
                                                               l5103 29EE  
                                                               l5041 6796  
                                                               l3601 1A64  
                                                               l3521 1896  
                                                               l3513 1860  
                                                               l3505 1824  
                                                               l4241 7534  
                                                               l4225 74DE  
                                                               l4217 749E  
                                                               l4209 7480  
                                                               l4161 763E  
                                                               l4153 7614  
                                                               l4137 75B2  
                                                               l4081 7D40  
                                                               l4129 6642  
                                                               l4065 655A  
                                                               l5033 0DFA  
                                                               l5025 0DB2  
                                                               l5017 0D32  
                                                               l5009 0CEE  
                                                               l4401 09AE  
                                                               l4321 06D0  
                                                               l4313 068A  
                                                               l4305 064C  
                                                               l4049 6BDC  
                                                               l5201 2D8C  
                                                               l5121 2AA8  
                                                               l5113 2A50  
                                                               l5105 29F4  
                                                               l5051 67BE  
                                                               l5043 679A  
                                                               l3603 1A90  
                                                               l3611 1AEA  
                                                               l3531 18BA  
                                                               l3523 18A8  
                                                               l3515 1864  
                                                               l3507 1826  
                                                               l4251 6572  
                                                               l4227 74EA  
                                                               l4219 74AA  
                                                               l4171 768C  
                                                               l4163 765C  
                                                               l4155 7624  
                                                               l4147 75F6  
                                                               l4075 7C42  
                                                               l4067 7ABC  
                                                               l4059 6550  
                                                               l5035 0E00  
                                                               l5027 0DB8  
                                                               l5019 0D56  
                                                               l4403 09B4  
                                                               l4331 0708  
                                                               l4323 06D8  
                                                               l4307 0662  
                                                               l4315 0692  
                                                               l5211 2DEA  
                                                               l5203 2D94  
                                                               l5123 2ACC  
                                                               l5115 2A74  
                                                               l5107 2A18  
                                                               l5061 67FA  
                                                               l5053 67D2  
                                                               l5045 67AE  
                                                               l3461 6AEC  
                                                               l3621 1B4C  
                                                               l3613 1B18  
                                                               l3605 1AC4  
                                                               l3541 18CE  
                                                               l3533 18BE  
                                                               l3525 18AC  
                                                               l3509 183C  
                                                               l3517 186C  
                                                               l4261 69E2  
                                                               l4253 658E  
                                                               l4237 751E  
                                                               l4229 74F0  
                                                               l4181 76BE  
                                                               l4165 7668  
                                                               l4157 7628  
                                                               l4149 75FA  
                                                               l3701 1362  
                                                               l4077 7C58  
                                                               l4069 7AD0  
                                                               l4085 0E40  
                                                               l5037 0E1E  
                                                               l5029 0DD6  
                                                               l4405 09C6  
                                                               l4341 0748  
                                                               l4333 0708  
                                                               l4325 06DE  
                                                               l4317 06A4  
                                                               l4309 0676  
                                                               l5301 310E  
                                                               l5213 2E1A  
                                                               l5205 2DCA  
                                                               l5141 2B8C  
                                                               l5133 2B2C  
                                                               l5125 2AF6  
                                                               l5109 2A42  
                                                               l5117 2A88  
                                                               l5055 67EE  
                                                               l5047 67B6  
                                                               l5063 6800  
                                                               l3471 6516  
                                                               l3463 6AFC  
                                                               l3455 6A76  
                                                               l4423 6654  
                                                               l3631 1B82  
                                                               l3623 1B5E  
                                                               l3615 1B2C  
                                                               l3607 1AC6  
                                                               l3551 18E2  
                                                               l3543 18D2  
                                                               l3535 18C2  
                                                               l3527 18B2  
                                                               l3519 187E  
                                                               l4271 6A3A  
                                                               l4263 69EA  
                                                               l4431 6916  
                                                               l4247 754E  
                                                               l4239 752A  
                                                               l4191 740A  
                                                               l4167 7674  
                                                               l4159 762E  
                                                               l3711 13A6  
                                                               l3703 1364  
                                                               l4095 0F96  
                                                               l4087 0E52  
                                                               l4407 09CC  
                                                               l4351 079A  
                                                               l4343 0758  
                                                               l4319 06C0  
                                                               l4503 7252  
                                                               l5311 3158  
                                                               l5231 2EAC  
                                                               l5223 2E62  
                                                               l5207 2DD0  
                                                               l5151 2BDA  
                                                               l5143 2B92  
                                                               l5135 2B34  
                                                               l5127 2AFE  
                                                               l5119 2AA2  
                                                               l5071 28D4  
                                                               l5057 67F2  
                                                               l5049 67BC  
                                                               l3473 6518  
                                                               l4513 652C  
                                                               l3465 6B26  
                                                               l3457 6AA8  
                                                               l4425 666E  
                                                               l3641 1BC4  
                                                               l3633 1B98  
                                                               l3625 1B60  
                                                               l3609 1ADA  
                                                               l3561 1940  
                                                               l3553 18E6  
                                                               l3545 18D6  
                                                               l3537 18C6  
                                                               l3529 18B6  
                                                               l3481 1790  
                                                               l4417 66D8  
                                                               l4273 6A4A  
                                                               l4265 69F8  
                                                               l4257 69B8  
                                                               l4441 697E  
                                                               l4433 6930  
                                                               l4249 755C  
                                                               l4193 7424  
                                                               l4177 76A8  
                                                               l4169 767A  
                                                               l3801 174C  
                                                               l3721 1404  
                                                               l3713 13CE  
                                                               l3705 137A  
                                                               l4097 0FB0  
                                                               l4089 0E6C  
                                                               l4601 206C  
                                                               l4521 1D1A  
                                                               l4409 09D0  
                                                               l4361 07F0  
                                                               l4353 07AC  
                                                               l4345 0768  
                                                               l4337 071C  
                                                               l4329 06F2  
                                                               l4281 05BE  
                                                               l5401 3460  
                                                               l5321 31A8  
                                                               l5305 3114  
                                                               l5241 2F04  
                                                               l5233 2EAE  
                                                               l5217 2E20  
                                                               l5161 2C4A  
                                                               l5153 2BE0  
                                                               l5137 2B58  
                                                               l5129 2B04  
                                                               l5081 293A  
                                                               l5073 28F2  
                                                               l5059 67F4  
                                                               l3475 6522  
                                                               l4515 652E  
                                                               l3467 6B2C  
                                                               l3459 6AB8  
                                                               l4427 667E  
                                                               l3651 1C34  
                                                               l3643 1BDE  
                                                               l3627 1B74  
                                                               l3619 1B40  
                                                               l3635 1B9A  
                                                               l3571 1992  
                                                               l3563 1950  
                                                               l3547 18DA  
                                                               l3539 18CA  
                                                               l3555 18EA  
                                                               l3491 17D0  
                                                               l3483 1792  
                                                               l4419 66E8  
                                                               l4275 6A4C  
                                                               l4267 6A0C  
                                                               l4259 69C8  
                                                               l4443 698E  
                                                               l4435 6938  
                                                               l4187 76D8  
                                                               l4179 76B4  
                                                               l3803 1754  
                                                               l3731 1454  
                                                               l3723 140E  
                                                               l3715 13E0  
                                                               l3707 138E  
                                                               l3811 6CEE  
                                                               l4611 212A  
                                                               l4603 2072  
                                                               l4531 1D58  
                                                               l4523 1D24  
                                                               l4371 0848  
                                                               l4363 080A  
                                                               l4355 07BA  
                                                               l4347 0770  
                                                               l4339 0738  
                                                               l4291 060C  
                                                               l4283 05D0  
                                                               l4451 72DA  
                                                               l4507 7268  
                                                               l5331 3208  
                                                               l5323 31B0  
                                                               l5315 3172  
                                                               l5307 311C  
                                                               l5235 2EC0  
                                                               l5227 2E80  
                                                               l5219 2E28  
                                                               l5171 2C9E  
                                                               l5155 2C04  
                                                               l5147 2BBA  
                                                               l5139 2B82  
                                                               l5091 2960  
                                                               l5083 2940  
                                                               l5075 28F8  
                                                               l5067 28C4  
                                                               l4517 6532  
                                                               l3901 6FA0  
                                                               l3661 1CC2  
                                                               l3653 1C72  
                                                               l3629 1B7C  
                                                               l3637 1BAC  
                                                               l3573 1994  
                                                               l3565 196C  
                                                               l3557 18F0  
                                                               l3549 18DE  
                                                               l3485 17A8  
                                                               l3493 17D8  
                                                               l3477 1772  
                                                               l4277 6A58  
                                                               l4269 6A18  
                                                               l4445 699A  
                                                               l4437 6946  
                                                               l4197 743A  
                                                               l4189 76E6  
                                                               l3805 175A  
                                                               l3741 1496  
                                                               l3733 1460  
                                                               l3725 1424  
                                                               l3709 139E  
                                                               l3821 6D28  
                                                               l3813 6D00  
                                                               l4701 259E  
                                                               l4621 21CA  
                                                               l4613 2158  
                                                               l4605 2096  
                                                               l4541 1D9E  
                                                               l4533 1D60  
                                                               l4525 1D30  
                                                               l4381 08B8  
                                                               l4365 0824  
                                                               l4373 085C  
                                                               l4357 07DE  
                                                               l4349 0786  
                                                               l4293 0610  
                                                               l4285 05D2  
                                                               l4453 72EC  
                                                               l4461 7316  
                                                               l4509 7294  
                                                               l5501 37D4  
                                                               l5413 34AC  
                                                               l5405 347A  
                                                               l5341 3250  
                                                               l5333 321C  
                                                               l5317 31A2  
                                                               l5309 3152  
                                                               l5253 2F50  
                                                               l5245 2F1E  
                                                               l5237 2EC8  
                                                               l5229 2E94  
                                                               l5181 2CEA  
                                                               l5157 2C2E  
                                                               l5165 2C74  
                                                               l5149 2BC2  
                                                               l5093 298A  
                                                               l5085 2948  
                                                               l5077 2916  
                                                               l5069 28CE  
                                                               l4519 6536  
                                                               l3903 6FB4  
                                                               l3671 1CEC  
                                                               l3663 1CC6  
                                                               l3647 1C16  
                                                               l3655 1C74  
                                                               l3639 1BB2  
                                                               l3591 1A36  
                                                               l3583 19F4  
                                                               l3575 19A0  
                                                               l3567 1978  
                                                               l3559 191E  
                                                               l3495 17EA  
                                                               l3487 17BC  
                                                               l3479 177E  
                                                               l3911 701C  
                                                               l4439 695A  
                                                               l3751 14F8  
                                                               l3743 14A6  
                                                               l3735 146E  
                                                               l3727 1430  
                                                               l3719 13F6  
                                                               l3831 6D5E  
                                                               l3823 6D2C  
                                                               l3815 6D08  
                                                               l4711 2626  
                                                               l4703 25A2  
                                                               l4631 229C  
                                                               l4623 21E2  
                                                               l4615 2178  
                                                               l4607 20D0  
                                                               l4551 1E20  
                                                               l4543 1DBC  
                                                               l4535 1D6A  
                                                               l4527 1D48  
                                                               l4391 0938  
                                                               l4375 0870  
                                                               l4367 082A  
                                                               l4359 07E0  
                                                               l4287 05E8  
                                                               l4295 0618  
                                                               l4279 05B2  
                                                               l4471 6DDA  
                                                               l4463 7332  
                                                               l4447 72AC  
                                                               l5511 383A  
                                                               l5503 3822  
                                                               l5431 355C  
                                                               l5423 350A  
                                                               l5415 34B4  
                                                               l5407 348E  
                                                               l5351 32BA  
                                                               l5343 3286  
                                                               l5335 3234  
                                                               l5327 31EA  
                                                               l5271 2FEC  
                                                               l5263 2FAE  
                                                               l5255 2F58  
                                                               l5247 2F32  
                                                               l5239 2EFE  
                                                               l5183 2CFC  
                                                               l5175 2CBC  
                                                               l5167 2C7C  
                                                               l5159 2C44  
                                                               l5095 2992  
                                                               l5087 294E  
                                                               l5079 2934  
                                                               l3905 700A  
                                                               l3673 1CFE  
                                                               l3665 1CDA  
                                                               l3657 1C8A  
                                                               l3649 1C22  
                                                               l3593 1A3C  
                                                               l3585 1A06  
                                                               l3577 19CC  
                                                               l3569 197E  
                                                               l3497 17F2  
                                                               l3489 17CC  
                                                               l3921 707E  
                                                               l3913 7036  
                                                               l3761 15A4  
                                                               l3753 1514  
                                                               l3745 14C0  
                                                               l3737 147A  
                                                               l3729 1448  
                                                               l3681 12DA  
                                                               l3841 6D9E  
                                                               l3833 6D72  
                                                               l3825 6D36  
                                                               l3817 6D0C  
                                                               l3809 6CEA  
                                                               l4721 266C  
                                                               l4713 262A  
                                                               l4705 25A6  
                                                               l4633 22A6  
                                                               l4617 21B0  
                                                               l4609 20F4  
                                                               l4561 1E84  
                                                               l4553 1E26  
                                                               l4545 1DE8  
                                                               l4537 1D8C  
                                                               l4529 1D54  
                                                               l4385 08F0  
                                                               l4393 093C  
                                                               l4377 0874  
                                                               l4369 0836  
                                                               l4297 062A  
                                                               l4289 05FC  
                                                               l4473 6E2A  
                                                               l4465 7346  
                                                               l4457 7300  
                                                               l4449 72C8  
                                                               l5601 3BEA  
                                                               l5521 3884  
                                                               l5513 383E  
                                                               l5505 3826  
                                                               l5441 35C8  
                                                               l5425 354E  
                                                               l5417 34EA  
                                                               l5409 34A6  
                                                               l5361 3316  
                                                               l5353 32D2  
                                                               l5345 328C  
                                                               l5337 3236  
                                                               l5281 3058  
                                                               l5265 2FDE  
                                                               l5257 2F8E  
                                                               l5249 2F4A  
                                                               l5193 2D5A  
                                                               l5185 2D04  
                                                               l5177 2CD0  
                                                               l5097 2998  
                                                               l5089 2958  
                                                               l3907 7010  
                                                               l3675 1D00  
                                                               l3667 1CE0  
                                                               l3659 1C9C  
                                                               l3595 1A50  
                                                               l3587 1A18  
                                                               l3579 19E0  
                                                               l3499 1808  
                                                               l3923 708E  
                                                               l3771 15EE  
                                                               l3763 15B0  
                                                               l3755 153E  
                                                               l3747 14D0  
                                                               l3739 148A  
                                                               l3691 1328  
                                                               l3683 12EC  
                                                               l3843 6DA6  
                                                               l3835 6D7A  
                                                               l3827 6D4C  
                                                               l3819 6D20  
                                                               l4731 26B2  
                                                               l4723 2674  
                                                               l4715 262E  
                                                               l4707 25FA  
                                                               l4651 233C  
                                                               l4643 22F4  
                                                               l4627 2216  
                                                               l4619 21BE  
                                                               l4571 1ED2  
                                                               l4563 1E96  
                                                               l4547 1DEC  
                                                               l4539 1D92  
                                                               l4395 095C  
                                                               l4387 08FC  
                                                               l4379 0886  
                                                               l4299 0632  
                                                               l4475 6EC6  
                                                               l4467 73B8  
                                                               l4491 7206  
                                                               l4483 719C  
                                                               l4803 779A  
                                                               l5611 3C64  
                                                               l5603 3C24  
                                                               l5531 38E4  
                                                               l5507 382E  
                                                               l5451 3632  
                                                               l5443 35E0  
                                                               l5435 3596  
                                                               l5419 34F0  
                                                               l5363 331C  
                                                               l5339 3248  
                                                               l5291 30C2  
                                                               l5283 3070  
                                                               l5275 3026  
                                                               l5259 2F94  
                                                               l5195 2D6E  
                                                               l5187 2D3A  
                                                               l5179 2CE8  
                                                               l5099 29BC  
                                                               l3669 1CE4  
                                                               l3597 1A52  
                                                               l3589 1A2A  
                                                               l3933 70C0  
                                                               l3925 7092  
                                                               l3917 704C  
                                                               l3781 1676  
                                                               l3773 1600  
                                                               l3765 15C2  
                                                               l3757 1578  
                                                               l3749 14EC  
                                                               l3693 1330  
                                                               l3685 12EE  
                                                               l3837 6D94  
                                                               l3829 6D54  
                                                               l3845 6DAC  
                                                               l3861 6C30  
                                                               l3853 6C0E  
                                                               l4741 26D6  
                                                               l4733 26CC  
                                                               l4725 2686  
                                                               l4709 2618  
                                                               l4717 2634  
                                                               l4653 2342  
                                                               l4645 22F8  
                                                               l4629 222C  
                                                               l4581 1F4C  
                                                               l4573 1EF6  
                                                               l4565 1E9E  
                                                               l4557 1E2E  
                                                               l4549 1E16  
                                                               l4397 0972  
                                                               l4389 090E  
                                                               l4493 7222  
                                                               l4485 71E8  
                                                               l4477 7152  
                                                               l4821 0320  
                                                               l4813 029C  
                                                               l4805 7810  
                                                               l4901 0012  
                                                               l5541 3930  
                                                               l5525 388A  
                                                               l5517 3858  
                                                               l5509 3834  
                                                               l5461 367E  
                                                               l5453 3638  
                                                               l5445 35E2  
                                                               l5429 3554  
                                                               l5381 33CA  
                                                               l5373 3380  
                                                               l5357 32D8  
                                                               l5349 32A6  
                                                               l5293 30C8  
                                                               l5285 3072  
                                                               l5269 2FE4  
                                                               l5197 2D86  
                                                               l5189 2D40  
                                                               l3599 1A5E  
                                                               l3951 7138  
                                                               l3943 70F0  
                                                               l3935 70CC  
                                                               l3927 70A4  
                                                               l3919 707C  
                                                               l3791 16EA  
                                                               l3783 1688  
                                                               l3775 1632  
                                                               l3767 15D6  
                                                               l3759 1586  
                                                               l3695 1342  
                                                               l3687 1304  
                                                               l3679 12CE  
                                                               l3847 6DC2  
                                                               l3839 6D9C  
                                                               l3871 6C76  
                                                               l3863 6C44  
                                                               l3855 6C12  
                                                               l4751 2760  
                                                               l4735 26D0  
                                                               l4727 268A  
                                                               l4671 2416  
                                                               l4655 234A  
                                                               l4647 230C  
                                                               l4639 22AC  
                                                               l4591 1FA4  
                                                               l4583 1F52  
                                                               l4575 1EFC  
                                                               l4567 1EB8  
                                                               l4719 2650  
                                                               l4559 1E6C  
                                                               l4399 0992  
                                                               l4495 722C  
                                                               l4479 7188  
                                                               l4831 0394  
                                                               l4815 02D2  
                                                               l4807 7816  
                                                               l4911 00A6  
                                                               l4903 0018  
                                                               l5631 3D1C  
                                                               l5623 3CB0  
                                                               l5615 3C7E  
                                                               l5607 3C56  
                                                               l5551 39A4  
                                                               l5543 3942  
                                                               l5535 3902  
                                                               l5527 3892  
                                                               l5519 386C  
                                                               l5471 36C8  
                                                               l5447 35F4  
                                                               l5439 35B4  
                                                               l5391 3416  
                                                               l5383 33D0  
                                                               l5375 3388  
                                                               l5367 3336  
                                                               l5359 32E0  
                                                               l5287 3084  
                                                               l5279 3044  
                                                               l3945 70FE  
                                                               l3937 70D6  
                                                               l3793 170A  
                                                               l3785 16B2  
                                                               l3769 15EA  
                                                               l3697 134A  
                                                               l3689 1318  
                                                               l3961 68AE  
                                                               l3849 6DCA  
                                                               l3873 6C8A  
                                                               l3881 6CBC  
                                                               l3865 6C4C  
                                                               l3857 6C24  
                                                               l4761 27C4  
                                                               l4753 2764  
                                                               l4745 271E  
                                                               l4729 269A  
                                                               l4681 246E  
                                                               l4673 241A  
                                                               l4657 23A0  
                                                               l4649 2330  
                                                               l4665 23E8  
                                                               l4593 1FBE  
                                                               l4585 1F6E  
                                                               l4577 1F06  
                                                               l4569 1EC0  
                                                               l4497 723E  
                                                               l4841 0444  
                                                               l4833 03B2  
                                                               l4825 033E  
                                                               l4809 784A  
                                                               l4921 017A  
                                                               l4913 00DE  
                                                               l4905 004E  
                                                               l5633 3D24  
                                                               l5625 3CB8  
                                                               l5617 3C92  
                                                               l5609 3C5E  
                                                               l5561 39CE  
                                                               l5553 39AA  
                                                               l5545 394A  
                                                               l5537 3916  
                                                               l5481 372C  
                                                               l5465 3684  
                                                               l5457 3652  
                                                               l5449 35FC  
                                                               l5369 337A  
                                                               l5297 30E2  
                                                               l5289 308C  
                                                               l3891 6F26  
                                                               l3947 7112  
                                                               l3795 1728  
                                                               l3779 166A  
                                                               l3787 16B6  
                                                               l3699 1350  
                                                               l3971 68F6  
                                                               l3963 68B8  
                                                               l3955 6888  
                                                               l3883 6CD2  
                                                               l3875 6CA6  
                                                               l3867 6C64  
                                                               l3859 6C2C  
                                                               l4763 27CA  
                                                               l4755 278E  
                                                               l4747 2722  
                                                               l4691 24A0  
                                                               l4683 2478  
                                                               l4667 2404  
                                                               l4675 2420  
                                                               l4659 23D4  
                                                               l4595 1FF2  
                                                               l4587 1F8A  
                                                               l4579 1F3C  
                                                               l4851 0548  
                                                               l4843 0460  
                                                               l4835 03C6  
                                                               l4827 0376  
                                                               l4819 02E8  
                                                               l4931 01EC  
                                                               l4907 0084  
                                                               l5651 3DD8  
                                                               l5643 3DA6  
                                                               l5635 3D38  
                                                               l5627 3CEE  
                                                               l5619 3CAA  
                                                               l5571 3A08  
                                                               l5563 39E2  
                                                               l5555 39B0  
                                                               l5547 3998  
                                                               l5539 392E  
                                                               l5491 378C  
                                                               l5483 3734  
                                                               l5475 36E2  
                                                               l5467 368C  
                                                               l5459 3666  
                                                               l5395 341C  
                                                               l5387 33EA  
                                                               l5379 33C2  
                                                               l5299 30F6  
                                                               ?_exp 00C1  
                                                               l4861 659E  
                                                               l3893 6F36  
                                                               l3949 7128  
                                                               l3797 1738  
                                                               l3789 16D6  
                                                               l3973 68F8  
                                                               l3965 68CC  
                                                               l3957 6890  
                                                               l3981 6828  
                                                               l3885 6CDA  
                                                               l3877 6CAE  
                                                               l3869 6C6C  
                                                               l4765 27D2  
                                                               l4773 2864  
                                                               l4757 2794  
                                                               l4749 2736  
                                                               l4693 24B8  
                                                               l4685 248C  
                                                               l4677 2440  
                                                               l4669 2412  
                                                               l4597 2028  
                                                               l4589 1F9E  
                                                               l4941 09E4  
                                                               l4845 04AC  
                                                               l4837 03EA  
                                                               l4933 0220  
                                                               l4925 0198  
                                                               l4917 00F4  
                                                               l5661 3EC4  
                                                               l5653 3DE0  
                                                               l5645 3DBA  
                                                               l5637 3D88  
                                                               l5629 3D18  
                                                               l5581 3AB4  
                                                               l5565 39FA  
                                                               l5557 39B4  
                                                               l5549 399C  
                                                               l5493 37A0  
                                                               l5477 3726  
                                                               l5469 36C2  
                                                               l5397 3424  
                                                               l5389 33FE  
                                                               ?_log 0077  
                                                               l4863 65A6  
                                                               l4871 673C  
                                                               l3895 6F6A  
                                                               l3799 174A  
                                                               l3975 6900  
                                                               l3967 68D4  
                                                               l3959 68A6  
                                                               l3991 6872  
                                                               l3983 6832  
                                                               l3879 6CB6  
                                                               l4767 2854  
                                                               l4759 27B8  
                                                               l4695 2504  
                                                               l4687 2498  
                                                               l4679 2460  
                                                               l4599 2034  
                                                               l4775 2882  
                                                               l4783 65D8  
                                                               l4951 0A56  
                                                               l4943 09EA  
                                                               l4855 055E  
                                                               l4847 04FC  
                                                               l4839 0420  
                                                               l4791 7714  
                                                               l4935 0244  
                                                               l4927 01A2  
                                                               l4919 010A  
                                                               l5647 3DD2  
                                                               l5639 3D8C  
                                                               l5655 3E32  
                                                               l5583 3AD6  
                                                               l5575 3A5A  
                                                               l5495 37B8  
                                                               l5487 376E  
                                                               l5399 345A  
                                                               l4881 6766  
                                                               l4873 674C  
                                                               l4865 6722  
                                                               l3897 6F7A  
                                                               l3889 6EF4  
                                                               l3993 78C4  
                                                               l3969 68EE  
                                                               l3985 6846  
                                                               l3977 680A  
                                                               l4697 255A  
                                                               l4689 249C  
                                                               l4777 28AA  
                                                               l4785 65E0  
                                                               l4961 0AD6  
                                                               l4953 0A74  
                                                               l4945 0A08  
                                                               l4849 0512  
                                                               l4793 7726  
                                                               l4937 025A  
                                                               l4929 01C6  
                                                               l5673 3F10  
                                                               l5665 3EDE  
                                                               l5657 3E48  
                                                               l5593 3B56  
                                                               l5585 3B0A  
                                                               l5577 3A68  
                                                               l5569 3A00  
                                                               l5497 37BA  
                                                               l4859 659C  
                                                               l4891 677A  
                                                               l4883 676A  
                                                               l4875 6754  
                                                               l4867 6734  
                                                               l3899 6F8E  
                                                               l3995 78D8  
                                                               l3987 6862  
                                                               l3979 6820  
                                                               l4779 28B8  
                                                               l4699 258E  
                                                               l4787 65F4  
                                                               l4971 0B3E  
                                                               l4963 0ADC  
                                                               l4955 0A98  
                                                               l4947 0A2C  
                                                               l5675 3F18  
                                                               l5667 3EF2  
                                                               l5659 3EC0  
                                                               l5595 3B64  
                                                               l5587 3B26  
                                                               l5579 3A92  
                                                               l5499 37CC  
                                                               l5683 3F74  
                                                               l4893 677E  
                                                               l4885 676E  
                                                               l4877 675E  
                                                               l4869 6738  
                                                               l3997 78EA  
                                                               l3989 686A  
                                                               l4789 65F6  
                                                               l4981 0BBE  
                                                               l4973 0B5C  
                                                               l4965 0AFA  
                                                               l4957 0AB2  
                                                               l4949 0A32  
                                                               l4797 7744  
                                                               l5669 3F0A  
                                                               l5597 3B8E  
                                                               l5589 3B2C  
                                                               l4895 6782  
                                                               l4887 6772  
                                                               l4879 6762  
                                                               l3999 7932  
                                                               l4991 0C26  
                                                               l4983 0BC4  
                                                               l4975 0B80  
                                                               l4967 0B00  
                                                               l4959 0AB8  
                                                               l4799 777C  
                                                               l5679 3F6A  
                                                               l5599 3BC8  
                                                               l4897 6786  
                                                               l4889 6776  
                                                               l4993 0C44  
                                                               l4985 0BE2  
                                                               l4977 0B86  
                                                               l4969 0B1E  
                                                               l4899 678A  
                                                               l4995 0C68  
                                                               l4987 0BE8  
                                                               l4979 0BA4  
                                                               l4997 0C6E  
                                                               l4989 0C06  
                                                               l4999 0C8C  
                                                               ?_pow 00CC  
                                                               STR_1 7F86  
                                                               STR_2 7FBC  
                                                               STR_3 7FB3  
                                                               STR_4 7F5D  
                                                               STR_5 7F3C  
                                                               STR_6 7FD2  
                                                               STR_7 7F30  
                                                               STR_8 7F3C  
                                                               STR_9 7FD2  
                                                               u3000 1C14  
                                                               u3001 1C0E  
                                                               u3010 1C32  
                                                               u3011 1C2C  
                                                               u3020 1C70  
                                                               u3100 1316  
                                                               u3021 1C6A  
                                                               u3101 1310  
                                                               _LATA 000F89  
                                                               u3030 1C88  
                                                               u3110 1360  
                                                               _LATB 000F8A  
                                                               u3031 1C82  
                                                               u3111 135A  
                                                               u3040 1C9C  
                                                               u3200 1630  
                                                               u3120 1378  
                                                               u4000 0648  
                                                               _LATD 000F8C  
                                                               u3041 1C96  
                                                               u3201 162A  
                                                               u3121 1372  
                                                               u4001 0642  
                                                               _LATE 000F8D  
                                                               u3050 1CC0  
                                                               u3210 164E  
                                                               u3130 138C  
                                                               u4010 0660  
                                                               u3051 1CBA  
                                                               u3211 1648  
                                                               u3131 1386  
                                                               u4011 065A  
                                                               u3060 1CD8  
                                                               u3220 1668  
                                                               u3140 13CC  
                                                               u3300 6D70  
                                                               u4100 0846  
                                                               u4020 0674  
                                                               u3061 1CD2  
                                                               u3221 1662  
                                                               u3141 13C6  
                                                               u3301 6D6A  
                                                               u4101 0840  
                                                               u4021 066E  
                                                               u3070 1CFC  
                                                               u3230 1686  
                                                               u3150 13E0  
                                                               u3310 6D92  
                                                               u4110 086E  
                                                               u4030 06BE  
                                                               u3071 1CF6  
                                                               u3231 1680  
                                                               u3151 13DA  
                                                               u3311 6D8C  
                                                               u4111 0868  
                                                               u4031 06B8  
                                                               u3400 6F68  
                                                               u4200 666C  
                                                               u3240 16D4  
                                                               u3160 1560  
                                                               u3080 12EA  
                                                               u3320 6DC0  
                                                               u4120 0884  
                                                               u4040 0706  
                                                               u5000 303E  
                                                               u3401 6F62  
                                                               u4201 6666  
                                                               u3241 16CE  
                                                               u3081 12E4  
                                                               u3321 6DBA  
                                                               u4121 087E  
                                                               u4041 0700  
                                                               u5001 3038  
                                                               u3410 6F8C  
                                                               u4210 692E  
                                                               u3250 1708  
                                                               u3170 15C0  
                                                               u3090 1302  
                                                               u3330 6C22  
                                                               u4130 08B6  
                                                               u4050 0784  
                                                               u5010 3084  
                                                               u3411 6F86  
                                                               u4211 6928  
                                                               u3251 1702  
                                                               u3171 15BA  
                                                               u3091 12FC  
                                                               u3331 6C1C  
                                                               u4131 08B0  
                                                               u4051 077E  
                                                               u5011 307E  
                                                               u3420 6FB2  
                                                               u2700 17A6  
                                                               u3500 7126  
                                                               u4220 6958  
                                                               u3260 1748  
                                                               u3180 15E8  
                                                               u3340 6C42  
                                                               u4140 08D4  
                                                               u4060 07AA  
                                                               u4300 71C8  
                                                               u5100 3504  
                                                               u5020 30DC  
                                                               u3421 6FAC  
                                                               u2701 17A0  
                                                               u3501 7120  
                                                               u4221 6952  
                                                               u3261 1742  
                                                               u3181 15E2  
                                                               u3165 1554  
                                                               u3341 6C3C  
                                                               u4141 08CE  
                                                               u4061 07A4  
                                                               u4301 71BE  
                                                               u5101 34FE  
                                                               u5021 30D6  
                                                               u3430 7008  
                                                               u2710 17BA  
                                                               u4230 697C  
                                                               u3190 15FE  
                                                               u3510 68A4  
                                                               u3270 6CFE  
                                                               u3350 6C62  
                                                               u4150 08EE  
                                                               u4070 07DC  
                                                               u4310 71E6  
                                                               u5110 35AE  
                                                               u5030 316C  
                                                               u3431 7002  
                                                               u2711 17B4  
                                                               u4231 6976  
                                                               u3191 15F8  
                                                               u3511 689E  
                                                               u3271 6CF8  
                                                               u3351 6C5C  
                                                               u4151 08E8  
                                                               u4071 07D6  
                                                               u4311 71E0  
                                                               u5111 35A8  
                                                               u5031 3166  
                                                               u2800 193C  
                                                               u2720 1806  
                                                               u3440 7034  
                                                               u3600 79AC  
                                                               u3520 68CA  
                                                               u3280 6D1E  
                                                               u3360 6C88  
                                                               u4400 1F3A  
                                                               u4160 090C  
                                                               u4080 0808  
                                                               u4240 72D8  
                                                               u4320 7220  
                                                               u5200 39C8  
                                                               u5120 35F4  
                                                               u5040 3202  
                                                               u2721 1800  
                                                               u3441 702E  
                                                               u3601 79A6  
                                                               u3521 68C4  
                                                               u3281 6D18  
                                                               u3361 6C82  
                                                               u4401 1F34  
                                                               u4161 0906  
                                                               u4081 0802  
                                                               u4241 72D2  
                                                               u4321 721A  
                                                               u5201 39C2  
                                                               u5121 35EE  
                                                               u5041 31FC  
                                                               u2810 196A  
                                                               u2730 1822  
                                                               u3450 7070  
                                                               u3610 79FE  
                                                               u3530 68EC  
                                                               u3290 6D4A  
                                                               u3370 6CA4  
                                                               u4410 1F9C  
                                                               u4170 095A  
                                                               u4090 0822  
                                                               u4250 72EA  
                                                               u4330 723C  
                                                               u5210 3C78  
                                                               u5130 364C  
                                                               u5050 3248  
                                                               u2811 1964  
                                                               u2731 181C  
                                                               u3611 79F8  
                                                               u3531 68E6  
                                                               u3291 6D44  
                                                               u3371 6C9E  
                                                               u4411 1F96  
                                                               u4171 0954  
                                                               u4091 081C  
                                                               u4251 72E4  
                                                               u4331 7236  
                                                               u5211 3C72  
                                                               u5131 3646  
                                                               u5051 3242  
                                                               u2660 6AA6  
                                                               u2900 1AD8  
                                                               u2820 1990  
                                                               u2740 183A  
                                                               u3460 70A2  
                                                               u3620 7A24  
                                                               u3540 681E  
                                                               u3700 7C56  
                                                               u3380 6CD0  
                                                               u4500 22EE  
                                                               u4420 2026  
                                                               u4340 1D46  
                                                               u4180 0990  
                                                               u4260 7330  
                                                               u4308 71CC  
                                                               u5300 3ED8  
                                                               u5220 3D36  
                                                               u5140 36DC  
                                                               u5060 32A0  
                                                               u2661 6AA0  
                                                               u2901 1AD2  
                                                               u2821 198A  
                                                               u2741 1834  
                                                               u3461 709C  
                                                               u3621 7A1E  
                                                               u3541 6818  
                                                               u3701 7C50  
                                                               u3381 6CCA  
                                                               u4501 22E8  
                                                               u4421 2020  
                                                               u4341 1D40  
                                                               u4181 098A  
                                                               u4261 732A  
                                                               u5301 3ED2  
                                                               u5221 3D30  
                                                               u5141 36D6  
                                                               u5061 329A  
                                                               u2670 6AEA  
                                                               u3390 6F24  
                                                               u2910 1B16  
                                                               u2830 19B8  
                                                               u2750 184E  
                                                               u3470 70BA  
                                                               u3630 7A38  
                                                               u3550 6844  
                                                               u3710 0E50  
                                                               u4510 230C  
                                                               u4430 206A  
                                                               u4350 1D8A  
                                                               u4190 09C4  
                                                               u4270 73B6  
                                                               u5150 3786  
                                                               u5070 3330  
                                                               u2671 6AE4  
                                                               u3391 6F1E  
                                                               u2911 1B10  
                                                               u2831 19B2  
                                                               u2751 1848  
                                                               u3471 70B4  
                                                               u3455 7064  
                                                               u3631 7A32  
                                                               u3551 683E  
                                                               u3711 0E4A  
                                                               u4511 2306  
                                                               u4431 2064  
                                                               u4351 1D84  
                                                               u4191 09BE  
                                                               u4271 73B0  
                                                               u5151 3780  
                                                               u5071 332A  
                                                               u2680 6B24  
                                                               u2920 1B2A  
                                                               u2840 19CA  
                                                               u2760 1894  
                                                               u3480 70EA  
                                                               u3640 7A4A  
                                                               u3560 6860  
                                                               u3720 0E6A  
                                                               u4600 26B0  
                                                               u4520 232E  
                                                               u4440 2094  
                                                               u4360 1E10  
                                                               u4280 6EDC  
                                                               u5160 37CC  
                                                               u5080 33E4  
                                                               u2681 6B1E  
                                                               u2921 1B24  
                                                               u2841 19C4  
                                                               u2761 188E  
                                                               u3481 70E4  
                                                               u3641 7A44  
                                                               u3801 75DA  
                                                               u3561 685A  
                                                               u3721 0E64  
                                                               u4601 26AA  
                                                               u4521 2328  
                                                               u4441 208E  
                                                               u4361 1E0A  
                                                               u4281 6ED6  
                                                               u5161 37C6  
                                                               u5081 33DE  
                                                               u2930 1B5C  
                                                               u2850 19DE  
                                                               u2770 18A6  
                                                               u2690 178E  
                                                               u3490 7112  
                                                               u3650 7A8A  
                                                               u3570 78D6  
                                                               u3810 75F0  
                                                               u3730 0FAE  
                                                               u4610 26CA  
                                                               u4530 23FE  
                                                               u4450 20F2  
                                                               u4370 1E82  
                                                               u4290 7186  
                                                               u5250 3DA0  
                                                               u5234 3D4C  
                                                               u5170 3852  
                                                               u5090 3474  
                                                               u2931 1B56  
                                                               u2851 19D8  
                                                               u2771 18A0  
                                                               u2691 1788  
                                                               u3491 710C  
                                                               u3651 7A84  
                                                               u3571 78D0  
                                                               u3811 75EA  
                                                               u3731 0FA8  
                                                               u4611 26C4  
                                                               u4531 23F8  
                                                               u4451 20EC  
                                                               u4371 1E7C  
                                                               u4291 7180  
                                                               u5251 3D9A  
                                                               u5235 3D46  
                                                               u5171 384C  
                                                               u5091 346E  
                                                               u2940 1B72  
                                                               u2860 1A16  
                                                               u2780 191C  
                                                               u3660 7A9C  
                                                               u3580 78E8  
                                                               u3900 7500  
                                                               u3820 765A  
                                                               u3740 10A6  
                                                               u4620 2718  
                                                               u4540 243E  
                                                               u4460 2128  
                                                               u4380 1E94  
                                                               u4700 7724  
                                                               u5260 3E46  
                                                               u5244 3D74  
                                                               u5180 38FC  
                                                               u2941 1B6C  
                                                               u2861 1A10  
                                                               u2781 1916  
                                                               u3661 7A96  
                                                               u3581 78E2  
                                                               u3901 74FA  
                                                               u3821 7654  
                                                               u3741 10A0  
                                                               u4621 2712  
                                                               u4541 2438  
                                                               u4461 2122  
                                                               u4381 1E8E  
                                                               u4701 771E  
                                                               u5261 3E40  
                                                               u5245 3D6E  
                                                               u5181 38F6  
                                                               u5317 2922  
                                                               u2950 1B96  
                                                               u2870 1A28  
                                                               u2790 1938  
                                                               u3590 794C  
                                                               u3910 7518  
                                                               u3830 768A  
                                                               u3750 11EA  
                                                               u4630 2736  
                                                               u4550 245E  
                                                               u4470 2156  
                                                               u4390 1ED0  
                                                               u3670 6B6C  
                                                               u4710 777A  
                                                               u5190 3942  
                                                               u2951 1B90  
                                                               u2871 1A22  
                                                               u2791 1930  
                                                               u3591 7946  
                                                               u3911 7512  
                                                               u3831 7684  
                                                               u3751 11E4  
                                                               u4631 2730  
                                                               u4551 2458  
                                                               u4471 2150  
                                                               u4391 1ECA  
                                                               u5407 0DA2  
                                                               u3671 6B66  
                                                               u4711 7774  
                                                               u5191 393C  
                                                               u5327 29C6  
                                                               u2960 1BAC  
                                                               u2880 1A4E  
                                                               u3920 7548  
                                                               u3840 76A2  
                                                               u3760 662C  
                                                               u4640 275E  
                                                               u4560 248A  
                                                               u4480 2178  
                                                               u3680 6BC6  
                                                               u4720 02D0  
                                                               u4800 004C  
                                                               u2961 1BA6  
                                                               u2881 1A48  
                                                               u3921 7542  
                                                               u3841 769C  
                                                               u3761 6626  
                                                               u4641 2758  
                                                               u4561 2484  
                                                               u4481 2172  
                                                               u5417 0E28  
                                                               u3681 6BBC  
                                                               u4721 02CA  
                                                               u4801 0046  
                                                               u5337 2A7C  
                                                               u2970 1BC2  
                                                               u2890 1A8E  
                                                               u3930 7570  
                                                               u3850 76D2  
                                                               u3690 7ACE  
                                                               u3770 6640  
                                                               u4650 278C  
                                                               u4570 2612  
                                                               u4490 21AE  
                                                               u4730 031E  
                                                               u4810 0082  
                                                               u5274 3E5C  
                                                               u2971 1BBC  
                                                               u2891 1A88  
                                                               u3931 756A  
                                                               u3851 76CC  
                                                               u3691 7AC8  
                                                               u3771 663A  
                                                               u4651 2786  
                                                               u4571 260C  
                                                               u4491 21A8  
                                                               u5427 6560  
                                                               u5347 0AA2  
                                                               u4731 0318  
                                                               u4811 007C  
                                                               u5275 3E56  
                                                               u2980 1BDC  
                                                               u3940 69E0  
                                                               u3860 76FA  
                                                               u4660 27B6  
                                                               u4580 264A  
                                                               u4740 0374  
                                                               u4820 00DC  
                                                               u5284 3E84  
                                                               u4900 2AA0  
                                                               u5437 653C  
                                                               u2981 1BD6  
                                                               u3941 69DA  
                                                               u3861 76F4  
                                                               u3781 759A  
                                                               u4661 27B0  
                                                               u4581 2644  
                                                               u5357 0B28  
                                                               u4741 036E  
                                                               u4821 00D6  
                                                               u5285 3E7E  
                                                               u4901 2A9A  
                                                               u2990 1BFA  
                                                               u3950 6A0A  
                                                               u3870 7422  
                                                               u3790 75B0  
                                                               u4670 2882  
                                                               u4590 2684  
                                                               u4750 03AA  
                                                               u4830 0108  
                                                               u5294 3EAC  
                                                               u4910 2BD8  
                                                               u5447 6728  
                                                               u2991 1BF4  
                                                               u3951 6A04  
                                                               u3871 741C  
                                                               u3791 75AA  
                                                               u4671 287C  
                                                               u4591 267E  
                                                               u5367 0BAE  
                                                               u4751 03A2  
                                                               u4831 0102  
                                                               u5295 3EA6  
                                                               u4911 2BD2  
                                                               u3960 6A38  
                                                               u3880 7454  
                                                               u4680 28AA  
                                                               u3688 6BCA  
                                                               u4760 03AE  
                                                               u4840 0178  
                                                               u4920 2CB6  
                                                               u5457 6742  
                                                               u3961 6A32  
                                                               u3881 744E  
                                                               u4681 28A4  
                                                               u5377 0C10  
                                                               u4841 0172  
                                                               u4921 2CB0  
                                                               u3890 74CA  
                                                               u4690 660C  
                                                               u3970 05CE  
                                                               u4770 03C4  
                                                               u4850 0258  
                                                               u4930 2CFC  
                                                               u5467 6756  
                                                               u3891 74C4  
                                                               u4691 6606  
                                                               u5387 0C96  
                                                               u3971 05C8  
                                                               u4771 03BE  
                                                               u4851 0252  
                                                               u4931 2CF6  
                                                               u4860 67AC  
                                                               u3980 05E6  
                                                               u4780 0510  
                                                               u4940 2D54  
                                                               u4861 67A6  
                                                               u5477 651A  
                                                               u5397 0D1C  
                                                               u3981 05E0  
                                                               u4781 050A  
                                                               u4941 2D4E  
                                                               u4870 67D0  
                                                               u3990 05FA  
                                                               u4790 0546  
                                                               u4950 2DE4  
                                                               u4871 67CA  
                                                               u3991 05F4  
                                                               u4791 0540  
                                                               u4951 2DDE  
                                                               u4880 67EC  
                                                               u4960 2E7A  
                                                               u4881 67E6  
                                                               u4961 2E74  
                                                               u4970 2EC0  
                                                               u4890 29EC  
                                                               u4971 2EBA  
                                                               u4891 29E6  
                                                               u4980 2F18  
                                                               u4981 2F12  
                                                               u4990 2FA8  
                                                               u4991 2FA2  
                                                       __CFG_PWRT$ON 000000  
                                                       __CFG_STVR$ON 000000  
                                                               _bin1 00A3  
                                                               _bin2 009E  
                                                               _bin3 0099  
                                                               _binc 0091  
                                                               _main 28C4  
                                                               fsr2h 000FDA  
                                                               indf1 000FE7  
                                                               indf2 000FDF  
                                                               fsr1l 000FE1  
                                                               fsr2l 000FD9  
                                                               exp@x 00C1  
                                                               log@x 0077  
                                                               pow@x 00CC  
                                                               pow@y 00D0  
                                                     ??_conf_puertos 0001  
                                                               prodh 000FF4  
                                                               prodl 000FF3  
                                                               start 0002  
                                                    ___fldiv@new_exp 0012  
                                                       ___param_bank 000000  
                                                              ??_exp 007F  
                                                              ??_log 007B  
                                                              ??_pow 007F  
                                                      __CFG_OSCS$OFF 000000  
                                                      ___fltol@sign1 005B  
                                                    __end_of___fladd 1D18  
                                                              ?_main 0001  
                                                    __end_of___fldiv 09E2  
                                                    __end_of___awdiv 6DD8  
                                                    __end_of___lbdiv 6808  
                                                    __end_of___flneg 6694  
                                                              STR_10 7F4E  
                                                              STR_11 7F3C  
                                                              STR_12 7FCD  
                                                              STR_20 7ECC  
                                                              STR_13 7F5D  
                                                              STR_21 7F93  
                                                              STR_14 7F3C  
                                                              STR_30 7F93  
                                                              STR_22 7F9E  
                                                              STR_31 7F9E  
                                                              STR_15 7FD7  
                                                              STR_23 7EBB  
                                                              STR_16 7F5D  
                                                              STR_24 7F93  
                                                              STR_40 7F3F  
                                                              STR_32 7EDD  
                                                              STR_33 7F93  
                                                              STR_25 7F9E  
                                                              STR_41 7FC5  
                                                              STR_17 7F21  
                                                              STR_34 7F9E  
                                                              STR_50 7FF0  
                                                              STR_18 7F93  
                                                              STR_42 7F6B  
                                                              STR_26 7EEE  
                                                              STR_51 7FE2  
                                                              STR_27 7F93  
                                                              STR_43 7FA9  
                                                              STR_19 7F9E  
                                                              STR_35 7F10  
                                                              STR_28 7F9E  
                                                              STR_60 7FEC  
                                                              STR_52 7FE6  
                                                              STR_44 7F79  
                                                              STR_36 7E8F  
                                                    __end_of___awmod 6CE8  
                                                              STR_53 7FE6  
                                                              STR_61 7FF8  
                                                              STR_45 7FDC  
                                                              STR_29 7EFF  
                                                              STR_37 7EA5  
                                                              STR_54 7FE6  
                                                              STR_62 7FF4  
                                                              STR_38 7E8F  
                                                              STR_70 7FE1  
                                                              STR_46 7E79  
                                                              STR_47 7E79  
                                                              STR_39 7EA5  
                                                              STR_63 7FFC  
                                                              STR_55 7FF8  
                                                              STR_71 7FF2  
                                                              STR_64 7FE6  
                                                              STR_72 7FF6  
                                                              STR_56 7FFA  
                                                              STR_48 7FE4  
                                                              STR_49 7FE4  
                                                              STR_65 7FE6  
                                                              STR_57 7FE8  
                                                              STR_58 7FF4  
                                                              STR_66 7FEA  
                                                              STR_67 7FF6  
                                                              STR_59 7FF6  
                                                              STR_68 7FFC  
                                                              STR_69 7FEE  
                                                    __end_of___flmul 1770  
                                                    __end_of___flsub 6720  
                                                    __end_of___fltol 7150  
                                                    __end_of___lldiv 6A74  
                                                    ___awdiv@divisor 0009  
                                                    __end_of___llmod 69B6  
                                                    __end_of___lwdiv 6914  
                                                    __end_of___lwmod 6886  
                                                    ___awdiv@counter 000B  
                                                              _PORTA 000F80  
                                                              _PORTB 000F81  
                                                              _PORTD 000F83  
                                                              _PORTE 000F84  
                                                              _TRISA 000F92  
                                                              _TRISB 000F93  
                                                              _TRISD 000F95  
                                                              _TRISE 000F96  
                                                      __CFG_WRT0$OFF 000000  
                                                      __CFG_WRT1$OFF 000000  
                                                      __CFG_WRT2$OFF 000000  
                                                      __CFG_WRT3$OFF 000000  
                                                     __CFG_EBTR0$OFF 000000  
                                                     __CFG_EBTR1$OFF 000000  
                                                     __CFG_EBTR2$OFF 000000  
                                                     __CFG_EBTR3$OFF 000000  
                                                    __end_of_ini_LCD 6792  
                                                      __CFG_WRTB$OFF 000000  
                                                      __CFG_WRTC$OFF 000000  
                                                      __CFG_WRTD$OFF 000000  
                                                    __end_of_ins_LCD 654C  
                                                     __CFG_EBTRB$OFF 000000  
                                                        ins_LCD@dato 0002  
                                                              _binco 0089  
                                                    __end_of_dpowers 7E55  
                                                              _floor 72AA  
                                                              _ldexp 7150  
                                                              _frexp 6B36  
                                                              _errno 00B0  
                                                              _scale 0E3C  
                                                    __end_of_isdigit 6652  
                                                              tablat 000FF5  
                                                              pow@yi 00DD  
                                                              status 000FD8  
                                                    __end_of_sprintf 28C4  
                                                        _tuputamadre 00B2  
                                                    ___lbdiv@divisor 0001  
                                                    ___lbdiv@counter 0003  
                                                        exp@exponent 00C9  
                                                        ldexp@newexp 007B  
                                                    __initialization 6694  
                                                        log@exponent 007B  
                                                       __end_of_main 4000  
                                                             ??_main 00F0  
                                                      __activetblptr 000002  
                                               __size_of__tdiv_to_l_ 018A  
                                                    __CFG_CCP2MUX$ON 000000  
                                                             _ADCON1 000FC1  
                                                             ?_floor 0067  
                                                             ?_ldexp 0077  
                                                             ?_frexp 0029  
                                                   ___llmod@dividend 000E  
                                                             ?_scale 004A  
                                                   ___awdiv@dividend 0007  
                                                       ?_nombresbaby 0001  
                                                     __CFG_WDTPS$128 000000  
                                                   __end_of___xxtofl 7AB8  
                                                   __end_of_dato_LCD 6570  
                                                   __end_of__powers_ 7DD1  
                                                             ___flge 6EF2  
                                                             ___fleq 6A74  
                                                          ??___fladd 005F  
                                                             ___wmul 6570  
                                                          ??___fldiv 0009  
                                                          ??___awdiv 000B  
                                                          ??___lbdiv 0002  
                                                          ??___flneg 0005  
                                                          ??___awmod 0005  
                                                          ??___flmul 0039  
                                                          ??___flsub 006F  
                                                          ??___fltol 0057  
                                                          ??___lldiv 0009  
                                                             _bincor 0080  
                                                          ??___llmod 0016  
                                                             _enable 6514  
                                                          ??___lwdiv 000A  
                                                          ??___lwmod 0005  
                                                             _buffer 0104  
                                                             _fround 7AB8  
                                                             clear_0 66BA  
                                                             clear_1 66C6  
                                                   ___awdiv@quotient 000D  
                                                    ___awmod@divisor 0003  
                                                    ___awmod@counter 0005  
                                                          ??_ini_LCD 0001  
                                                             floor@i 006B  
                                                             floor@x 0067  
                                                          ??_ins_LCD 0001  
                                                          ??_isdigit 0001  
                                               __end_of_conf_puertos 65D4  
                                                       __mediumconst 7D9C  
                                                             tblptrh 000FF7  
                                                             tblptrl 000FF6  
                                                             tblptru 000FF8  
                                                          ??_sprintf 006F  
                                                   ___lbdiv@dividend 0002  
                                                         ___flge@ff1 0001  
                                                         ___flge@ff2 0005  
                                                       ___xxtofl@arg 0019  
                                                   __end_ofexp@coeff 7E2D  
                                                       ___xxtofl@exp 0018  
                                                       ___xxtofl@val 000F  
                                                         ___fleq@ff1 001D  
                                                         ___fleq@ff2 0021  
                                                   __end_oflog@coeff 7E79  
                                                         __accesstop 0080  
                                            __end_of__initialization 66CC  
                                                         ___flneg@f1 0001  
                                                       eval_poly@res 0073  
                                                      ___rparam_used 000001  
                                                         ___fltol@f1 0053  
                                                     __pcstackCOMRAM 0001  
                                                       __pidataBANK1 000B  
                                                      __end_of_floor 7408  
                                                      __end_of_ldexp 72AA  
                                                      __end_of_frexp 6C0C  
                                                      __end_of_scale 12CC  
                                                   ___lbdiv@quotient 0004  
                                                         __div_to_l_ 7408  
                                                    __div_to_l_@exp1 000E  
                                                            ??_floor 006B  
                                                            ??_ldexp 007D  
                                                    __div_to_l_@cntr 000D  
                                                            ??_frexp 002F  
                                                            ??_scale 004E  
                                                    __div_to_l_@quot 0009  
                                                         __pbssBANK0 0080  
                                                         __pbssBANK1 0100  
                                                 __size_of_eval_poly 011A  
                                                      __div_to_l_@f1 0001  
                                                      __div_to_l_@f2 0005  
                                                            ?___flge 0001  
                                                            ?___fleq 001D  
                                                            ?___wmul 0001  
                                                            ?_enable 0001  
                                                            ?_fround 004A  
                                                          ?___xxtofl 000F  
                                                          ?_dato_LCD 0001  
                                                 __size_of_write_LCD 003E  
                                               __size_of_nombresbaby 045A  
                                                  __end_of__npowers_ 7E05  
                                                            __Hparam 0000  
                                                            __Lparam 0000  
                                                    __size_of___flge 0128  
                                                    __size_of___fleq 00C2  
                                                            ___fladd 1770  
                                                            ___fldiv 05B0  
                                                            ___awdiv 6CE8  
                                                            ___lbdiv 6792  
                                                            ___flneg 6652  
                                                            ___awmod 6C0C  
                                                            ___flmul 12CC  
                                                            ___flsub 66D6  
                                                            ___fltol 701A  
                                                            ___lldiv 69B6  
                                                    __size_of___wmul 002A  
                                                            ___llmod 6914  
                                                            ___lwdiv 6886  
                                                         _fround$978 0052  
                                                         _fround$979 004E  
                                                            ___lwmod 6808  
                                                    __size_of_enable 0014  
                                                            _exp$984 00C5  
                                              __size_of_conf_puertos 003A  
                                                            __pcinit 6694  
                                                  __end_of_eval_poly 6EF2  
                                                    __size_of_fround 02E4  
                                                            __ramtop 0600  
                                                            __ptext0 28C4  
                                                            __ptext1 0010  
                                                            __ptext2 7712  
                                                            __ptext3 029A  
                                                            __ptext4 7150  
                                                            __ptext5 72AA  
                                                            __ptext6 6B36  
                                                            __ptext7 6DD8  
                                                            __ptext8 05B0  
                                                            __ptext9 09E2  
                                                            _ini_LCD 6720  
                                                            _pow$982 00D4  
                                                            _pow$983 00D8  
                                                            _ins_LCD 6528  
                                                        ?__div_to_l_ 0001  
                                                            _dpowers 7E2D  
                                                       __size_of_exp 0316  
                                                       __size_of_log 01AE  
                                                            _isdigit 6612  
                                                       __size_of_pow 028A  
                                                         ??___xxtofl 0013  
                                                   ___awmod@dividend 0001  
                                                         ??_dato_LCD 0001  
                                                            _sprintf 1D18  
                                               end_of_initialization 66CC  
                                                            exp@sign 00CB  
                                                      __Lmediumconst 7D9C  
                                                    ___lldiv@divisor 0005  
                                                       write_LCD@tam 0003  
                                                            pow@sign 00DC  
                                                    ___lldiv@counter 000D  
                                                       _conf_puertos 659A  
                                                            postdec1 000FE5  
                                                            postdec2 000FDD  
                                                            postinc0 000FEE  
                                                            postinc2 000FDE  
                                                     __tdiv_to_l_@f1 0001  
                                                     __tdiv_to_l_@f2 0005  
                                                      ??__tdiv_to_l_ 0009  
                                                  __end_of_write_LCD 6612  
                                                        ___fladd@grs 0066  
                                                      ___xxtofl@sign 0017  
                                                        ___fldiv@grs 0014  
                                                        ___fldiv@rem 000D  
                                                        ___flmul@grs 003E  
                                                __size_of__div_to_l_ 0180  
                                                     __end_of___flge 701A  
                                                     __end_of___fleq 6B36  
                                                     __end_of___wmul 659A  
                                                     __end_of_enable 6528  
                                                     __end_of_fround 7D9C  
                                                         floor@expon 006F  
                                                start_initialization 6694  
                                                         eval_poly@d 006B  
                                                         eval_poly@n 006D  
                                                         eval_poly@x 0067  
                                                         ldexp@value 0077  
                                                __end_of__tdiv_to_l_ 7712  
                                                        __end_of_exp 05B0  
                                                        __end_of_log 78C0  
                                                        __end_of_pow 029A  
                                                         frexp@value 0029  
                                                    ___llmod@divisor 0012  
                                                    ___llmod@counter 0016  
                                                           ??___flge 0009  
                                                           ??___fleq 0025  
                                                           ??___wmul 0005  
                                                           ??_enable 0001  
                                                        __pdataBANK1 012C  
                                                           ??_fround 004E  
                                                      sprintf@tmpval 00E1  
                                                          ___fladd@a 005B  
                                                          ___fladd@b 0057  
                                                         fround@prec 0056  
                                                          ___fldiv@a 0005  
                                                          ___fldiv@b 0001  
                                                          ___flmul@a 0035  
                                                          ___flmul@b 0031  
                                                          ___flsub@a 006B  
                                                          ___flsub@b 0067  
                                                      __pcstackBANK0 00C1  
                                                  __size_of___xxtofl 01F8  
                                                  __size_of_dato_LCD 0024  
                                                        sprintf@ccnt 00DB  
                                                        sprintf@flag 00DD  
                                                        sprintf@eexp 00DF  
                                                        sprintf@fval 00E9  
                                                        sprintf@prec 00ED  
                                                   ___lwdiv@dividend 0006  
                                                      __pmediumconst 7D9C  
                                                       dato_LCD@dato 0002  
                                                           ?___fladd 0057  
                                                           ?___fldiv 0001  
                                                           ?___awdiv 0007  
                                                           ?___lbdiv 0001  
                                                           ?___flneg 0001  
                                                           ?___awmod 0001  
                                                           ?___flmul 0031  
                                                           ?___flsub 0067  
                                                           ?___fltol 0053  
                                                           ?___lldiv 0001  
                                                           ?___llmod 000E  
                                                          __npowers_ 7DD1  
                                                           ?___lwdiv 0006  
                                                           ?___lwmod 0001  
                                                        __tdiv_to_l_ 7588  
                                                           ?_ini_LCD 0001  
                                                       ??__div_to_l_ 0009  
                                                           ?_ins_LCD 0001  
                                                           ?_isdigit 0001  
                                                          _eval_poly 6DD8  
                                                          _scale$980 004E  
                                                   ___lwdiv@quotient 000A  
                                                           ?_sprintf 00C1  
                                                     __size_of_floor 015E  
                                                     __size_of_ldexp 015A  
                                                     __size_of_frexp 00D6  
                                                     __size_of_scale 0490  
                                                      ??_nombresbaby 0073  
                                                     ___wmul@product 0005  
                                                 __end_of__div_to_l_ 7588  
                                                  ___wmul@multiplier 0001  
                                                         ?_eval_poly 0067  
                                                          _write_LCD 65D4  
                                                          copy_data0 66A8  
                                                          frexp@eptr 002D  
                                                           __Hrparam 0000  
                                                __end_of_nombresbaby 0E3C  
                                                           __Lrparam 0000  
                                                   __size_of___fladd 05A8  
                                                   __size_of___fldiv 0432  
                                                   __size_of___awdiv 00F0  
                                                   __size_of___lbdiv 0076  
                                                   __size_of___flneg 0042  
                                                   __size_of___awmod 00DC  
                                                   __size_of___flmul 04A4  
                                                   __size_of___flsub 004A  
                                                   __size_of___fltol 0136  
                                                   __size_of___lldiv 00BE  
                                                   __size_of___llmod 00A2  
                                                   __size_of___lwdiv 008E  
                                                   __size_of___lwmod 007E  
                                                        _isdigit$703 0002  
                                                   __size_of_ini_LCD 0072  
                                                         sprintf@val 00E5  
                                                   __size_of_ins_LCD 0024  
                                                           ___xxtofl 78C0  
                                                           _dato_LCD 654C  
                                                   __size_of_isdigit 0040  
                                                           _main$975 00FA  
                                                           _main$976 00F2  
                                                           _main$977 00F6  
                                                    ___lwdiv@divisor 0008  
                                                    ___lwdiv@counter 000C  
                                                         ?_write_LCD 0001  
                                                           __ptext10 65D4  
                                                           __ptext11 654C  
                                                           __ptext20 12CC  
                                                           __ptext12 1D18  
                                                           __ptext21 7588  
                                                           __ptext13 0E3C  
                                                           __ptext30 6652  
                                                           __ptext22 7408  
                                                           __ptext14 6C0C  
                                                           __ptext31 6EF2  
                                                           __ptext23 78C0  
                                                           __ptext15 6CE8  
                                                           __ptext32 6A74  
                                                           __ptext24 6570  
                                                           __ptext16 6612  
                                                           __ptext33 6528  
                                                           __ptext25 6914  
                                                           __ptext17 7AB8  
                                                           __ptext34 6720  
                                                           __ptext26 69B6  
                                                           __ptext18 6808  
                                                           __ptext35 6514  
                                                           __ptext27 701A  
                                                           __ptext19 6886  
                                                           __ptext36 659A  
                                                           __ptext28 66D6  
                                                           __ptext37 6792  
                                                           __ptext29 1770  
                                                           __powers_ 7D9D  
                                                   __size_of_sprintf 0BAC  
                                                      __size_of_main 173C  
                                                         write_LCD@i 0004  
                                                           exp@coeff 7E05  
                                                           log@coeff 7E55  
                                                        ??_eval_poly 006F  
                                                           isdigit@c 0003  
                                                           scale@scl 0052  
                                                          sprintf@ap 00D9  
                                                   __tdiv_to_l_@exp1 0011  
                                                   __tdiv_to_l_@cntr 0010  
                                                          sprintf@sp 00C1  
                                                   __tdiv_to_l_@quot 000C  
                                                        _nombresbaby 09E2  
                                                   ___lwmod@dividend 0001  
                                                   ___lldiv@dividend 0001  
                                                       ?__tdiv_to_l_ 0001  
                                                           sprintf@c 00EF  
                                                           sprintf@f 00C3  
                                                   ___lldiv@quotient 0009  
                                                    ___lwmod@divisor 0003  
                                                    ___lwmod@counter 0005  
                                                        ??_write_LCD 0003  
                                                      ___fladd@signs 0063  
                                                       ___fladd@aexp 0064  
                                                       ___fladd@bexp 0065  
                                                      ?_conf_puertos 0001  
